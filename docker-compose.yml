# üê≥ AI Swagger Bot - Docker Compose Configuration
#
# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
# - –í—Å—ñ —Å–µ—Ä–≤—ñ—Å–∏: docker-compose up -d
# - –¢—ñ–ª—å–∫–∏ Streamlit: docker-compose up streamlit -d
# - –¢—ñ–ª—å–∫–∏ CLI: docker-compose up cli -d
# - –¢—ñ–ª—å–∫–∏ –±–∞–∑–∞: docker-compose up postgres -d

services:
  # Streamlit Demo Service
  streamlit:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-swagger-bot-streamlit
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - PYTHONPATH=/app
    ports:
      - "8502:8501"
    volumes:
      - .:/app
      - ./.env:/app/.env:ro
    networks:
      - ai-swagger-bot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # CLI Service
  cli:
    build:
      context: .
      dockerfile: Dockerfile.cli
    container_name: ai-swagger-bot-cli
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CLICKONE_JWT_TOKEN=${CLICKONE_JWT_TOKEN}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - PYTHONPATH=/app
    volumes:
      - .:/app
      - ./.env:/app/.env:ro
    networks:
      - ai-swagger-bot-network
    stdin_open: true
    tty: true

  # PostgreSQL Database
  postgres:
    image: pgvector/pgvector:pg16
    container_name: ai-swagger-bot-postgres
    environment:
      - POSTGRES_DB=ai_swagger_bot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-real-db.sql:/docker-entrypoint-initdb.d/init-real-db.sql
    networks:
      - ai-swagger-bot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  ai-swagger-bot-network:
    driver: bridge
