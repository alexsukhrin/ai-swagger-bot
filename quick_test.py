#!/usr/bin/env python3
"""
–®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó CLI —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É
"""

import time

from cli_tester import APITester


def run_quick_test():
    """–ó–∞–ø—É—Å–∫ —à–≤–∏–¥–∫–æ–≥–æ —Ç–µ—Å—Ç—É"""
    print("üöÄ –®–í–ò–î–ö–ò–ô –¢–ï–°–¢ CLI –¢–ï–°–¢–ï–†–ê")
    print("=" * 50)

    tester = APITester()

    try:
        # 1. Health Check
        print("\n1Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É —Å–µ—Ä–≤—ñ—Å—É...")
        tester.health_check()
        time.sleep(1)

        # 2. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–µ–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        print("\n2Ô∏è‚É£ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–µ–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...")
        tester.create_demo_user()
        time.sleep(1)

        # 3. –ü–µ—Ä–µ–≥–ª—è–¥ –ø—Ä–æ–º–ø—Ç—ñ–≤
        print("\n3Ô∏è‚É£ –ü–µ—Ä–µ–≥–ª—è–¥ –ø—Ä–æ–º–ø—Ç—ñ–≤...")
        tester.get_prompts()
        time.sleep(1)

        # 4. –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø—Ä–æ–º–ø—Ç—ñ–≤
        print("\n4Ô∏è‚É£ –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø—Ä–æ–º–ø—Ç—ñ–≤...")
        tester.get_prompt_categories()
        time.sleep(1)

        # 5. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–º–ø—Ç—ñ–≤
        print("\n5Ô∏è‚É£ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–º–ø—Ç—ñ–≤...")
        tester.get_prompt_statistics()
        time.sleep(1)

        # 6. –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        print("\n6Ô∏è‚É£ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...")
        tester.get_user_info()
        time.sleep(1)

        # 7. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç—É
        print("\n7Ô∏è‚É£ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç—É...")
        tester.create_custom_prompt(
            "–¢–µ—Å—Ç–æ–≤–∏–π –ø—Ä–æ–º–ø—Ç",
            "–ü—Ä–æ–º–ø—Ç –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è CLI",
            "–¢–∏ –µ–∫—Å–ø–µ—Ä—Ç –∑ API. {user_query}",
            "user_defined",
        )
        time.sleep(1)

        # 8. –ü–æ—à—É–∫ –ø—Ä–æ–º–ø—Ç—ñ–≤
        print("\n8Ô∏è‚É£ –ü–æ—à—É–∫ –ø—Ä–æ–º–ø—Ç—ñ–≤...")
        tester.search_prompts("—Ç–µ—Å—Ç–æ–≤–∏–π")
        time.sleep(1)

        # 9. –ü—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –ø—Ä–æ–º–ø—Ç—ñ–≤
        print("\n9Ô∏è‚É£ –ü—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –ø—Ä–æ–º–ø—Ç—ñ–≤...")
        tester.get_prompt_suggestions("–°—Ç–≤–æ—Ä–∏ –Ω–æ–≤—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é")
        time.sleep(1)

        # 10. –°—Ç–∞—Ç—É—Å
        print("\nüîü –°—Ç–∞—Ç—É—Å...")
        tester.show_status()

        print("\n‚úÖ –®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
        print("üí° –¢–µ–ø–µ—Ä –º–æ–∂–µ—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ CLI —Ç–µ—Å—Ç–µ—Ä –¥–ª—è –ø–æ–≤–Ω–æ–≥–æ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è")

    except Exception as e:
        print(f"\n‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: {e}")
        print("üí° –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ, —á–∏ –∑–∞–ø—É—â–µ–Ω–∏–π API —Å–µ—Ä–≤–µ—Ä")


if __name__ == "__main__":
    run_quick_test()
