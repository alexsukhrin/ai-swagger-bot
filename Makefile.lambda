# Makefile –¥–ª—è AWS Lambda —Ñ—É–Ω–∫—Ü—ñ–π

.PHONY: help install deploy deploy-prod deploy-staging remove remove-prod remove-staging logs logs-prod logs-staging invoke invoke-local test-local package info info-prod info-staging build-docker test-docker clean

help: ## –ü–æ–∫–∞–∑–∞—Ç–∏ –¥–æ–≤—ñ–¥–∫—É
	@echo "–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

install: ## –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
	@echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª—é—é –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ..."
	npm install
	pip install -r requirements.txt

deploy: ## –†–æ–∑–≥–æ—Ä–Ω—É—Ç–∏ –Ω–∞ dev stage
	@echo "üöÄ –†–æ–∑–≥–æ—Ä—Ç–∞—é –Ω–∞ dev stage..."
	serverless deploy

deploy-prod: ## –†–æ–∑–≥–æ—Ä–Ω—É—Ç–∏ –Ω–∞ production stage
	@echo "üöÄ –†–æ–∑–≥–æ—Ä—Ç–∞—é –Ω–∞ production stage..."
	serverless deploy --stage prod

deploy-staging: ## –†–æ–∑–≥–æ—Ä–Ω—É—Ç–∏ –Ω–∞ staging stage
	@echo "üöÄ –†–æ–∑–≥–æ—Ä—Ç–∞—é –Ω–∞ staging stage..."
	serverless deploy --stage staging

remove: ## –í–∏–¥–∞–ª–∏—Ç–∏ dev deployment
	@echo "üóëÔ∏è –í–∏–¥–∞–ª—è—é dev deployment..."
	serverless remove

remove-prod: ## –í–∏–¥–∞–ª–∏—Ç–∏ production deployment
	@echo "üóëÔ∏è –í–∏–¥–∞–ª—è—é production deployment..."
	serverless remove --stage prod

remove-staging: ## –í–∏–¥–∞–ª–∏—Ç–∏ staging deployment
	@echo "üóëÔ∏è –í–∏–¥–∞–ª—è—é staging deployment..."
	serverless remove --stage staging

logs: ## –ü–æ–∫–∞–∑–∞—Ç–∏ –ª–æ–≥–∏ dev stage
	@echo "üìã –ü–æ–∫–∞–∑—É—é –ª–æ–≥–∏ dev stage..."
	serverless logs -f api

logs-prod: ## –ü–æ–∫–∞–∑–∞—Ç–∏ –ª–æ–≥–∏ production stage
	@echo "üìã –ü–æ–∫–∞–∑—É—é –ª–æ–≥–∏ production stage..."
	serverless logs -f api --stage prod

logs-staging: ## –ü–æ–∫–∞–∑–∞—Ç–∏ –ª–æ–≥–∏ staging stage
	@echo "üìã –ü–æ–∫–∞–∑—É—é –ª–æ–≥–∏ staging stage..."
	serverless logs -f api --stage staging

invoke: ## –í–∏–∫–ª–∏–∫–∞—Ç–∏ Lambda —Ñ—É–Ω–∫—Ü—ñ—é
	@echo "üîß –í–∏–∫–ª–∏–∫–∞—é Lambda —Ñ—É–Ω–∫—Ü—ñ—é..."
	serverless invoke -f api

invoke-local: ## –í–∏–∫–ª–∏–∫–∞—Ç–∏ Lambda —Ñ—É–Ω–∫—Ü—ñ—é –ª–æ–∫–∞–ª—å–Ω–æ
	@echo "üîß –í–∏–∫–ª–∏–∫–∞—é Lambda —Ñ—É–Ω–∫—Ü—ñ—é –ª–æ–∫–∞–ª—å–Ω–æ..."
	serverless invoke local -f api

test-local: ## –¢–µ—Å—Ç—É–≤–∞—Ç–∏ –ª–æ–∫–∞–ª—å–Ω–æ –∑ test-event.json
	@echo "üß™ –¢–µ—Å—Ç—É—é –ª–æ–∫–∞–ª—å–Ω–æ..."
	serverless invoke local -f api --path test-event.json

package: ## –°—Ç–≤–æ—Ä–∏—Ç–∏ deployment package
	@echo "üì¶ –°—Ç–≤–æ—Ä—é—é deployment package..."
	serverless package

info: ## –ü–æ–∫–∞–∑–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ dev deployment
	@echo "‚ÑπÔ∏è –ü–æ–∫–∞–∑—É—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ dev deployment..."
	serverless info

info-prod: ## –ü–æ–∫–∞–∑–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ production deployment
	@echo "‚ÑπÔ∏è –ü–æ–∫–∞–∑—É—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ production deployment..."
	serverless info --stage prod

info-staging: ## –ü–æ–∫–∞–∑–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ staging deployment
	@echo "‚ÑπÔ∏è –ü–æ–∫–∞–∑—É—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ staging deployment..."
	serverless info --stage staging

build-docker: ## –ó–±—É–¥—É–≤–∞—Ç–∏ Docker image –¥–ª—è Lambda
	@echo "üê≥ –ó–±—É—é–¥—É—é Docker image –¥–ª—è Lambda..."
	docker build -f Dockerfile.lambda -t ai-swagger-bot-lambda .

test-docker: ## –¢–µ—Å—Ç—É–≤–∞—Ç–∏ Docker image –ª–æ–∫–∞–ª—å–Ω–æ
	@echo "üß™ –¢–µ—Å—Ç—É—é Docker image –ª–æ–∫–∞–ª—å–Ω–æ..."
	docker run -p 9000:8080 ai-swagger-bot-lambda

test-docker-compose: ## –¢–µ—Å—Ç—É–≤–∞—Ç–∏ –∑ docker-compose
	@echo "üß™ –¢–µ—Å—Ç—É—é –∑ docker-compose..."
	docker-compose -f docker-compose.lambda.yml up --build

clean: ## –û—á–∏—Å—Ç–∏—Ç–∏ —Ç–∏–º—á–∞—Å–æ–≤—ñ —Ñ–∞–π–ª–∏
	@echo "üßπ –û—á–∏—â–∞—é —Ç–∏–º—á–∞—Å–æ–≤—ñ —Ñ–∞–π–ª–∏..."
	rm -rf .serverless
	rm -rf node_modules
	rm -rf .python_packages
	find . -type d -name "__pycache__" -exec rm -rf {} +
	find . -type f -name "*.pyc" -delete

# –î–æ–¥–∞—Ç–∫–æ–≤—ñ –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è —Ä–æ–∑—Ä–æ–±–∫–∏
dev-install: ## –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ dev –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
	@echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª—é—é dev –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ..."
	npm install
	pip install -r requirements-dev.txt

dev-logs: ## –ü–æ–∫–∞–∑–∞—Ç–∏ –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ
	@echo "üìã –ü–æ–∫–∞–∑—É—é –ª–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ..."
	serverless logs -f api -t

# –ö–æ–º–∞–Ω–¥–∏ –¥–ª—è CI/CD
ci-deploy: ## CI/CD deployment
	@echo "üöÄ CI/CD deployment..."
	serverless deploy --stage ${STAGE:-dev} --verbose

ci-remove: ## CI/CD removal
	@echo "üóëÔ∏è CI/CD removal..."
	serverless remove --stage ${STAGE:-dev} --verbose 