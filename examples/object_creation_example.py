"""
–ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤ –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è–º –ø–æ–ª—ñ–≤.
"""

import sys
import os
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
load_dotenv()

sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from src.interactive_api_agent import InteractiveSwaggerAgent

def test_object_creation():
    """–¢–µ—Å—Ç—É—î —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤ –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è–º –ø–æ–ª—ñ–≤."""
    
    print("üöÄ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤ –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è–º")
    print("=" * 60)
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –∞–≥–µ–Ω—Ç–∞
    agent = InteractiveSwaggerAgent(
        swagger_spec_path="examples/swagger_specs/shop_api.json",
        enable_api_calls=False  # –ë–µ–∑ –≤–∏–∫–ª–∏–∫—ñ–≤ API –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó
    )
    
    # –¢–µ—Å—Ç–æ–≤—ñ –∑–∞–ø–∏—Ç–∏ –Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è
    creation_queries = [
        "–°—Ç–≤–æ—Ä–∏ –Ω–æ–≤—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞",
        "–°—Ç–≤–æ—Ä–∏ —Ç–æ–≤–∞—Ä –∑ –Ω–∞–∑–≤–æ—é –¢–µ–ª–µ—Ñ–æ–Ω",
        "–°—Ç–≤–æ—Ä–∏ —Ç–æ–≤–∞—Ä –∑ –Ω–∞–∑–≤–æ—é –ù–æ—É—Ç–±—É–∫",
        "–°—Ç–≤–æ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –û–¥—è–≥",
        "–°—Ç–≤–æ—Ä–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ü–≤–∞–Ω –ü–µ—Ç—Ä–µ–Ω–∫–æ",
        "–î–æ–¥–∞–π –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä –∑ –Ω–∞–∑–≤–æ—é –ü–ª–∞–Ω—à–µ—Ç"
    ]
    
    print("üìù –¢–µ—Å—Ç–æ–≤—ñ –∑–∞–ø–∏—Ç–∏ –Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è:")
    for i, query in enumerate(creation_queries, 1):
        print(f"  {i}. {query}")
    
    print("\n" + "="*60 + "\n")
    
    # –¢–µ—Å—Ç—É—î–º–æ –∫–æ–∂–µ–Ω –∑–∞–ø–∏—Ç
    for i, query in enumerate(creation_queries, 1):
        print(f"üîß –¢–ï–°–¢ {i}: {query}")
        print("-" * 40)
        
        # –û–±—Ä–æ–±–ª—è—î–º–æ –∑–∞–ø–∏—Ç
        result = agent.process_interactive_query(query, f"test_user_{i}")
        
        print(f"üìä –°—Ç–∞—Ç—É—Å: {result.get('status', 'unknown')}")
        print(f"‚úÖ –£—Å–ø—ñ—Ö: {result.get('success', False)}")
        print(f"ü§ñ –í—ñ–¥–ø–æ–≤—ñ–¥—å:")
        print(result.get('response', '–ù–µ–º–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ'))
        print("\n" + "="*60 + "\n")

def test_error_handling():
    """–¢–µ—Å—Ç—É—î –æ–±—Ä–æ–±–∫—É –ø–æ–º–∏–ª–æ–∫ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ."""
    
    print("üîÑ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ")
    print("=" * 50)
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –∞–≥–µ–Ω—Ç–∞
    agent = InteractiveSwaggerAgent(
        swagger_spec_path="examples/swagger_specs/shop_api.json",
        enable_api_calls=False
    )
    
    # –¢–µ—Å—Ç–æ–≤—ñ –∑–∞–ø–∏—Ç–∏ –∑ –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∏–º–∏ –ø–æ–º–∏–ª–∫–∞–º–∏
    error_queries = [
        "–°—Ç–≤–æ—Ä–∏ —Ç–æ–≤–∞—Ä",  # –ë–µ–∑ –Ω–∞–∑–≤–∏
        "–°—Ç–≤–æ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é",  # –ë–µ–∑ –Ω–∞–∑–≤–∏
        "–°—Ç–≤–æ—Ä–∏ —â–æ—Å—å –Ω–µ–∑—Ä–æ–∑—É–º—ñ–ª–µ",  # –ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–∏–ø
        "–°—Ç–≤–æ—Ä–∏ —Ç–æ–≤–∞—Ä –∑ —Ü—ñ–Ω–æ—é 1000",  # –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç
    ]
    
    for i, query in enumerate(error_queries, 1):
        print(f"üîß –¢–ï–°–¢ –ü–û–ú–ò–õ–ö–ò {i}: {query}")
        print("-" * 40)
        
        result = agent.process_interactive_query(query, f"error_user_{i}")
        
        print(f"üìä –°—Ç–∞—Ç—É—Å: {result.get('status', 'unknown')}")
        print(f"‚úÖ –£—Å–ø—ñ—Ö: {result.get('success', False)}")
        print(f"ü§ñ –í—ñ–¥–ø–æ–≤—ñ–¥—å:")
        print(result.get('response', '–ù–µ–º–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ'))
        print("\n" + "="*50 + "\n")

def test_conversation_context():
    """–¢–µ—Å—Ç—É—î –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É —Ä–æ–∑–º–æ–≤–∏."""
    
    print("üí¨ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É —Ä–æ–∑–º–æ–≤–∏")
    print("=" * 50)
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –∞–≥–µ–Ω—Ç–∞
    agent = InteractiveSwaggerAgent(
        swagger_spec_path="examples/swagger_specs/shop_api.json",
        enable_api_calls=False
    )
    
    user_id = "context_test_user"
    
    # –°–∏–º—É–ª—é—î–º–æ –¥—ñ–∞–ª–æ–≥
    conversation_steps = [
        "–ü–æ–∫–∞–∂–∏ –≤—Å—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó",
        "–°—Ç–≤–æ—Ä–∏ —Ç–æ–≤–∞—Ä –∑ –Ω–∞–∑–≤–æ—é –¢–µ–ª–µ—Ñ–æ–Ω",
        "–°—Ç–≤–æ—Ä–∏ —â–µ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä –∑ –Ω–∞–∑–≤–æ—é –ù–∞–≤—É—à–Ω–∏–∫–∏",
        "–°—Ç–≤–æ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ê–∫—Å–µ—Å—É–∞—Ä–∏"
    ]
    
    for i, query in enumerate(conversation_steps, 1):
        print(f"üí¨ –ö–†–û–ö {i}: {query}")
        print("-" * 30)
        
        result = agent.process_interactive_query(query, user_id)
        
        print(f"üìä –°—Ç–∞—Ç—É—Å: {result.get('status', 'unknown')}")
        print(f"‚úÖ –£—Å–ø—ñ—Ö: {result.get('success', False)}")
        print(f"ü§ñ –í—ñ–¥–ø–æ–≤—ñ–¥—å:")
        print(result.get('response', '–ù–µ–º–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ'))
        print("\n" + "="*50 + "\n")

def show_expected_behavior():
    """–ü–æ–∫–∞–∑—É—î –æ—á—ñ–∫—É–≤–∞–Ω—É –ø–æ–≤–µ–¥—ñ–Ω–∫—É —Å–∏—Å—Ç–µ–º–∏."""
    
    print("üéØ –û—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–≤–µ–¥—ñ–Ω–∫–∞ —Å–∏—Å—Ç–µ–º–∏")
    print("=" * 50)
    
    expected_behaviors = {
        "–°—Ç–≤–æ—Ä–∏ —Ç–æ–≤–∞—Ä –∑ –Ω–∞–∑–≤–æ—é –¢–µ–ª–µ—Ñ–æ–Ω": {
            "auto_fill": {
                "name": "–¢–µ–ª–µ—Ñ–æ–Ω",
                "description": "–°—É—á–∞—Å–Ω–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω –∑ –≤–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω–∏–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏",
                "price": 15000.00,
                "category": "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞",
                "brand": "Samsung",
                "model": "Galaxy S23",
                "color": "–ß–æ—Ä–Ω–∏–π",
                "in_stock": True
            },
            "response": """
‚úÖ **–¢–æ–≤–∞—Ä —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ!**

üìã **–î–µ—Ç–∞–ª—ñ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è:**
‚Ä¢ –ù–∞–∑–≤–∞: –¢–µ–ª–µ—Ñ–æ–Ω
‚Ä¢ –û–ø–∏—Å: –°—É—á–∞—Å–Ω–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω –∑ –≤–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω–∏–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏
‚Ä¢ –¶—ñ–Ω–∞: 15000.00 UAH
‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä—ñ—è: –ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞
‚Ä¢ –ë—Ä–µ–Ω–¥: Samsung
‚Ä¢ –ú–æ–¥–µ–ª—å: Galaxy S23
‚Ä¢ –ö–æ–ª—ñ—Ä: –ß–æ—Ä–Ω–∏–π
‚Ä¢ –°—Ç–∞—Ç—É—Å: –í –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ

üîó **API –ó–∞–ø–∏—Ç:**
‚Ä¢ URL: /api/products
‚Ä¢ –ú–µ—Ç–æ–¥: POST
‚Ä¢ –°—Ç–∞—Ç—É—Å: ‚úÖ –£—Å–ø—ñ—à–Ω–æ
            """
        },
        
        "–°—Ç–≤–æ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞": {
            "auto_fill": {
                "name": "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞",
                "description": "–ö–∞—Ç–µ–≥–æ—Ä—ñ—è –¥–ª—è –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤ —Ç–∞ –≥–∞–¥–∂–µ—Ç—ñ–≤",
                "slug": "electronics",
                "status": "active",
                "icon": "üì±"
            },
            "response": """
‚úÖ **–ö–∞—Ç–µ–≥–æ—Ä—ñ—è —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–∞!**

üìã **–î–µ—Ç–∞–ª—ñ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è:**
‚Ä¢ –ù–∞–∑–≤–∞: –ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞
‚Ä¢ –û–ø–∏—Å: –ö–∞—Ç–µ–≥–æ—Ä—ñ—è –¥–ª—è –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤ —Ç–∞ –≥–∞–¥–∂–µ—Ç—ñ–≤
‚Ä¢ Slug: electronics
‚Ä¢ –°—Ç–∞—Ç—É—Å: active
‚Ä¢ –Ü–∫–æ–Ω–∫–∞: üì±

üîó **API –ó–∞–ø–∏—Ç:**
‚Ä¢ URL: /api/categories
‚Ä¢ –ú–µ—Ç–æ–¥: POST
‚Ä¢ –°—Ç–∞—Ç—É—Å: ‚úÖ –£—Å–ø—ñ—à–Ω–æ
            """
        },
        
        "–ü–æ–º–∏–ª–∫–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó": {
            "error": "Field 'price' is required",
            "response": """
‚ùå **–ü–æ–º–∏–ª–∫–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ:**
Field 'price' is required

üí° **–ó–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ:**
‚Ä¢ –ù–∞–∑–≤–∞: –¢–µ–ª–µ—Ñ–æ–Ω
‚Ä¢ –û–ø–∏—Å: –°—É—á–∞—Å–Ω–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω...
‚Ä¢ –¶—ñ–Ω–∞: 15000.00 UAH

üîÑ **–†—ñ—à–µ–Ω–Ω—è:**
–ë—É–¥—å –ª–∞—Å–∫–∞, —É—Ç–æ—á–Ω—ñ—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –ø–æ–ª—è –∞–±–æ —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.
            """
        }
    }
    
    for query, behavior in expected_behaviors.items():
        print(f"\nüìù –ó–ê–ü–ò–¢: {query}")
        print("üì§ –û–ß–Ü–ö–£–í–ê–ù–ê –í–Ü–î–ü–û–í–Ü–î–¨:")
        
        if "auto_fill" in behavior:
            print("üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è:")
            for key, value in behavior["auto_fill"].items():
                print(f"  ‚Ä¢ {key}: {value}")
        
        if "response" in behavior:
            print("ü§ñ –í—ñ–¥–ø–æ–≤—ñ–¥—å:")
            print(behavior["response"])
        
        if "error" in behavior:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞:")
            print(behavior["error"])
        
        print("-" * 50)

def main():
    """–û—Å–Ω–æ–≤–Ω–∏–π –ø—Ä–∏–∫–ª–∞–¥."""
    
    print("üöÄ –ü—Ä–∏–∫–ª–∞–¥ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤ –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è–º –ø–æ–ª—ñ–≤")
    print("=" * 70)
    
    # –¢–µ—Å—Ç—É—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤
    test_object_creation()
    
    # –¢–µ—Å—Ç—É—î–º–æ –æ–±—Ä–æ–±–∫—É –ø–æ–º–∏–ª–æ–∫
    test_error_handling()
    
    # –¢–µ—Å—Ç—É—î–º–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–æ–∑–º–æ–≤–∏
    test_conversation_context()
    
    # –ü–æ–∫–∞–∑—É—î–º–æ –æ—á—ñ–∫—É–≤–∞–Ω—É –ø–æ–≤–µ–¥—ñ–Ω–∫—É
    show_expected_behavior()
    
    print("\n‚úÖ –ü—Ä–∏–∫–ª–∞–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main()
