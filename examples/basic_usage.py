"""
–ü—Ä–æ—Å—Ç–∏–π –ø—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è Swagger –∞–≥–µ–Ω—Ç–∞.
"""

import sys
import os
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –∑ .env —Ñ–∞–π–ª—É
load_dotenv()

sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from src.interactive_api_agent import InteractiveSwaggerAgent as SwaggerAgent


def main():
    """–û—Å–Ω–æ–≤–Ω–∏–π –ø—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è."""
    
    print("üöÄ –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è AI Swagger Bot")
    print("=" * 50)
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å API –∫–ª—é—á–∞
    if not os.getenv('OPENAI_API_KEY'):
        print("‚ùå OPENAI_API_KEY –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
        print("üí° –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –∑–º—ñ–Ω–Ω—É —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞:")
        print("   export OPENAI_API_KEY=your_api_key_here")
        print("   –∞–±–æ —Å—Ç–≤–æ—Ä—ñ—Ç—å .env —Ñ–∞–π–ª –∑ OPENAI_API_KEY=your_key")
        return
    
    # 1. –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∞–≥–µ–Ω—Ç–∞
    print("\n1Ô∏è‚É£ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∞–≥–µ–Ω—Ç–∞...")
    agent = SwaggerAgent(
        swagger_spec_path="examples/swagger_specs/shop_api.json",
        enable_api_calls=False  # –ë–µ–∑ –≤–∏–∫–ª–∏–∫—ñ–≤ API –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó
    )
    print("‚úÖ –ê–≥–µ–Ω—Ç –≥–æ—Ç–æ–≤–∏–π!")
    
    # 2. –ü—Ä–∏–∫–ª–∞–¥ –∑–∞–ø–∏—Ç—É
    print("\n2Ô∏è‚É£ –û–±—Ä–æ–±–∫–∞ –∑–∞–ø–∏—Ç—É...")
    user_query = "–î–æ–¥–∞–π —Ç–æ–≤–∞—Ä: —Å–∏–Ω—è —Å—É–∫–Ω—è, —Ä–æ–∑–º—ñ—Ä 22, –∫—ñ–ª—å–∫—ñ—Å—Ç—å 10"
    print(f"üìù –ó–∞–ø–∏—Ç: {user_query}")
    
    response = agent.process_interactive_query(user_query)
    print(f"ü§ñ –í—ñ–¥–ø–æ–≤—ñ–¥—å:\n{response['response']}")
    print(f"üìä –°—Ç–∞—Ç—É—Å: {response['status']}")
    
    # 3. –Ü–Ω—à—ñ –ø—Ä–∏–∫–ª–∞–¥–∏
    print("\n3Ô∏è‚É£ –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø—Ä–∏–∫–ª–∞–¥–∏...")
    
    examples = [
        "–°—Ç–≤–æ—Ä–∏ –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä - —á–µ—Ä–≤–æ–Ω–∞ —Å—É–∫–Ω—è, —Ä–æ–∑–º—ñ—Ä 44, 5 —à—Ç—É–∫",
        "–ü–æ–∫–∞–∂–∏ –≤—Å—ñ —Ç–æ–≤–∞—Ä–∏",
        "–û—Ç—Ä–∏–º–∞–π —Ç–æ–≤–∞—Ä –∑ ID 123"
    ]
    
    for example in examples:
        print(f"\nüìù –ó–∞–ø–∏—Ç: {example}")
        response = agent.process_interactive_query(example)
        print(f"ü§ñ –í—ñ–¥–ø–æ–≤—ñ–¥—å: {response['response'][:100]}...")
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response['status']}")
    
    # 4. –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –¥–æ—Å—Ç—É–ø–Ω—ñ endpoints
    print("\n4Ô∏è‚É£ –î–æ—Å—Ç—É–ø–Ω—ñ endpoints:")
    endpoints = agent.get_available_endpoints()
    
    for endpoint in endpoints[:3]:  # –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—ñ 3
        metadata = endpoint['metadata']
        method = metadata.get('method', 'GET')
        path = metadata.get('path', '')
        summary = metadata.get('summary', '–ë–µ–∑ –æ–ø–∏—Å—É')
        
        print(f"  ‚Ä¢ {method} {path} - {summary}")
    
    print(f"\nüìä –í—Å—å–æ–≥–æ endpoints: {len(endpoints)}")
    
    print("\n‚úÖ –ü—Ä–∏–∫–ª–∞–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


if __name__ == "__main__":
    main()
