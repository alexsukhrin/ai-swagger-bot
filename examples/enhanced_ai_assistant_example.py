"""
–ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ä–æ–∑—à–∏—Ä–µ–Ω–æ–≥–æ AI-–∞—Å–∏—Å—Ç–µ–Ω—Ç–∞
–î–µ–º–æ–Ω—Å—Ç—Ä—É—î –Ω–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è e-commerce —Ç–∞ –≤–µ–±-—Å–∞–π—Ç—ñ–≤
"""

import os
import sys

sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from src.enhanced_ai_assistant import EnhancedAIAssistant
from src.enhanced_prompt_manager import EnhancedPromptManager
from src.rag_engine import PostgresRAGEngine


def demo_enhanced_ai_assistant():
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Ä–æ–±–æ—Ç–∏ —Ä–æ–∑—à–∏—Ä–µ–Ω–æ–≥–æ AI-–∞—Å–∏—Å—Ç–µ–Ω—Ç–∞
    """
    print("ü§ñ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Ä–æ–∑—à–∏—Ä–µ–Ω–æ–≥–æ AI-–∞—Å–∏—Å—Ç–µ–Ω—Ç–∞")
    print("=" * 50)

    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤
    prompt_manager = EnhancedPromptManager()
    rag_engine = PostgresRAGEngine(user_id="example_user", swagger_spec_id="example_spec")
    assistant = EnhancedAIAssistant(prompt_manager, rag_engine)

    # –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
    setup_test_data(assistant)

    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Ä—ñ–∑–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π
    demo_queries = [
        # –ü–æ—à—É–∫ —Ç–æ–≤–∞—Ä—ñ–≤
        "–ó–Ω–∞–π–¥–∏ —Ç–µ–ø–ª—É –∫—É—Ä—Ç–∫—É –¥–ª—è –∑–∏–º–∏",
        "–ü–æ—Ç—Ä—ñ–±–µ–Ω –ø–æ–¥–∞—Ä—É–Ω–æ–∫ –¥–ª—è –¥—ñ–≤—á–∏–Ω–∏",
        "–®—É–∫–∞—é —Ç–µ–ª–µ—Ñ–æ–Ω –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω—ñ 5000-15000 –≥—Ä–Ω",
        # –î–æ–ø–æ–º–æ–≥–∞ –∑ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è–º–∏
        "–í—ñ–¥—Å—Ç–µ–∂–∏ –º–æ—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è #12345",
        "–Ø–∫ –æ—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è?",
        "–•–æ—á—É —Å–∫–∞—Å—É–≤–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è",
        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É
        "–°—Ç–≤–æ—Ä–∏ –æ–ø–∏—Å –¥–ª—è —Ç–æ–≤–∞—Ä—É –°–º–∞—Ä—Ç—Ñ–æ–Ω Samsung Galaxy",
        "–ù–∞–ø–∏—à–∏ –æ–ø–∏—Å –¥–ª—è –∫—É—Ä—Ç–∫–∏ –∑–∏–º–æ–≤–æ—ó",
        "–°—Ç–≤–æ—Ä–∏ –æ–ø–∏—Å –¥–ª—è –ø–æ–¥–∞—Ä—É–Ω–∫–æ–≤–æ–≥–æ –Ω–∞–±–æ—Ä—É",
        # –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –∫–ª—ñ—î–Ω—Ç—ñ–≤
        "–ü—Ä–æ–±–ª–µ–º–∞ –∑ –æ–ø–ª–∞—Ç–æ—é –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è",
        "–ö–æ–ª–∏ –ø—Ä–∏–±—É–¥–µ –º–æ—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è?",
        "–Ø–∫ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ —Ç–æ–≤–∞—Ä?",
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó
        "–©–æ –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É—î—à –¥–ª—è –ø–æ–¥–∞—Ä—É–Ω–∫–∞?",
        "–ü–æ–∫–∞–∂–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –Ω–∞ –æ—Å–Ω–æ–≤—ñ –º–æ—ó—Ö –ø–æ–∫—É–ø–æ–∫",
        "–©–æ –ø–æ–ø—É–ª—è—Ä–Ω–µ –∑–∞—Ä–∞–∑?",
        # –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞
        "–ü–æ–∫–∞–∂–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–¥–∞–∂—ñ–≤",
        "–Ø–∫—ñ —Ç–æ–≤–∞—Ä–∏ –Ω–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à—ñ?",
        "–ó–≤—ñ—Ç –ø–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞—Ö",
        # –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è
        "–°—Ç–≤–æ—Ä–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –∞–∫—Ü—ñ—é",
        "–ù–∞–¥—ñ—à–ª–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Å—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è",
        "–û–≥–æ–ª–æ—Å–∏ –ø—Ä–æ –Ω–æ–≤–∏–Ω–∫–∏",
    ]

    for i, query in enumerate(demo_queries, 1):
        print(f"\nüìù –ó–∞–ø–∏—Ç {i}: {query}")
        print("-" * 40)

        try:
            response = assistant.process_user_query("demo_user", query)
            print(f"ü§ñ –í—ñ–¥–ø–æ–≤—ñ–¥—å: {response}")
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

        print()


def setup_test_data(assistant):
    """
    –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó
    """
    print("üìä –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö...")

    # –ü—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    assistant.update_user_profile(
        "demo_user",
        {
            "name": "–î–µ–º–æ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á",
            "email": "demo@example.com",
            "preferences": {
                "categories": ["–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞", "–û–¥—è–≥", "–ü–æ–¥–∞—Ä—É–Ω–∫–∏"],
                "price_range": {"min": 100, "max": 5000},
                "notification_preferences": {"email": True, "sms": False, "push": True},
            },
            "purchase_history": [
                {"product": "–°–º–∞—Ä—Ç—Ñ–æ–Ω", "category": "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞", "price": 8000},
                {"product": "–ö—É—Ä—Ç–∫–∞", "category": "–û–¥—è–≥", "price": 2500},
                {"product": "–ö–Ω–∏–≥–∞", "category": "–ü–æ–¥–∞—Ä—É–Ω–∫–∏", "price": 300},
            ],
            "viewed_products": [
                {"product": "–ù–∞–≤—É—à–Ω–∏–∫–∏", "category": "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞"},
                {"product": "–°—É–º–∫–∞", "category": "–ê–∫—Å–µ—Å—É–∞—Ä–∏"},
                {"product": "–ì–æ–¥–∏–Ω–Ω–∏–∫", "category": "–ê–∫—Å–µ—Å—É–∞—Ä–∏"},
            ],
            "cart_items": [
                {"product": "–ß–æ—Ö–æ–ª –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω—É", "price": 200},
                {"product": "–ó–∞—Ä—è–¥–Ω–∏–π –∫–∞–±–µ–ª—å", "price": 150},
            ],
        },
    )

    # –¢–æ–≤–∞—Ä–∏ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
    products = [
        {
            "id": 1,
            "name": "–°–º–∞—Ä—Ç—Ñ–æ–Ω Samsung Galaxy S23",
            "category": "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞",
            "price": 25000,
            "description": "–°—É—á–∞—Å–Ω–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω –∑ –ø–æ—Ç—É–∂–Ω–æ—é –∫–∞–º–µ—Ä–æ—é",
            "features": ["5G", "128GB", "Android 13"],
            "in_stock": True,
        },
        {
            "id": 2,
            "name": "–ó–∏–º–æ–≤–∞ –∫—É—Ä—Ç–∫–∞ Columbia",
            "category": "–û–¥—è–≥",
            "price": 3500,
            "description": "–¢–µ–ø–ª–∞ –∑–∏–º–æ–≤–∞ –∫—É—Ä—Ç–∫–∞ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É",
            "features": ["–í–æ–¥–æ–Ω–µ–ø—Ä–æ–Ω–∏–∫–æ–º–∞", "–£—Ç–µ–ø–ª–µ–Ω–∞", "–í—ñ—Ç—Ä–æ–∑–∞—Ö–∏—Å–Ω–∞"],
            "in_stock": True,
        },
        {
            "id": 3,
            "name": "–ü–æ–¥–∞—Ä—É–Ω–∫–æ–≤–∏–π –Ω–∞–±—ñ—Ä –∫–æ—Å–º–µ—Ç–∏–∫–∏",
            "category": "–ü–æ–¥–∞—Ä—É–Ω–∫–∏",
            "price": 800,
            "description": "–ï–ª–µ–≥–∞–Ω—Ç–Ω–∏–π –ø–æ–¥–∞—Ä—É–Ω–∫–æ–≤–∏–π –Ω–∞–±—ñ—Ä –¥–ª—è –∂—ñ–Ω–æ–∫",
            "features": ["–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏", "–ï–ª–µ–≥–∞–Ω—Ç–Ω–∞ —É–ø–∞–∫–æ–≤–∫–∞"],
            "in_stock": True,
        },
        {
            "id": 4,
            "name": "–ë–µ–∑–¥—Ä–æ—Ç–æ–≤—ñ –Ω–∞–≤—É—à–Ω–∏–∫–∏ AirPods",
            "category": "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞",
            "price": 4500,
            "description": "–ü—Ä–µ–º—ñ—É–º –±–µ–∑–¥—Ä–æ—Ç–æ–≤—ñ –Ω–∞–≤—É—à–Ω–∏–∫–∏",
            "features": ["Bluetooth 5.0", "–®—É–º–æ–ø–æ–≥–ª–∏–Ω–∞–Ω–Ω—è", "20 –≥–æ–¥–∏–Ω –∞–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç—ñ"],
            "in_stock": True,
        },
        {
            "id": 5,
            "name": "–°–º–∞—Ä—Ç-–≥–æ–¥–∏–Ω–Ω–∏–∫ Apple Watch",
            "category": "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞",
            "price": 12000,
            "description": "–†–æ–∑—É–º–Ω–∏–π –≥–æ–¥–∏–Ω–Ω–∏–∫ –∑ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥–æ–º –∑–¥–æ—Ä–æ–≤'—è",
            "features": ["GPS", "–ü—É–ª—å—Å–æ–º–µ—Ç—Ä", "–í–æ–¥–æ–Ω–µ–ø—Ä–æ–Ω–∏–∫–æ–º–∏–π"],
            "in_stock": False,
        },
    ]

    for product in products:
        assistant.add_product_to_database(product)

    # –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    orders = [
        {
            "id": "12345",
            "status": "active",
            "items": [{"product": "–°–º–∞—Ä—Ç—Ñ–æ–Ω Samsung Galaxy S23", "price": 25000, "quantity": 1}],
            "total": 25000,
            "shipping_address": "–º. –ö–∏—ó–≤, –≤—É–ª. –•—Ä–µ—â–∞—Ç–∏–∫, 1",
            "created_at": "2025-01-15T10:30:00Z",
            "estimated_delivery": "2025-01-20T14:00:00Z",
        },
        {
            "id": "12346",
            "status": "completed",
            "items": [{"product": "–ó–∏–º–æ–≤–∞ –∫—É—Ä—Ç–∫–∞ Columbia", "price": 3500, "quantity": 1}],
            "total": 3500,
            "shipping_address": "–º. –õ—å–≤—ñ–≤, –≤—É–ª. –°–≤–æ–±–æ–¥–∏, 15",
            "created_at": "2025-01-10T09:15:00Z",
            "delivered_at": "2025-01-12T16:30:00Z",
        },
    ]

    for order in orders:
        assistant.add_order_to_database("demo_user", order)

    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ!")


def demo_specific_features():
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π
    """
    print("\nüéØ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π")
    print("=" * 50)

    prompt_manager = EnhancedPromptManager()
    rag_engine = PostgresRAGEngine(user_id="example_user", swagger_spec_id="example_spec")
    assistant = EnhancedAIAssistant(prompt_manager, rag_engine)

    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–ø–∏—Å—É —Ç–æ–≤–∞—Ä—É
    print("\nüìù –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–ø–∏—Å—É —Ç–æ–≤–∞—Ä—É:")
    product_description_query = "–°—Ç–≤–æ—Ä–∏ –æ–ø–∏—Å –¥–ª—è —Ç–æ–≤–∞—Ä—É –°–º–∞—Ä—Ç—Ñ–æ–Ω iPhone 15 Pro –∑ —Ü—ñ–Ω–æ—é 45000 –≥—Ä–Ω"
    response = assistant.process_user_query("demo_user", product_description_query)
    print(f"–ó–∞–ø–∏—Ç: {product_description_query}")
    print(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å: {response}")

    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Ä–æ–∑—É–º–Ω–æ–≥–æ –ø–æ—à—É–∫—É
    print("\nüîç –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Ä–æ–∑—É–º–Ω–æ–≥–æ –ø–æ—à—É–∫—É:")
    search_query = "–ü–æ—Ç—Ä—ñ–±–µ–Ω –ø–æ–¥–∞—Ä—É–Ω–æ–∫ –¥–ª—è —á–æ–ª–æ–≤—ñ–∫–∞ 30 —Ä–æ–∫—ñ–≤"
    response = assistant.process_user_query("demo_user", search_query)
    print(f"–ó–∞–ø–∏—Ç: {search_query}")
    print(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å: {response}")

    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –¥–æ–ø–æ–º–æ–≥–∏ –∑ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è–º–∏
    print("\nüì¶ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –¥–æ–ø–æ–º–æ–≥–∏ –∑ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è–º–∏:")
    order_query = "–í—ñ–¥—Å—Ç–µ–∂–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è #12345"
    response = assistant.process_user_query("demo_user", order_query)
    print(f"–ó–∞–ø–∏—Ç: {order_query}")
    print(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å: {response}")

    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π
    print("\nüéØ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π:")
    recommendation_query = "–©–æ –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É—î—à –Ω–∞ –æ—Å–Ω–æ–≤—ñ –º–æ—ó—Ö –ø–æ–∫—É–ø–æ–∫?"
    response = assistant.process_user_query("demo_user", recommendation_query)
    print(f"–ó–∞–ø–∏—Ç: {recommendation_query}")
    print(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å: {response}")


def demo_conversation_history():
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Ä–æ–±–æ—Ç–∏ –∑ —ñ—Å—Ç–æ—Ä—ñ—î—é —Ä–æ–∑–º–æ–≤–∏
    """
    print("\nüí¨ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑–º–æ–≤–∏")
    print("=" * 50)

    prompt_manager = EnhancedPromptManager()
    rag_engine = PostgresRAGEngine(user_id="example_user", swagger_spec_id="example_spec")
    assistant = EnhancedAIAssistant(prompt_manager, rag_engine)

    user_id = "test_user"

    # –°–µ—Ä—ñ—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    conversations = [
        "–ü—Ä–∏–≤—ñ—Ç! –Ø —à—É–∫–∞—é –ø–æ–¥–∞—Ä—É–Ω–æ–∫ –¥–ª—è –¥—ñ–≤—á–∏–Ω–∏",
        "–ê —â–æ —î –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω—ñ 1000-3000 –≥—Ä–Ω?",
        "–î–æ–±—Ä–µ, –ø–æ–∫–∞–∂–∏ –Ω–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à—ñ",
        "–ê —è–∫—ñ –∞–∫—Å–µ—Å—É–∞—Ä–∏ –ø—ñ–¥—ñ–π–¥—É—Ç—å –¥–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É?",
        "–î—è–∫—É—é –∑–∞ –¥–æ–ø–æ–º–æ–≥—É!",
    ]

    for i, message in enumerate(conversations, 1):
        print(f"\nüë§ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è {i}: {message}")
        response = assistant.process_user_query(user_id, message)
        print(f"ü§ñ –í—ñ–¥–ø–æ–≤—ñ–¥—å: {response}")

    # –ü–æ–∫–∞–∑ —ñ—Å—Ç–æ—Ä—ñ—ó
    print(f"\nüìã –Ü—Å—Ç–æ—Ä—ñ—è —Ä–æ–∑–º–æ–≤–∏ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}:")
    history = assistant.get_conversation_history(user_id)
    for i, entry in enumerate(history, 1):
        print(f"{i}. [{entry['timestamp']}] {entry['category']}: {entry['query']}")


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó —Ä–æ–∑—à–∏—Ä–µ–Ω–æ–≥–æ AI-–∞—Å–∏—Å—Ç–µ–Ω—Ç–∞")
    print("=" * 60)

    try:
        # –û—Å–Ω–æ–≤–Ω–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è
        demo_enhanced_ai_assistant()

        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π
        demo_specific_features()

        # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑–º–æ–≤–∏
        demo_conversation_history()

        print("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!")

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó: {e}")
        import traceback

        traceback.print_exc()
