"""
–ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø–æ–∫—Ä–∞—â–µ–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ –ø—Ä–æ–º–ø—Ç—ñ–≤.
"""

import sys
import os
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
load_dotenv()

sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from src.enhanced_prompt_manager import EnhancedPromptManager, EnhancedPromptTemplate
from src.prompt_descriptions import PromptDescriptions, PromptCategory

def main():
    """–û—Å–Ω–æ–≤–Ω–∏–π –ø—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø–æ–∫—Ä–∞—â–µ–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ –ø—Ä–æ–º–ø—Ç—ñ–≤."""
    
    print("üöÄ –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø–æ–∫—Ä–∞—â–µ–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ –ø—Ä–æ–º–ø—Ç—ñ–≤")
    print("=" * 60)
    
    # 1. –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ–∫—Ä–∞—â–µ–Ω–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä
    print("\n1Ô∏è‚É£ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ–∫—Ä–∞—â–µ–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–æ–º–ø—Ç—ñ–≤...")
    manager = EnhancedPromptManager()
    print("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –≥–æ—Ç–æ–≤–∏–π!")
    
    # 2. –î–æ–¥–∞—î–º–æ –ø—Ä–æ–º–ø—Ç–∏ –∑ –æ–ø–∏—Å—ñ–≤
    print("\n2Ô∏è‚É£ –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–æ–º–ø—Ç—ñ–≤ –∑ –æ–ø–∏—Å—ñ–≤...")
    
    # –°–∏—Å—Ç–µ–º–Ω–∏–π –ø—Ä–æ–º–ø—Ç
    system_desc = PromptDescriptions.get_system_prompt_description()
    system_prompt = EnhancedPromptTemplate(
        name="Enhanced System Prompt",
        description=system_desc.description,
        prompt_text="""
–¢–∏ - –µ–∫—Å–ø–µ—Ä—Ç –∑ API —Ç–∞ Swagger/OpenAPI —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—è–º–∏. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º –≤–∑–∞—î–º–æ–¥—ñ—è—Ç–∏ –∑ API —á–µ—Ä–µ–∑ –ø—Ä–∏—Ä–æ–¥–Ω—É –º–æ–≤—É.

–¢–∏ –º–∞—î—à –¥–æ—Å—Ç—É–ø –¥–æ:
- Swagger/OpenAPI —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—ó API
- –Ü—Å—Ç–æ—Ä—ñ—ó –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö –≤–∑–∞—î–º–æ–¥—ñ–π –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º
- –ú–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ API –≤–∏–∫–ª–∏–∫–∏
- –ê–Ω–∞–ª—ñ–∑—É –ø–æ–º–∏–ª–æ–∫ —Å–µ—Ä–≤–µ—Ä–∞

–¢–≤–æ—ó –æ—Å–Ω–æ–≤–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:
1. –†–æ–∑—É–º—ñ—Ç–∏ –∑–∞–ø–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—Ä–∏—Ä–æ–¥–Ω–æ—é –º–æ–≤–æ—é
2. –ó–Ω–∞—Ö–æ–¥–∏—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ API endpoints
3. –§–æ—Ä–º—É–≤–∞—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ API –∑–∞–ø–∏—Ç–∏
4. –ê–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –ø–æ–º–∏–ª–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
5. –ó–∞–ø–∏—Ç—É–≤–∞—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ
6. –ü–æ–≤—Ç–æ—Ä–Ω–æ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Ç–∏ –∑ –Ω–æ–≤–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é

–ó–∞–≤–∂–¥–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é —Ç–∞ –±—É–¥—å –∫–æ—Ä–∏—Å–Ω–∏–º —Ç–∞ –¥—Ä—É–∂–µ–ª—é–±–Ω–∏–º.
–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –µ–º–æ–¥–∑—ñ –¥–ª—è –∫—Ä–∞—â–æ–≥–æ —Å–ø—Ä–∏–π–Ω—è—Ç—Ç—è —Ç–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—É–π –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∑—Ä–æ–∑—É–º—ñ–ª–æ.
        """,
        category=system_desc.category.value,
        tags=system_desc.tags,
        description_object=system_desc
    )
    
    system_id = manager.add_enhanced_prompt(system_prompt)
    print(f"‚úÖ –î–æ–¥–∞–Ω–æ —Å–∏—Å—Ç–µ–º–Ω–∏–π –ø—Ä–æ–º–ø—Ç –∑ ID: {system_id}")
    
    # –ü—Ä–æ–º–ø—Ç –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É –Ω–∞–º—ñ—Ä—É
    intent_desc = PromptDescriptions.get_intent_analysis_description()
    intent_prompt = EnhancedPromptTemplate(
        name="Enhanced Intent Analysis",
        description=intent_desc.description,
        prompt_text="""
–¢–∏ - –µ–∫—Å–ø–µ—Ä—Ç –∑ API. –ê–Ω–∞–ª—ñ–∑—É–π –∑–∞–ø–∏—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –≤–∏–∑–Ω–∞—á–∞–π:
1. –¢–∏–ø –æ–ø–µ—Ä–∞—Ü—ñ—ó (GET, POST, PUT, DELETE)
2. –†–µ—Å—É—Ä—Å –∞–±–æ endpoint
3. –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ç–∞ –¥–∞–Ω—ñ
4. –ú–µ—Ç–∞ –∞–±–æ —Ü—ñ–ª—å –∑–∞–ø–∏—Ç—É

–ö–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö –≤–∑–∞—î–º–æ–¥—ñ–π:
{context}

–ó–∞–ø–∏—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {user_query}

–í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —É —Ñ–æ—Ä–º–∞—Ç—ñ JSON:
{{
    "operation": "GET|POST|PUT|DELETE",
    "resource": "–Ω–∞–∑–≤–∞ —Ä–µ—Å—É—Ä—Å—É",
    "parameters": {{"param1": "value1"}},
    "data": {{"field1": "value1"}},
    "intent": "–æ–ø–∏—Å –º–µ—Ç–∏ –∑–∞–ø–∏—Ç—É"
}}
        """,
        category=intent_desc.category.value,
        tags=intent_desc.tags,
        description_object=intent_desc
    )
    
    intent_id = manager.add_enhanced_prompt(intent_prompt)
    print(f"‚úÖ –î–æ–¥–∞–Ω–æ –ø—Ä–æ–º–ø—Ç –∞–Ω–∞–ª—ñ–∑—É –Ω–∞–º—ñ—Ä—É –∑ ID: {intent_id}")
    
    # 3. –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ–º–ø—Ç –∑ —à–∞–±–ª–æ–Ω—É
    print("\n3Ô∏è‚É£ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ–º–ø—Ç—É –∑ —à–∞–±–ª–æ–Ω—É...")
    
    template_id = manager.create_prompt_from_template(
        "error_handling",
        name="Custom Error Handler",
        prompt_text="""
–ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π –ø–æ–º–∏–ª–∫—É —Å–µ—Ä–≤–µ—Ä–∞ —Ç–∞ –∑–≥–µ–Ω–µ—Ä—É–π –∫–æ—Ä–∏—Å–Ω–∏–π –∑–∞–ø–∏—Ç –Ω–∞ –¥–æ–¥–∞—Ç–∫–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é.

–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {error_message}
–û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –∑–∞–ø–∏—Ç: {original_query}
API –∑–∞–ø–∏—Ç: {api_request}

–¢–∏–ø–∏ –ø–æ–º–∏–ª–æ–∫:
- –í–∞–ª—ñ–¥–∞—Ü—ñ—è: –ø–æ—Ç—Ä—ñ–±–Ω—ñ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ–ª—è
- –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è: –ø—Ä–æ–±–ª–µ–º–∏ –∑ —Ç–æ–∫–µ–Ω–æ–º
- –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π ID –∞–±–æ —à–ª—è—Ö
- –ö–æ–Ω—Ñ–ª—ñ–∫—Ç: –∑–∞–ø–∏—Å –≤–∂–µ —ñ—Å–Ω—É—î

–°—Ç–≤–æ—Ä–∏ –∑—Ä–æ–∑—É–º—ñ–ª–∏–π –∑–∞–ø–∏—Ç —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é, —è–∫–∏–π –¥–æ–ø–æ–º–æ–∂–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –Ω–∞–¥–∞—Ç–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é.

–í—ñ–¥–ø–æ–≤—ñ–¥—å –º–∞—î –±—É—Ç–∏ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ—é —Ç–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—é, –∑ –µ–º–æ–¥–∑—ñ –¥–ª—è –∫—Ä–∞—â–æ–≥–æ —Å–ø—Ä–∏–π–Ω—è—Ç—Ç—è.
        """,
        tags=["custom", "error", "user_friendly"]
    )
    
    print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –ø—Ä–æ–º–ø—Ç –∑ —à–∞–±–ª–æ–Ω—É –∑ ID: {template_id}")
    
    # 4. –û—Ç—Ä–∏–º—É—î–º–æ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –ø—Ä–æ–º–ø—Ç—ñ–≤
    print("\n4Ô∏è‚É£ –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π –ø—Ä–æ–º–ø—Ç—ñ–≤...")
    
    test_queries = [
        "–ü–æ–∫–∞–∂–∏ –≤—Å—ñ —Ç–æ–≤–∞—Ä–∏",
        "–°—Ç–≤–æ—Ä–∏ –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä",
        "–û–Ω–æ–≤–∏ —Ç–æ–≤–∞—Ä –∑ ID 123",
        "–í–∏–¥–∞–ª–∏ —Ç–æ–≤–∞—Ä –∑ ID 456",
        "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ —Ç–æ–≤–∞—Ä—É"
    ]
    
    for query in test_queries:
        suggestions = manager.get_prompt_suggestions(query)
        print(f"\nüìù –ó–∞–ø–∏—Ç: {query}")
        print(f"üéØ –ó–Ω–∞–π–¥–µ–Ω–æ {len(suggestions)} –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π:")
        
        for i, suggestion in enumerate(suggestions[:2], 1):
            print(f"  {i}. {suggestion['name']} (—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ñ—Å—Ç—å: {suggestion['relevance_score']:.2f})")
    
    # 5. –û—Ç—Ä–∏–º—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print("\n5Ô∏è‚É£ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–º–ø—Ç—ñ–≤...")
    
    stats = manager.get_prompt_statistics()
    print(f"üìä –ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"  ‚Ä¢ –í—Å—å–æ–≥–æ –ø—Ä–æ–º–ø—Ç—ñ–≤: {stats['total_prompts']}")
    print(f"  ‚Ä¢ –ê–∫—Ç–∏–≤–Ω–∏—Ö –ø—Ä–æ–º–ø—Ç—ñ–≤: {stats['active_prompts']}")
    print(f"  ‚Ä¢ –°–µ—Ä–µ–¥–Ω—è —É—Å–ø—ñ—à–Ω—ñ—Å—Ç—å: {stats['avg_success_rate']:.2%}")
    print(f"  ‚Ä¢ –ó–∞–≥–∞–ª—å–Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: {stats['total_usage']}")
    
    print(f"\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è—Ö:")
    for category, cat_stats in stats['category_details'].items():
        if cat_stats['count'] > 0:
            print(f"  ‚Ä¢ {category}: {cat_stats['count']} –ø—Ä–æ–º–ø—Ç—ñ–≤, "
                  f"—É—Å–ø—ñ—à–Ω—ñ—Å—Ç—å: {cat_stats['avg_success_rate']:.2%}")
    
    # 6. –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
    print("\n6Ô∏è‚É£ –ï–∫—Å–ø–æ—Ä—Ç –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó...")
    
    manager.save_prompt_config()
    print("‚úÖ –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –∑–±–µ—Ä–µ–∂–µ–Ω–∞ –≤ prompt_config.json")
    
    # –ï–∫—Å–ø–æ—Ä—Ç –≤ JSON —Ñ–∞–π–ª
    manager.export_prompts_to_file("exported_prompts.json", "json")
    
    # 7. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Ä–æ–±–æ—Ç–∏ –∑ –º–µ—Ç–∞–¥–∞–Ω–∏–º–∏
    print("\n7Ô∏è‚É£ –†–æ–±–æ—Ç–∞ –∑ –º–µ—Ç–∞–¥–∞–Ω–∏–º–∏...")
    
    # –û—Ç—Ä–∏–º—É—î–º–æ –ø—Ä–æ–º–ø—Ç –∑ –º–µ—Ç–∞–¥–∞–Ω–∏–º–∏
    if system_id > 0:
        enhanced_prompt = manager.get_prompt_with_metadata(system_id)
        if enhanced_prompt:
            print(f"üìã –ü—Ä–æ–º–ø—Ç: {enhanced_prompt.name}")
            print(f"üìä –ú–µ—Ç–∞–¥–∞–Ω—ñ: {enhanced_prompt.metadata}")
    
    # –û—Ç—Ä–∏–º—É—î–º–æ –ø—Ä–æ–º–ø—Ç–∏ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—î—é –∑ –º–µ—Ç–∞–¥–∞–Ω–∏–º–∏
    system_prompts = manager.get_prompts_by_category_with_metadata("system")
    print(f"\nüîß –°–∏—Å—Ç–µ–º–Ω–∏—Ö –ø—Ä–æ–º–ø—Ç—ñ–≤: {len(system_prompts)}")
    
    for prompt in system_prompts:
        print(f"  ‚Ä¢ {prompt.name} (–≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: {prompt.metadata.get('usage_count', 0)})")
    
    print("\n‚úÖ –ü—Ä–∏–∫–ª–∞–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


def demonstrate_prompt_management():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø—Ä–æ–º–ø—Ç–∞–º–∏."""
    
    print("\nüîÑ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø—Ä–æ–º–ø—Ç–∞–º–∏")
    print("=" * 50)
    
    manager = EnhancedPromptManager()
    
    # –î–æ–¥–∞—î–º–æ –∫–∞—Å—Ç–æ–º–Ω–∏–π –ø—Ä–æ–º–ø—Ç
    custom_prompt = EnhancedPromptTemplate(
        name="Custom Data Retrieval",
        description="–ö–∞—Å—Ç–æ–º–Ω–∏–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö",
        prompt_text="""
–¢–∏ –µ–∫—Å–ø–µ—Ä—Ç API. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ö–æ—á–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ.

–ó–ê–ü–ò–¢: {user_query}

–ó–ê–í–î–ê–ù–ù–Ø:
1. –ó–Ω–∞–π–¥–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π GET endpoint
2. –ü–µ—Ä–µ–≤—ñ—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
3. –í–∏–∫–æ–Ω–∞–π –∑–∞–ø–∏—Ç
4. –ü–æ–≤–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç

–í–Ü–î–ü–û–í–Ü–î–¨:
{{
    "endpoint": "URL endpoint",
    "method": "GET",
    "parameters": {{}},
    "result": "—Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø–∏—Ç—É"
}}
        """,
        category="data_retrieval",
        tags=["custom", "data", "retrieval"]
    )
    
    prompt_id = manager.add_enhanced_prompt(custom_prompt)
    print(f"‚úÖ –î–æ–¥–∞–Ω–æ –∫–∞—Å—Ç–æ–º–Ω–∏–π –ø—Ä–æ–º–ø—Ç –∑ ID: {prompt_id}")
    
    # –û–Ω–æ–≤–ª—é—î–º–æ –ø—Ä–æ–º–ø—Ç
    custom_prompt.description = "–û–Ω–æ–≤–ª–µ–Ω–∏–π –æ–ø–∏—Å –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç—É"
    custom_prompt.tags.append("updated")
    
    success = manager.update_prompt(prompt_id, custom_prompt)
    print(f"‚úÖ –ü—Ä–æ–º–ø—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ: {success}")
    
    # –®—É–∫–∞—î–º–æ –ø—Ä–æ–º–ø—Ç–∏
    search_results = manager.search_prompts("–∫–∞—Å—Ç–æ–º–Ω–∏–π")
    print(f"üîç –ó–Ω–∞–π–¥–µ–Ω–æ {len(search_results)} –ø—Ä–æ–º–ø—Ç—ñ–≤ –ø–æ –∑–∞–ø–∏—Ç—É '–∫–∞—Å—Ç–æ–º–Ω–∏–π'")
    
    for prompt in search_results:
        print(f"  ‚Ä¢ {prompt.name} ({prompt.category})")


if __name__ == "__main__":
    main()
    demonstrate_prompt_management()
