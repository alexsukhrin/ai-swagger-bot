"""
–ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø—Ä–æ–º–ø—Ç—É –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π API —Å–µ—Ä–≤–µ—Ä–∞.
"""

import sys
import os
import json
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
load_dotenv()

sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from src.prompt_templates import PromptTemplates
from src.enhanced_prompt_manager import EnhancedPromptManager, EnhancedPromptTemplate
from src.prompt_descriptions import PromptDescriptions

def simulate_api_response():
    """–°–∏–º—É–ª—é—î –≤—ñ–¥–ø–æ–≤—ñ–¥—å API —Å–µ—Ä–≤–µ—Ä–∞."""
    return {
        "status": "success",
        "data": [
            {
                "id": 1,
                "name": "–°–∏–Ω—è —Å—É–∫–Ω—è",
                "category": "–û–¥—è–≥",
                "price": 1500.00,
                "currency": "UAH",
                "description": "–ï–ª–µ–≥–∞–Ω—Ç–Ω–∞ —Å–∏–Ω—è —Å—É–∫–Ω—è –¥–ª—è –≤–µ—á—ñ—Ä–∫–∏",
                "in_stock": True,
                "size": "M",
                "color": "–°–∏–Ω—ñ–π"
            },
            {
                "id": 2,
                "name": "–ß–µ—Ä–≤–æ–Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–∞",
                "category": "–û–¥—è–≥",
                "price": 450.00,
                "currency": "UAH",
                "description": "–ó—Ä—É—á–Ω–∞ —á–µ—Ä–≤–æ–Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–∞",
                "in_stock": True,
                "size": "L",
                "color": "–ß–µ—Ä–≤–æ–Ω–∏–π"
            },
            {
                "id": 3,
                "name": "–ó–µ–ª–µ–Ω–∞ –∫—É—Ä—Ç–∫–∞",
                "category": "–û–¥—è–≥",
                "price": 2500.00,
                "currency": "UAH",
                "description": "–¢–µ–ø–ª–∞ –∑–µ–ª–µ–Ω–∞ –∫—É—Ä—Ç–∫–∞",
                "in_stock": False,
                "size": "XL",
                "color": "–ó–µ–ª–µ–Ω–∏–π"
            },
            {
                "id": 4,
                "name": "–ß–æ—Ä–Ω—ñ –∫—Ä–æ—Å—ñ–≤–∫–∏",
                "category": "–í–∑—É—Ç—Ç—è",
                "price": 1800.00,
                "currency": "UAH",
                "description": "–°—Ç–∏–ª—å–Ω—ñ —á–æ—Ä–Ω—ñ –∫—Ä–æ—Å—ñ–≤–∫–∏",
                "in_stock": True,
                "size": "42",
                "color": "–ß–æ—Ä–Ω–∏–π"
            },
            {
                "id": 5,
                "name": "–ó–æ–ª–æ—Ç–∞ —Å–µ—Ä–µ–∂–∫–∞",
                "category": "–ê–∫—Å–µ—Å—É–∞—Ä–∏",
                "price": 800.00,
                "currency": "UAH",
                "description": "–ï–ª–µ–≥–∞–Ω—Ç–Ω–∞ –∑–æ–ª–æ—Ç–∞ —Å–µ—Ä–µ–∂–∫–∞",
                "in_stock": True,
                "size": "One size",
                "color": "–ó–æ–ª–æ—Ç–∏–π"
            }
        ],
        "total": 5,
        "page": 1,
        "per_page": 10
    }

def test_api_response_processing():
    """–¢–µ—Å—Ç—É—î –æ–±—Ä–æ–±–∫—É –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π API."""
    
    print("üöÄ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–∫–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π API")
    print("=" * 50)
    
    # –°–∏–º—É–ª—é—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å API
    api_response = simulate_api_response()
    
    # –¢–µ—Å—Ç–æ–≤—ñ –∑–∞–ø–∏—Ç–∏
    test_queries = [
        "–ü–æ–∫–∞–∂–∏ –≤—Å—ñ —Ç–æ–≤–∞—Ä–∏",
        "–ü–æ–∫–∞–∂–∏ —Ç—ñ–ª—å–∫–∏ –Ω–∞–∑–≤–∏ —Ç–æ–≤–∞—Ä—ñ–≤",
        "–ü–æ–∫–∞–∂–∏ ID —Ç–∞ –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—ñ–≤",
        "–ü–æ–∫–∞–∂–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–æ–≤–∞—Ä—ñ–≤",
        "–ü–æ–∫–∞–∂–∏ —Ü—ñ–Ω–∏ —Ç–æ–≤–∞—Ä—ñ–≤",
        "–ü–æ–∫–∞–∂–∏ —Ç—ñ–ª—å–∫–∏ –Ω–∞–∑–≤–∏ —Ç–∞ —Ü—ñ–Ω–∏",
        "–ü–æ–∫–∞–∂–∏ —Ç–æ–≤–∞—Ä–∏ –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ",
        "–ü–æ–∫–∞–∂–∏ —Ç—ñ–ª—å–∫–∏ –æ–¥—è–≥",
        "–ü–æ–∫–∞–∂–∏ —Ç—ñ–ª—å–∫–∏ –≤–∑—É—Ç—Ç—è",
        "–ü–æ–∫–∞–∂–∏ —Ç—ñ–ª—å–∫–∏ –∞–∫—Å–µ—Å—É–∞—Ä–∏"
    ]
    
    print(f"üìä JSON –≤—ñ–¥–ø–æ–≤—ñ–¥—å API:")
    print(json.dumps(api_response, ensure_ascii=False, indent=2))
    print("\n" + "="*50 + "\n")
    
    for query in test_queries:
        print(f"üìù –ó–ê–ü–ò–¢: {query}")
        print("-" * 30)
        
        # –ì–µ–Ω–µ—Ä—É—î–º–æ –ø—Ä–æ–º–ø—Ç –¥–ª—è –æ–±—Ä–æ–±–∫–∏
        prompt = PromptTemplates.get_api_response_processing_prompt(
            user_query=query,
            api_response=api_response,
            available_fields=["id", "name", "category", "price", "currency", "description", "in_stock", "size", "color"]
        )
        
        print(f"ü§ñ –ü–†–û–ú–ü–¢ –î–õ–Ø GPT:")
        print(prompt)
        print("\n" + "="*50 + "\n")

def demonstrate_enhanced_prompt_manager():
    """–î–µ–º–æ–Ω—Å—Ç—Ä—É—î —Ä–æ–±–æ—Ç—É –∑ –ø–æ–∫—Ä–∞—â–µ–Ω–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –ø—Ä–æ–º–ø—Ç—ñ–≤."""
    
    print("üîÑ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –ø–æ–∫—Ä–∞—â–µ–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–æ–º–ø—Ç—ñ–≤")
    print("=" * 50)
    
    manager = EnhancedPromptManager()
    
    # –î–æ–¥–∞—î–º–æ –ø—Ä–æ–º–ø—Ç –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π API
    api_response_desc = PromptDescriptions.get_api_response_processing_description()
    
    api_response_prompt = EnhancedPromptTemplate(
        name="API Response Processing",
        description=api_response_desc.description,
        prompt_text=PromptTemplates.get_api_response_processing_prompt.__doc__,
        category=api_response_desc.category.value,
        tags=api_response_desc.tags,
        description_object=api_response_desc
    )
    
    prompt_id = manager.add_enhanced_prompt(api_response_prompt)
    print(f"‚úÖ –î–æ–¥–∞–Ω–æ –ø—Ä–æ–º–ø—Ç –æ–±—Ä–æ–±–∫–∏ API –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π –∑ ID: {prompt_id}")
    
    # –¢–µ—Å—Ç—É—î–º–æ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó
    test_queries = [
        "–ü–æ–∫–∞–∂–∏ —Ç—ñ–ª—å–∫–∏ –Ω–∞–∑–≤–∏ —Ç–æ–≤–∞—Ä—ñ–≤",
        "–ü–æ–∫–∞–∂–∏ ID —Ç–∞ –Ω–∞–∑–≤—É",
        "–ü–æ–∫–∞–∂–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó",
        "–ü–æ–∫–∞–∂–∏ —Ü—ñ–Ω–∏"
    ]
    
    for query in test_queries:
        suggestions = manager.get_prompt_suggestions(query)
        print(f"\nüìù –ó–∞–ø–∏—Ç: {query}")
        print(f"üéØ –ó–Ω–∞–π–¥–µ–Ω–æ {len(suggestions)} –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π:")
        
        for i, suggestion in enumerate(suggestions[:2], 1):
            print(f"  {i}. {suggestion['name']} (—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ñ—Å—Ç—å: {suggestion['relevance_score']:.2f})")
    
    # –û—Ç—Ä–∏–º—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = manager.get_prompt_statistics()
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"  ‚Ä¢ –í—Å—å–æ–≥–æ –ø—Ä–æ–º–ø—Ç—ñ–≤: {stats['total_prompts']}")
    print(f"  ‚Ä¢ –ê–∫—Ç–∏–≤–Ω–∏—Ö –ø—Ä–æ–º–ø—Ç—ñ–≤: {stats['active_prompts']}")
    
    # –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
    manager.save_prompt_config()
    print("üíæ –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –∑–±–µ—Ä–µ–∂–µ–Ω–∞")

def show_expected_outputs():
    """–ü–æ–∫–∞–∑—É—î –æ—á—ñ–∫—É–≤–∞–Ω—ñ –≤–∏—Ö–æ–¥–∏ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤."""
    
    print("üéØ –û—á—ñ–∫—É–≤–∞–Ω—ñ –≤–∏—Ö–æ–¥–∏ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤")
    print("=" * 50)
    
    api_response = simulate_api_response()
    
    expected_outputs = {
        "–ü–æ–∫–∞–∂–∏ —Ç—ñ–ª—å–∫–∏ –Ω–∞–∑–≤–∏ —Ç–æ–≤–∞—Ä—ñ–≤": """
üìã –°–ø–∏—Å–æ–∫ –Ω–∞–∑–≤ —Ç–æ–≤–∞—Ä—ñ–≤:
‚Ä¢ –°–∏–Ω—è —Å—É–∫–Ω—è
‚Ä¢ –ß–µ—Ä–≤–æ–Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–∞
‚Ä¢ –ó–µ–ª–µ–Ω–∞ –∫—É—Ä—Ç–∫–∞
‚Ä¢ –ß–æ—Ä–Ω—ñ –∫—Ä–æ—Å—ñ–≤–∫–∏
‚Ä¢ –ó–æ–ª–æ—Ç–∞ —Å–µ—Ä–µ–∂–∫–∞
        """,
        
        "–ü–æ–∫–∞–∂–∏ ID —Ç–∞ –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—ñ–≤": """
üÜî –¢–æ–≤–∞—Ä–∏:
‚Ä¢ 1: –°–∏–Ω—è —Å—É–∫–Ω—è
‚Ä¢ 2: –ß–µ—Ä–≤–æ–Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–∞
‚Ä¢ 3: –ó–µ–ª–µ–Ω–∞ –∫—É—Ä—Ç–∫–∞
‚Ä¢ 4: –ß–æ—Ä–Ω—ñ –∫—Ä–æ—Å—ñ–≤–∫–∏
‚Ä¢ 5: –ó–æ–ª–æ—Ç–∞ —Å–µ—Ä–µ–∂–∫–∞
        """,
        
        "–ü–æ–∫–∞–∂–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–æ–≤–∞—Ä—ñ–≤": """
üìÇ –î–æ—Å—Ç—É–ø–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó:
‚Ä¢ –û–¥—è–≥ (3 —Ç–æ–≤–∞—Ä–∏)
‚Ä¢ –í–∑—É—Ç—Ç—è (1 —Ç–æ–≤–∞—Ä)
‚Ä¢ –ê–∫—Å–µ—Å—É–∞—Ä–∏ (1 —Ç–æ–≤–∞—Ä)
        """,
        
        "–ü–æ–∫–∞–∂–∏ —Ü—ñ–Ω–∏ —Ç–æ–≤–∞—Ä—ñ–≤": """
üí∞ –¶—ñ–Ω–∏ —Ç–æ–≤–∞—Ä—ñ–≤:
‚Ä¢ –°–∏–Ω—è —Å—É–∫–Ω—è: 1500.00 UAH
‚Ä¢ –ß–µ—Ä–≤–æ–Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–∞: 450.00 UAH
‚Ä¢ –ó–µ–ª–µ–Ω–∞ –∫—É—Ä—Ç–∫–∞: 2500.00 UAH
‚Ä¢ –ß–æ—Ä–Ω—ñ –∫—Ä–æ—Å—ñ–≤–∫–∏: 1800.00 UAH
‚Ä¢ –ó–æ–ª–æ—Ç–∞ —Å–µ—Ä–µ–∂–∫–∞: 800.00 UAH
        """,
        
        "–ü–æ–∫–∞–∂–∏ —Ç—ñ–ª—å–∫–∏ –Ω–∞–∑–≤–∏ —Ç–∞ —Ü—ñ–Ω–∏": """
üìã –ù–∞–∑–≤–∏ —Ç–∞ —Ü—ñ–Ω–∏ —Ç–æ–≤–∞—Ä—ñ–≤:
‚Ä¢ –°–∏–Ω—è —Å—É–∫–Ω—è - 1500.00 UAH
‚Ä¢ –ß–µ—Ä–≤–æ–Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–∞ - 450.00 UAH
‚Ä¢ –ó–µ–ª–µ–Ω–∞ –∫—É—Ä—Ç–∫–∞ - 2500.00 UAH
‚Ä¢ –ß–æ—Ä–Ω—ñ –∫—Ä–æ—Å—ñ–≤–∫–∏ - 1800.00 UAH
‚Ä¢ –ó–æ–ª–æ—Ç–∞ —Å–µ—Ä–µ–∂–∫–∞ - 800.00 UAH
        """,
        
        "–ü–æ–∫–∞–∂–∏ —Ç–æ–≤–∞—Ä–∏ –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ": """
‚úÖ –¢–æ–≤–∞—Ä–∏ –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ:
‚Ä¢ –°–∏–Ω—è —Å—É–∫–Ω—è (ID: 1)
‚Ä¢ –ß–µ—Ä–≤–æ–Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–∞ (ID: 2)
‚Ä¢ –ß–æ—Ä–Ω—ñ –∫—Ä–æ—Å—ñ–≤–∫–∏ (ID: 4)
‚Ä¢ –ó–æ–ª–æ—Ç–∞ —Å–µ—Ä–µ–∂–∫–∞ (ID: 5)
        """,
        
        "–ü–æ–∫–∞–∂–∏ —Ç—ñ–ª—å–∫–∏ –æ–¥—è–≥": """
üëï –û–¥—è–≥:
‚Ä¢ –°–∏–Ω—è —Å—É–∫–Ω—è (ID: 1) - 1500.00 UAH
‚Ä¢ –ß–µ—Ä–≤–æ–Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–∞ (ID: 2) - 450.00 UAH
‚Ä¢ –ó–µ–ª–µ–Ω–∞ –∫—É—Ä—Ç–∫–∞ (ID: 3) - 2500.00 UAH
        """
    }
    
    for query, expected_output in expected_outputs.items():
        print(f"\nüìù –ó–ê–ü–ò–¢: {query}")
        print("üì§ –û–ß–Ü–ö–£–í–ê–ù–ò–ô –í–ò–•–Ü–î:")
        print(expected_output.strip())
        print("-" * 50)

def main():
    """–û—Å–Ω–æ–≤–Ω–∏–π –ø—Ä–∏–∫–ª–∞–¥."""
    
    print("üöÄ –ü—Ä–∏–∫–ª–∞–¥ –æ–±—Ä–æ–±–∫–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π API —Å–µ—Ä–≤–µ—Ä–∞")
    print("=" * 60)
    
    # –¢–µ—Å—Ç—É—î–º–æ –æ–±—Ä–æ–±–∫—É –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
    test_api_response_processing()
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä—É—î–º–æ –ø–æ–∫—Ä–∞—â–µ–Ω–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä
    demonstrate_enhanced_prompt_manager()
    
    # –ü–æ–∫–∞–∑—É—î–º–æ –æ—á—ñ–∫—É–≤–∞–Ω—ñ –≤–∏—Ö–æ–¥–∏
    show_expected_outputs()
    
    print("\n‚úÖ –ü—Ä–∏–∫–ª–∞–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main()
