# Makefile –¥–ª—è Terraform —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∏ AI Swagger Bot

.PHONY: help init plan apply apply-auto destroy output validate format clean

# Variables
ENVIRONMENT ?= dev
AWS_REGION ?= us-east-1
TF_VARS_FILE = terraform.tfvars

help: ## –ü–æ–∫–∞–∑–∞—Ç–∏ –¥–æ–≤—ñ–¥–∫—É
	@echo "üöÄ Terraform –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è AI Swagger Bot:"
	@echo ""
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'
	@echo ""
	@echo "üìù –ó–º—ñ–Ω–Ω—ñ:"
	@echo "  ENVIRONMENT=$(ENVIRONMENT)"
	@echo "  AWS_REGION=$(AWS_REGION)"
	@echo "  TF_VARS_FILE=$(TF_VARS_FILE)"
	@echo ""
	@echo "üí° –ü—Ä–∏–∫–ª–∞–¥–∏:"
	@echo "  make plan ENVIRONMENT=prod"
	@echo "  make apply ENVIRONMENT=staging"

init: ## –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ Terraform
	@echo "üîß –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—é Terraform..."
	terraform init
	@echo "‚úÖ Terraform —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ"

plan: ## –ü–ª–∞–Ω—É–≤–∞—Ç–∏ –∑–º—ñ–Ω–∏
	@echo "üìã –ü–ª–∞–Ω—É—é –∑–º—ñ–Ω–∏ –¥–ª—è $(ENVIRONMENT) —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞..."
	terraform plan \
		-var-file="$(TF_VARS_FILE)" \
		-var="environment=$(ENVIRONMENT)" \
		-var="aws_region=$(AWS_REGION)" \
		-out="terraform.plan"
	@echo "‚úÖ –ü–ª–∞–Ω —Å—Ç–≤–æ—Ä–µ–Ω–æ: terraform.plan"

apply: ## –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –∑–º—ñ–Ω–∏ (–∑ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è–º)
	@echo "üöÄ –ó–∞—Å—Ç–æ—Å–æ–≤—É—é –∑–º—ñ–Ω–∏ –¥–ª—è $(ENVIRONMENT) —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞..."
	terraform apply "terraform.plan"
	@echo "‚úÖ –ó–º—ñ–Ω–∏ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ"

apply-auto: ## –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –∑–º—ñ–Ω–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
	@echo "üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞—Å—Ç–æ—Å–æ–≤—É—é –∑–º—ñ–Ω–∏ –¥–ª—è $(ENVIRONMENT) —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞..."
	terraform apply \
		-var-file="$(TF_VARS_FILE)" \
		-var="environment=$(ENVIRONMENT)" \
		-var="aws_region=$(AWS_REGION)" \
		-auto-approve
	@echo "‚úÖ –ó–º—ñ–Ω–∏ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ"

destroy: ## –í–∏–¥–∞–ª–∏—Ç–∏ —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É
	@echo "üóëÔ∏è –í–∏–¥–∞–ª—è—é —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è $(ENVIRONMENT) —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞..."
	terraform destroy \
		-var-file="$(TF_VARS_FILE)" \
		-var="environment=$(ENVIRONMENT)" \
		-var="aws_region=$(AWS_REGION)"
	@echo "‚úÖ –Ü–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤–∏–¥–∞–ª–µ–Ω–æ"

output: ## –ü–æ–∫–∞–∑–∞—Ç–∏ –≤–∏—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ
	@echo "üì§ –í–∏—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ Terraform:"
	terraform output

validate: ## –í–∞–ª—ñ–¥—É–≤–∞—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
	@echo "‚úÖ –í–∞–ª—ñ–¥—É—é Terraform –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é..."
	terraform validate
	@echo "‚úÖ –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –≤–∞–ª—ñ–¥–Ω–∞"

format: ## –§–æ—Ä–º–∞—Ç—É–≤–∞—Ç–∏ –∫–æ–¥
	@echo "üé® –§–æ—Ä–º–∞—Ç—É—é Terraform –∫–æ–¥..."
	terraform fmt -recursive
	@echo "‚úÖ –ö–æ–¥ –≤—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–æ"

clean: ## –û—á–∏—Å—Ç–∏—Ç–∏ —Ç–∏–º—á–∞—Å–æ–≤—ñ —Ñ–∞–π–ª–∏
	@echo "üßπ –û—á–∏—â–∞—é —Ç–∏–º—á–∞—Å–æ–≤—ñ —Ñ–∞–π–ª–∏..."
	rm -f terraform.plan
	rm -f *.tfstate
	rm -f *.tfstate.backup
	rm -f .terraform.lock.hcl
	rm -rf .terraform/
	@echo "‚úÖ –§–∞–π–ª–∏ –æ—á–∏—â–µ–Ω–æ"

# Environment-specific commands
dev: ## –†–æ–∑–≥–æ—Ä–Ω—É—Ç–∏ dev —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ
	@$(MAKE) apply-auto ENVIRONMENT=dev

staging: ## –†–æ–∑–≥–æ—Ä–Ω—É—Ç–∏ staging —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ
	@$(MAKE) apply-auto ENVIRONMENT=staging

prod: ## –†–æ–∑–≥–æ—Ä–Ω—É—Ç–∏ production —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ
	@$(MAKE) apply-auto ENVIRONMENT=prod

# Database commands
db-backup: ## –°—Ç–≤–æ—Ä–∏—Ç–∏ backup –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
	@echo "üíæ –°—Ç–≤–æ—Ä—é—é backup –±–∞–∑–∏ –¥–∞–Ω–∏—Ö..."
	@DB_ENDPOINT=$$(terraform output -raw database_endpoint) && \
	DB_NAME=$$(terraform output -raw database_name) && \
	pg_dump -h $$DB_ENDPOINT -U postgres $$DB_NAME > backup_$(ENVIRONMENT)_$$(date +%Y%m%d_%H%M%S).sql
	@echo "‚úÖ Backup —Å—Ç–≤–æ—Ä–µ–Ω–æ"

# Security commands
security-scan: ## –°–∫–∞–Ω—É–≤–∞—Ç–∏ –±–µ–∑–ø–µ–∫—É
	@echo "üîí –°–∫–∞–Ω—É—é –±–µ–∑–ø–µ–∫—É..."
	terraform plan \
		-var-file="$(TF_VARS_FILE)" \
		-var="environment=$(ENVIRONMENT)" \
		-var="aws_region=$(AWS_REGION)" \
		-out="security-scan.tfplan"
	@echo "‚úÖ –°–∫–∞–Ω—É–≤–∞–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"

# Cost estimation
cost: ## –û—Ü—ñ–Ω–∏—Ç–∏ –≤–∞—Ä—Ç—ñ—Å—Ç—å
	@echo "üí∞ –û—Ü—ñ–Ω—é—é –≤–∞—Ä—Ç—ñ—Å—Ç—å —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∏..."
	terraform plan \
		-var-file="$(TF_VARS_FILE)" \
		-var="environment=$(ENVIRONMENT)" \
		-var="aws_region=$(AWS_REGION)" \
		-out="cost-estimate.tfplan"
	@echo "‚úÖ –û—Ü—ñ–Ω–∫–∞ –≤–∞—Ä—Ç–æ—Å—Ç—ñ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# Import existing resources
import: ## –Ü–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ —ñ—Å–Ω—É—é—á—ñ —Ä–µ—Å—É—Ä—Å–∏
	@echo "üì• –Ü–º–ø–æ—Ä—Ç—É—é —ñ—Å–Ω—É—é—á—ñ —Ä–µ—Å—É—Ä—Å–∏..."
	@echo "üí° –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ: terraform import <resource_type>.<resource_name> <resource_id>"
	@echo "üìö –ü—Ä–∏–∫–ª–∞–¥: terraform import aws_lambda_function.main arn:aws:lambda:us-east-1:123456789012:function:ai-swagger-bot-api-dev"

# Workspace management
workspace-new: ## –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π workspace
	@echo "üÜï –°—Ç–≤–æ—Ä—é—é –Ω–æ–≤–∏–π workspace: $(ENVIRONMENT)"
	terraform workspace new $(ENVIRONMENT) || true
	@echo "‚úÖ Workspace —Å—Ç–≤–æ—Ä–µ–Ω–æ"

workspace-select: ## –í–∏–±—Ä–∞—Ç–∏ workspace
	@echo "üîç –í–∏–±–∏—Ä–∞—é workspace: $(ENVIRONMENT)"
	terraform workspace select $(ENVIRONMENT)
	@echo "‚úÖ Workspace –≤–∏–±—Ä–∞–Ω–æ"

workspace-list: ## –ü–æ–∫–∞–∑–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ workspace'—ñ–≤
	@echo "üìã –°–ø–∏—Å–æ–∫ workspace'—ñ–≤:"
	terraform workspace list

# State management
state-pull: ## –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–∞–Ω –∑ S3
	@echo "üì• –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é —Å—Ç–∞–Ω –∑ S3..."
	terraform state pull
	@echo "‚úÖ –°—Ç–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ"

state-push: ## –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–∞–Ω –≤ S3
	@echo "üì§ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é —Å—Ç–∞–Ω –≤ S3..."
	terraform state push
	@echo "‚úÖ –°—Ç–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ"

# Lock management
force-unlock: ## –ü—Ä–∏–º—É—Å–æ–≤–æ —Ä–æ–∑–±–ª–æ–∫—É–≤–∞—Ç–∏ state
	@echo "üîì –ü—Ä–∏–º—É—Å–æ–≤–æ —Ä–æ–∑–±–ª–æ–∫–æ–≤—É—é state..."
	@echo "‚ö†Ô∏è –£–≤–∞–≥–∞! –¶–µ –º–æ–∂–µ –ø—Ä–∏–∑–≤–µ—Å—Ç–∏ –¥–æ –≤—Ç—Ä–∞—Ç–∏ –¥–∞–Ω–∏—Ö!"
	@read -p "–í–≤–µ–¥—ñ—Ç—å lock ID: " lock_id; \
	terraform force-unlock $$lock_id
	@echo "‚úÖ State —Ä–æ–∑–±–ª–æ–∫–æ–≤–∞–Ω–æ"

# Helpers
check-vars: ## –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∑–º—ñ–Ω–Ω—ñ
	@echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—é –∑–º—ñ–Ω–Ω—ñ..."
	@if [ ! -f "$(TF_VARS_FILE)" ]; then \
		echo "‚ùå –§–∞–π–ª $(TF_VARS_FILE) –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!"; \
		echo "üí° –°–∫–æ–ø—ñ—é–π—Ç–µ terraform.tfvars.example –≤ terraform.tfvars"; \
		exit 1; \
	fi
	@echo "‚úÖ –ó–º—ñ–Ω–Ω—ñ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–æ"

check-aws: ## –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ AWS credentials
	@echo "üîê –ü–µ—Ä–µ–≤—ñ—Ä—è—é AWS credentials..."
	@aws sts get-caller-identity > /dev/null 2>&1 || { \
		echo "‚ùå AWS credentials –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ!"; \
		echo "üí° –í–∏–∫–æ–Ω–∞–π—Ç–µ: aws configure"; \
		exit 1; \
	}
	@echo "‚úÖ AWS credentials –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ"

# Pre-flight checks
pre-flight: check-vars check-aws ## –í–∏–∫–æ–Ω–∞—Ç–∏ pre-flight –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
	@echo "‚úÖ Pre-flight –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ñ"

# Full deployment workflow
deploy: pre-flight init plan apply ## –ü–æ–≤–Ω–∏–π workflow —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è
	@echo "üéâ –†–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

# Quick deployment (without plan)
quick-deploy: pre-flight init apply-auto ## –®–≤–∏–¥–∫–µ —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –±–µ–∑ –ø–ª–∞–Ω—É
	@echo "üöÄ –®–≤–∏–¥–∫–µ —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" 