# Makefile –¥–ª—è AI Swagger Bot

.PHONY: help install test run clean lint format docs

# –ó–º—ñ–Ω–Ω—ñ
PYTHON = python
PIP = pip
STREAMLIT = streamlit
VENV = venv

# –ö–æ–º–∞–Ω–¥–∏ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –û–°
ifeq ($(OS),Windows_NT)
	PYTHON_VENV = $(VENV)\Scripts\python
	PIP_VENV = $(VENV)\Scripts\pip
	ACTIVATE = $(VENV)\Scripts\activate
else
	# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è conda
	PYTHON_VENV = python
	PIP_VENV = pip
	ACTIVATE = conda activate ai-swagger
endif

# CLI –¢–µ—Å—Ç–µ—Ä –∫–æ–º–∞–Ω–¥–∏
CLI_TESTER = $(PYTHON_VENV) cli_tester.py
INTERACTIVE_CLI = $(PYTHON_VENV) interactive_cli.py
QUICK_TEST = $(PYTHON_VENV) quick_test.py

help: ## –ü–æ–∫–∞–∑–∞—Ç–∏ –¥–æ–≤—ñ–¥–∫—É
	@echo "AI Swagger Bot - –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:"
	@echo ""
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

install: ## –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –ø—Ä–æ–µ–∫—Ç
	@echo "üöÄ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è AI Swagger Bot..."
	$(PYTHON) setup.py

install-dev: ## –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –ø—Ä–æ–µ–∫—Ç –∑ dev –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—è–º–∏
	@echo "üîß –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑ dev –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—è–º–∏..."
	$(PIP_VENV) install -r requirements.txt
	$(PIP_VENV) install -r requirements-dev.txt
	cp env_example.txt .env
	@echo "‚úÖ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

test: ## Run all tests
	python -m pytest tests/ -v --tb=short

test-fast: ## Run tests quickly (without slow tests)
	python -m pytest tests/ -v --tb=short -m "not slow"

test-coverage: ## Run tests with coverage
	python -m pytest tests/ -v --tb=short --cov=src --cov-report=html

test-clean: ## Clear pytest cache and run tests
	python -m pytest tests/ -v --tb=short --cache-clear

run: ## –ó–∞–ø—É—Å—Ç–∏—Ç–∏ Streamlit –¥–æ–¥–∞—Ç–æ–∫
	@echo "üåê –ó–∞–ø—É—Å–∫ Streamlit –¥–æ–¥–∞—Ç–∫—É..."
	$(PYTHON_VENV) -m streamlit run app.py

run-api: ## –ó–∞–ø—É—Å—Ç–∏—Ç–∏ FastAPI —Å–µ—Ä–≤—ñ—Å
	@echo "üöÄ –ó–∞–ø—É—Å–∫ FastAPI —Å–µ—Ä–≤—ñ—Å—É..."
	$(PYTHON_VENV) -m uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload

create-admin: ## –°—Ç–≤–æ—Ä–∏—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
	@echo "üë§ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞..."
	$(PYTHON_VENV) scripts/create_admin.py

run-cli: ## –ó–∞–ø—É—Å—Ç–∏—Ç–∏ CLI —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
	@echo "üíª –ó–∞–ø—É—Å–∫ CLI —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É..."
	$(PYTHON_VENV) cli.py --swagger examples/swagger_specs/shop_api.json

# CLI –¢–µ—Å—Ç–µ—Ä –∫–æ–º–∞–Ω–¥–∏
cli-test: ## –ó–∞–ø—É—Å—Ç–∏—Ç–∏ CLI —Ç–µ—Å—Ç–µ—Ä (–∫–æ–º–∞–Ω–¥–Ω–∏–π —Ä–µ–∂–∏–º)
	@echo "üîß –ó–∞–ø—É—Å–∫ CLI —Ç–µ—Å—Ç–µ—Ä–∞..."
	$(CLI_TESTER) health

cli-interactive: ## –ó–∞–ø—É—Å—Ç–∏—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π CLI —Ç–µ—Å—Ç–µ—Ä
	@echo "üéÆ –ó–∞–ø—É—Å–∫ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ CLI —Ç–µ—Å—Ç–µ—Ä–∞..."
	$(INTERACTIVE_CLI)

cli-quick: ## –ó–∞–ø—É—Å—Ç–∏—Ç–∏ —à–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç CLI
	@echo "‚ö° –ó–∞–ø—É—Å–∫ —à–≤–∏–¥–∫–æ–≥–æ —Ç–µ—Å—Ç—É CLI..."
	$(QUICK_TEST)

cli-health: ## Health check —á–µ—Ä–µ–∑ CLI
	@echo "üè• Health check —á–µ—Ä–µ–∑ CLI..."
	$(CLI_TESTER) health

cli-demo-user: ## –°—Ç–≤–æ—Ä–∏—Ç–∏ –¥–µ–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —á–µ—Ä–µ–∑ CLI
	@echo "üë§ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–µ–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —á–µ—Ä–µ–∑ CLI..."
	$(CLI_TESTER) demo-user

cli-upload-swagger: ## –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ Swagger —á–µ—Ä–µ–∑ CLI
	@echo "üìÅ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è Swagger —á–µ—Ä–µ–∑ CLI..."
	$(CLI_TESTER) upload-swagger --file examples/swagger_specs/shop_api.json

cli-chat: ## –ß–∞—Ç –∑ AI —á–µ—Ä–µ–∑ CLI
	@echo "üí¨ –ß–∞—Ç –∑ AI —á–µ—Ä–µ–∑ CLI..."
	$(CLI_TESTER) chat --message "–ü–æ–∫–∞–∂–∏ –≤—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ endpoints"

cli-prompts: ## –ü–µ—Ä–µ–≥–ª—è–¥ –ø—Ä–æ–º–ø—Ç—ñ–≤ —á–µ—Ä–µ–∑ CLI
	@echo "üìù –ü–µ—Ä–µ–≥–ª—è–¥ –ø—Ä–æ–º–ø—Ç—ñ–≤ —á–µ—Ä–µ–∑ CLI..."
	$(CLI_TESTER) prompts

cli-create-prompt: ## –°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–∞—Å—Ç–æ–º–Ω–∏–π –ø—Ä–æ–º–ø—Ç —á–µ—Ä–µ–∑ CLI
	@echo "‚ú® –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç—É —á–µ—Ä–µ–∑ CLI..."
	$(CLI_TESTER) create-prompt --name "–ú—ñ–π –ø—Ä–æ–º–ø—Ç" --description "–û–ø–∏—Å" --template "–¢–∏ –µ–∫—Å–ø–µ—Ä—Ç {user_query}" --category user_defined

cli-search-prompts: ## –ü–æ—à—É–∫ –ø—Ä–æ–º–ø—Ç—ñ–≤ —á–µ—Ä–µ–∑ CLI
	@echo "üîç –ü–æ—à—É–∫ –ø—Ä–æ–º–ø—Ç—ñ–≤ —á–µ—Ä–µ–∑ CLI..."
	$(CLI_TESTER) search-prompts --query "—Å—Ç–≤–æ—Ä–µ–Ω–Ω—è"

cli-export-prompts: ## –ï–∫—Å–ø–æ—Ä—Ç –ø—Ä–æ–º–ø—Ç—ñ–≤ —á–µ—Ä–µ–∑ CLI
	@echo "üì§ –ï–∫—Å–ø–æ—Ä—Ç –ø—Ä–æ–º–ø—Ç—ñ–≤ —á–µ—Ä–µ–∑ CLI..."
	$(CLI_TESTER) export-prompts --include-custom

cli-full-test: ## –ü–æ–≤–Ω–∏–π —Ü–∏–∫–ª —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ CLI
	@echo "üöÄ –ü–æ–≤–Ω–∏–π —Ü–∏–∫–ª —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ CLI..."
	$(MAKE) cli-health
	$(MAKE) cli-demo-user
	$(MAKE) cli-upload-swagger
	$(MAKE) cli-chat
	$(MAKE) cli-prompts
	$(MAKE) cli-create-prompt
	$(MAKE) cli-search-prompts
	$(MAKE) cli-export-prompts
	@echo "‚úÖ –ü–æ–≤–Ω–∏–π —Ü–∏–∫–ª —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

cli-help: ## –î–æ–≤—ñ–¥–∫–∞ –ø–æ CLI –∫–æ–º–∞–Ω–¥–∞–º
	@echo "üîß CLI –¢–µ—Å—Ç–µ—Ä - –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:"
	@echo ""
	@echo "üè• Health Check:"
	@echo "  make cli-health"
	@echo ""
	@echo "üë§ –î–µ–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á:"
	@echo "  make cli-demo-user"
	@echo ""
	@echo "üìÅ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è Swagger:"
	@echo "  make cli-upload-swagger"
	@echo ""
	@echo "üí¨ –ß–∞—Ç –∑ AI:"
	@echo "  make cli-chat"
	@echo ""
	@echo "üìù –ü—Ä–æ–º–ø—Ç–∏:"
	@echo "  make cli-prompts"
	@echo ""
	@echo "‚ú® –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ–º–ø—Ç—É:"
	@echo "  make cli-create-prompt"
	@echo ""
	@echo "üîç –ü–æ—à—É–∫ –ø—Ä–æ–º–ø—Ç—ñ–≤:"
	@echo "  make cli-search-prompts"
	@echo ""
	@echo "üì§ –ï–∫—Å–ø–æ—Ä—Ç –ø—Ä–æ–º–ø—Ç—ñ–≤:"
	@echo "  make cli-export-prompts"
	@echo ""
	@echo "üéÆ –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π —Ä–µ–∂–∏–º:"
	@echo "  make cli-interactive"
	@echo ""
	@echo "‚ö° –®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç:"
	@echo "  make cli-quick"
	@echo ""
	@echo "üöÄ –ü–æ–≤–Ω–∏–π —Ü–∏–∫–ª:"
	@echo "  make cli-full-test"

run-examples: ## –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –ø—Ä–∏–∫–ª–∞–¥–∏
	@echo "üìù –ó–∞–ø—É—Å–∫ –ø—Ä–∏–∫–ª–∞–¥—ñ–≤..."
	$(PYTHON_VENV) examples/basic_usage.py

lint: ## –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∫–æ–¥
	@echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–¥—É..."
	$(PYTHON_VENV) -m black --check src/ tests/ examples/
	$(PYTHON_VENV) -m isort --check-only src/ tests/ examples/

format: ## –§–æ—Ä–º–∞—Ç—É–≤–∞—Ç–∏ –∫–æ–¥
	@echo "üé® –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –∫–æ–¥—É..."
	$(PYTHON_VENV) -m black src/ tests/ examples/
	$(PYTHON_VENV) -m isort src/ tests/ examples/

clean: ## –û—á–∏—Å—Ç–∏—Ç–∏ –ø—Ä–æ–µ–∫—Ç
	@echo "üßπ –û—á–∏—â–µ–Ω–Ω—è –ø—Ä–æ–µ–∫—Ç—É..."
	rm -rf __pycache__/
	rm -rf src/__pycache__/
	rm -rf tests/__pycache__/
	rm -rf .pytest_cache/
	rm -rf htmlcov/
	rm -rf .coverage
	rm -rf chroma_db/
	rm -rf logs/
	@echo "‚úÖ –û—á–∏—â–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

clean-venv: ## –í–∏–¥–∞–ª–∏—Ç–∏ –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ
	@echo "üóëÔ∏è –í–∏–¥–∞–ª–µ–Ω–Ω—è –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞..."
	rm -rf $(VENV)
	@echo "‚úÖ –í—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ –≤–∏–¥–∞–ª–µ–Ω–æ!"

docs: ## –°—Ç–≤–æ—Ä–∏—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—é
	@echo "üìö –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó..."
	$(PIP_VENV) install pdoc3
	$(PYTHON_VENV) -m pdoc --html --output-dir docs src/
	@echo "‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–∞ –≤ docs/"

check: ## –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø—Ä–æ–µ–∫—Ç
	@echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç—É..."
	$(MAKE) lint
	$(MAKE) test

ci: ## –ó–∞–ø—É—Å—Ç–∏—Ç–∏ CI/CD –ª–æ–∫–∞–ª—å–Ω–æ
	@echo "üöÄ –ó–∞–ø—É—Å–∫ CI/CD –ª–æ–∫–∞–ª—å–Ω–æ..."
	$(MAKE) lint
	$(MAKE) test-coverage
	$(MAKE) security-check
	$(MAKE) docker-test

security-check: ## –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –±–µ–∑–ø–µ–∫—É
	@echo "üîí –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–µ–∑–ø–µ–∫–∏..."
	$(PYTHON_VENV) -m bandit -r src/ -f json -o bandit-report.json || true

docker-test: ## –¢–µ—Å—Ç—É–≤–∞—Ç–∏ Docker –æ–±—Ä–∞–∑
	@echo "üê≥ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Docker –æ–±—Ä–∞–∑—É..."
	docker build -t ai-swagger-bot:test .
	docker run --rm ai-swagger-bot:test python -c "import sys; print('Python version:', sys.version)"
	docker run --rm ai-swagger-bot:test python -m pytest tests/ -v

docker-compose-test: ## –¢–µ—Å—Ç—É–≤–∞—Ç–∏ –∑ Docker Compose
	@echo "üê≥ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑ Docker Compose..."
	docker-compose -f docker-compose.test.yml run --rm test
	docker-compose -f docker-compose.test.yml run --rm lint

docker-up: ## –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –ø—Ä–æ–µ–∫—Ç –∑ Docker Compose
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç—É –∑ Docker Compose..."
	docker-compose up -d

docker-down: ## –ó—É–ø–∏–Ω–∏—Ç–∏ –ø—Ä–æ–µ–∫—Ç
	@echo "üõë –ó—É–ø–∏–Ω–∫–∞ –ø—Ä–æ–µ–∫—Ç—É..."
	docker-compose down

docker-logs: ## –ü–æ–∫–∞–∑–∞—Ç–∏ –ª–æ–≥–∏
	@echo "üìã –õ–æ–≥–∏ –ø—Ä–æ–µ–∫—Ç—É..."
	docker-compose logs -f

docker-rebuild: ## –ü–µ—Ä–µ–±—É–¥—É–≤–∞—Ç–∏ —Ç–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –ø—Ä–æ–µ–∫—Ç
	@echo "üî® –ü–µ—Ä–µ–±—É–¥—É–≤–∞–Ω–Ω—è —Ç–∞ –∑–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç—É..."
	docker-compose down
	docker-compose up --build -d

docker-status: ## –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤—ñ—Å—ñ–≤
	@echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤—ñ—Å—ñ–≤..."
	docker-compose ps

pre-commit-install: ## –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ pre-commit hooks
	@echo "üîß –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è pre-commit hooks..."
	$(PIP_VENV) install pre-commit
	$(PYTHON_VENV) -m pre_commit install

pre-commit-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç–∏ pre-commit –Ω–∞ –≤—Å—ñ—Ö —Ñ–∞–π–ª–∞—Ö
	@echo "üîß –ó–∞–ø—É—Å–∫ pre-commit..."
	$(PYTHON_VENV) -m pre_commit run --all-files
	@echo "‚úÖ Pre-commit –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

dev-setup: ## –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è —Ä–æ–∑—Ä–æ–±–∫–∏
	@echo "‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è —Ä–æ–∑—Ä–æ–±–∫–∏..."
	$(MAKE) install-dev
	$(MAKE) format
	$(MAKE) check
	@echo "‚úÖ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

# –ö–æ–º–∞–Ω–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∞–≥–µ–Ω—Ç–∞–º–∏
test-simple-agent: ## –¢–µ—Å—Ç—É–≤–∞—Ç–∏ –ø—Ä–æ—Å—Ç–∏–π –∞–≥–µ–Ω—Ç
	@echo "ü§ñ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Å—Ç–æ–≥–æ –∞–≥–µ–Ω—Ç–∞..."
	$(PYTHON_VENV) -c "from src.simple_agent import SimpleSwaggerAgent; print('‚úÖ SimpleSwaggerAgent —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ')"

test-api-agent: ## –¢–µ—Å—Ç—É–≤–∞—Ç–∏ API –∞–≥–µ–Ω—Ç
	@echo "ü§ñ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API –∞–≥–µ–Ω—Ç–∞..."
	$(PYTHON_VENV) -c "from src.api_agent import SwaggerAgent; print('‚úÖ SwaggerAgent —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ')"

# –ö–æ–º–∞–Ω–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ Swagger —Ñ–∞–π–ª–∞–º–∏
list-specs: ## –ü–æ–∫–∞–∑–∞—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ Swagger —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
	@echo "üìã –î–æ—Å—Ç—É–ø–Ω—ñ Swagger —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—ó:"
	@ls -la examples/swagger_specs/

validate-specs: ## –í–∞–ª—ñ–¥—É–≤–∞—Ç–∏ Swagger —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
	@echo "‚úÖ –í–∞–ª—ñ–¥–∞—Ü—ñ—è Swagger —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ–π..."
	@for file in examples/swagger_specs/*.json; do \
		echo "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ $$file..."; \
		$(PYTHON_VENV) -c "import json; json.load(open('$$file')); print('‚úÖ $$file - –≤–∞–ª—ñ–¥–Ω–∏–π')"; \
	done

# –ö–æ–º–∞–Ω–¥–∏ –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
logs: ## –ü–æ–∫–∞–∑–∞—Ç–∏ –ª–æ–≥–∏
	@echo "üìã –õ–æ–≥–∏:"
	@if [ -d "logs" ]; then ls -la logs/; else echo "–î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è logs –Ω–µ —ñ—Å–Ω—É—î"; fi

monitor: ## –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º–∏
	@echo "üìä –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º–∏:"
	@echo "Python –≤–µ—Ä—Å—ñ—è: $$(python --version)"
	@echo "–í—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ: $$(if [ -d "venv" ]; then echo "–ê–∫—Ç–∏–≤–Ω–µ"; else echo "–ù–µ –∞–∫—Ç–∏–≤–Ω–µ"; fi)"
	@echo "OpenAI API –∫–ª—é—á: $$(if [ -n "$$OPENAI_API_KEY" ]; then echo "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"; else echo "–ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"; fi)"

# –ö–æ–º–∞–Ω–¥–∏ –¥–ª—è —Ä–æ–∑–≥–æ—Ä—Ç–∞–Ω–Ω—è
build: ## –ó—ñ–±—Ä–∞—Ç–∏ –ø—Ä–æ–µ–∫—Ç
	@echo "üî® –ó–±—ñ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç—É..."
	$(MAKE) clean
	$(MAKE) install
	$(MAKE) test
	@echo "‚úÖ –ó–±—ñ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

package: ## –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–∞–∫–µ—Ç
	@echo "üì¶ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–∞–∫–µ—Ç—É..."
	$(PYTHON_VENV) setup.py sdist bdist_wheel
	@echo "‚úÖ –ü–∞–∫–µ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ!"

# –î–æ–ø–æ–º—ñ–∂–Ω—ñ –∫–æ–º–∞–Ω–¥–∏
status: ## –ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç—É
	@echo "üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç—É:"
	@echo "Python: $$(python --version)"
	@echo "–í—ñ—Ä—Ç—É–∞–ª—å–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ: $$(if [ -d "venv" ]; then echo "‚úÖ"; else echo "‚ùå"; fi)"
	@echo "–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: $$(if [ -f "requirements.txt" ]; then echo "‚úÖ"; else echo "‚ùå"; fi)"
	@echo "–¢–µ—Å—Ç–∏: $$(if [ -d "tests" ]; then echo "‚úÖ"; else echo "‚ùå"; fi)"
	@echo "Swagger —Ñ–∞–π–ª–∏: $$(ls examples/swagger_specs/*.json 2>/dev/null | wc -l) —Ñ–∞–π–ª—ñ–≤"

help-dev: ## –î–æ–≤—ñ–¥–∫–∞ –¥–ª—è —Ä–æ–∑—Ä–æ–±–Ω–∏–∫—ñ–≤
	@echo "üîß –ö–æ–º–∞–Ω–¥–∏ –¥–ª—è —Ä–æ–∑—Ä–æ–±–∫–∏:"
	@echo "  make install-dev    - –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –∑ dev –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—è–º–∏"
	@echo "  make format         - –§–æ—Ä–º–∞—Ç—É–≤–∞—Ç–∏ –∫–æ–¥"
	@echo "  make lint           - –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∫–æ–¥"
	@echo "  make test           - –ó–∞–ø—É—Å—Ç–∏—Ç–∏ —Ç–µ—Å—Ç–∏"
	@echo "  make test-coverage  - –¢–µ—Å—Ç–∏ –∑ –ø–æ–∫—Ä–∏—Ç—Ç—è–º"
	@echo "  make check          - –ü–æ–≤–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞"
	@echo "  make clean          - –û—á–∏—Å—Ç–∏—Ç–∏ –ø—Ä–æ–µ–∫—Ç"
	@echo "  make docs           - –°—Ç–≤–æ—Ä–∏—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—é"
