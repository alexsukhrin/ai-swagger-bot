#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É
"""

import json

import requests

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
API_BASE_URL = "http://localhost:8000"


def test_frontend_flow():
    """–¢–µ—Å—Ç—É—î –ø–æ–≤–Ω–∏–π flow —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É"""
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É –∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—î—é")
    print("=" * 50)

    # 1. –°—Ç–≤–æ—Ä—é—î–º–æ –¥–µ–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    print("1Ô∏è‚É£ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–µ–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...")
    response = requests.post(f"{API_BASE_URL}/users/demo")

    if response.status_code != 200:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {response.text}")
        return False

    user_data = response.json()
    user_id = user_data["user_id"]
    token = user_data["token"]

    print(f"‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å—Ç–≤–æ—Ä–µ–Ω–æ: {user_id}")
    print(f"üîë –¢–æ–∫–µ–Ω: {token[:50]}...")

    # 2. –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ Swagger —Ñ–∞–π–ª
    print("\n2Ô∏è‚É£ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è Swagger —Ñ–∞–π–ª—É...")

    headers = {"Authorization": f"Bearer {token}"}

    with open("examples/swagger_specs/shop_api.json", "rb") as f:
        files = {"file": ("shop_api.json", f, "application/json")}
        response = requests.post(f"{API_BASE_URL}/upload-swagger", files=files, headers=headers)

    if response.status_code != 200:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: {response.text}")
        return False

    swagger_data = response.json()
    swagger_id = swagger_data["swagger_id"]

    print(f"‚úÖ Swagger —Ñ–∞–π–ª –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: {swagger_id}")
    print(f"üìä Endpoints: {swagger_data['endpoints_count']}")

    # 3. –¢–µ—Å—Ç—É—î–º–æ —á–∞—Ç
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —á–∞—Ç—É...")

    chat_data = {"message": "–ü–æ–∫–∞–∂–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ endpoints"}
    response = requests.post(f"{API_BASE_URL}/chat", json=chat_data, headers=headers)

    if response.status_code != 200:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∞—Ç—É: {response.text}")
        return False

    chat_response = response.json()
    print(f"‚úÖ –ß–∞—Ç –ø—Ä–∞—Ü—é—î!")
    print(f"ü§ñ –í—ñ–¥–ø–æ–≤—ñ–¥—å: {chat_response['response'][:100]}...")

    # 4. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —ñ–∑–æ–ª—è—Ü—ñ—é
    print("\n4Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–∑–æ–ª—è—Ü—ñ—ó...")

    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥—Ä—É–≥–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    response2 = requests.post(f"{API_BASE_URL}/users/demo")
    if response2.status_code == 200:
        user_data2 = response2.json()
        token2 = user_data2["token"]
        headers2 = {"Authorization": f"Bearer {token2}"}

        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –¥—Ä—É–≥–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–∞—á–∏—Ç—å —Ñ–∞–π–ª–∏ –ø–µ—Ä—à–æ–≥–æ
        response = requests.get(f"{API_BASE_URL}/swagger-specs", headers=headers2)
        if response.status_code == 200:
            specs = response.json()
            print(f"‚úÖ User 2 –º–∞—î {len(specs)} Swagger —Ñ–∞–π–ª—ñ–≤ (—ñ–∑–æ–ª—è—Ü—ñ—è –ø—Ä–∞—Ü—é—î)")
        else:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —ñ–∑–æ–ª—è—Ü—ñ—ó: {response.text}")

    print("\nüéâ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    print("   ‚Ä¢ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –ø—Ä–∞—Ü—é—î")
    print("   ‚Ä¢ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ –ø—Ä–∞—Ü—é—î")
    print("   ‚Ä¢ –ß–∞—Ç –ø—Ä–∞—Ü—é—î")
    print("   ‚Ä¢ –Ü–∑–æ–ª—è—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –ø—Ä–∞—Ü—é—î")

    return True


if __name__ == "__main__":
    test_frontend_flow()
