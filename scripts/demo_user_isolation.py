#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —ñ–∑–æ–ª—è—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —Ç–∞ Swagger —Ñ–∞–π–ª—ñ–≤
"""

import json
import time
from datetime import datetime

import requests

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
API_BASE_URL = "http://localhost:8000"


def create_demo_user():
    """–°—Ç–≤–æ—Ä—é—î –¥–µ–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    print("üë§ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–µ–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...")

    response = requests.post(f"{API_BASE_URL}/users/demo")
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ –î–µ–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å—Ç–≤–æ—Ä–µ–Ω–æ: {data['user_id']}")
        return data
    else:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {response.text}")
        return None


def upload_swagger_file(token, user_id, filename="examples/swagger_specs/shop_api.json"):
    """–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î Swagger —Ñ–∞–π–ª –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    print(f"üìÅ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è Swagger —Ñ–∞–π–ª—É –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}...")

    headers = {"Authorization": f"Bearer {token}"}

    with open(filename, "rb") as f:
        files = {"file": (filename, f, "application/json")}
        response = requests.post(f"{API_BASE_URL}/upload-swagger", headers=headers, files=files)

    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ Swagger —Ñ–∞–π–ª –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: {data['swagger_id']}")
        print(f"   Endpoints: {data['endpoints_count']}")
        return data
    else:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: {response.text}")
        return None


def send_chat_message(token, message):
    """–í—ñ–¥–ø—Ä–∞–≤–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ —á–∞—Ç"""
    headers = {"Authorization": f"Bearer {token}", "Content-Type": "application/json"}

    data = {"message": message}
    response = requests.post(f"{API_BASE_URL}/chat", headers=headers, json=data)

    if response.status_code == 200:
        data = response.json()
        return data["response"]
    else:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∞—Ç—É: {response.text}")
        return None


def get_user_swagger_specs(token):
    """–û—Ç—Ä–∏–º—É—î —Å–ø–∏—Å–æ–∫ Swagger —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.get(f"{API_BASE_URL}/swagger-specs", headers=headers)

    if response.status_code == 200:
        return response.json()
    else:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ–π: {response.text}")
        return []


def demo_user_isolation():
    """–î–µ–º–æ–Ω—Å—Ç—Ä—É—î —ñ–∑–æ–ª—è—Ü—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"""
    print("üîí –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —ñ–∑–æ–ª—è—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —Ç–∞ Swagger —Ñ–∞–π–ª—ñ–≤")
    print("=" * 60)

    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–≤–æ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    user1_data = create_demo_user()
    if not user1_data:
        return

    time.sleep(1)  # –ù–µ–≤–µ–ª–∏–∫–∞ –ø–∞—É–∑–∞

    user2_data = create_demo_user()
    if not user2_data:
        return

    print(f"\nüë• –°—Ç–≤–æ—Ä–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:")
    print(f"   User 1: {user1_data['user_id']}")
    print(f"   User 2: {user2_data['user_id']}")

    # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ Swagger —Ñ–∞–π–ª–∏ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    print(f"\nüìÅ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è Swagger —Ñ–∞–π–ª—ñ–≤...")

    swagger1 = upload_swagger_file(user1_data["token"], user1_data["user_id"])
    if not swagger1:
        return

    swagger2 = upload_swagger_file(user2_data["token"], user2_data["user_id"])
    if not swagger2:
        return

    print(f"\n‚úÖ Swagger —Ñ–∞–π–ª–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ:")
    print(f"   User 1: {swagger1['swagger_id']}")
    print(f"   User 2: {swagger2['swagger_id']}")

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —ñ–∑–æ–ª—è—Ü—ñ—é - –∫–æ–∂–µ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–∞—á–∏—Ç—å —Ç—ñ–ª—å–∫–∏ —Å–≤–æ—ó —Ñ–∞–π–ª–∏
    print(f"\nüîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–∑–æ–ª—è—Ü—ñ—ó...")

    specs1 = get_user_swagger_specs(user1_data["token"])
    specs2 = get_user_swagger_specs(user2_data["token"])

    print(f"üìã User 1 –º–∞—î {len(specs1)} Swagger —Ñ–∞–π–ª—ñ–≤:")
    for spec in specs1:
        print(f"   - {spec['filename']} (ID: {spec['id']})")

    print(f"üìã User 2 –º–∞—î {len(specs2)} Swagger —Ñ–∞–π–ª—ñ–≤:")
    for spec in specs2:
        print(f"   - {spec['filename']} (ID: {spec['id']})")

    # –¢–µ—Å—Ç—É—î–º–æ —á–∞—Ç –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    print(f"\nüí¨ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —á–∞—Ç—É...")

    message = "–ü–æ–∫–∞–∂–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ endpoints"

    print(f"ü§ñ User 1 –∑–∞–ø–∏—Ç—É—î: {message}")
    response1 = send_chat_message(user1_data["token"], message)
    if response1:
        print(f"   –í—ñ–¥–ø–æ–≤—ñ–¥—å: {response1[:100]}...")

    print(f"ü§ñ User 2 –∑–∞–ø–∏—Ç—É—î: {message}")
    response2 = send_chat_message(user2_data["token"], message)
    if response2:
        print(f"   –í—ñ–¥–ø–æ–≤—ñ–¥—å: {response2[:100]}...")

    print(f"\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    print(f"   ‚Ä¢ –ö–æ–∂–µ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–∞—î —Å–≤–æ—é —ñ–∑–æ–ª—å–æ–≤–∞–Ω—É —Å–µ—Å—ñ—é")
    print(f"   ‚Ä¢ Swagger —Ñ–∞–π–ª–∏ –ø—Ä–∏–≤'—è–∑–∞–Ω—ñ –¥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤")
    print(f"   ‚Ä¢ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –Ω–µ –±–∞—á–∞—Ç—å —Ñ–∞–π–ª–∏ –æ–¥–∏–Ω –æ–¥–Ω–æ–≥–æ")
    print(f"   ‚Ä¢ –ß–∞—Ç –ø—Ä–∞—Ü—é—î –Ω–µ–∑–∞–ª–µ–∂–Ω–æ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")


if __name__ == "__main__":
    demo_user_isolation()
