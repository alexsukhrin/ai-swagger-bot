#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º –∑ —Å–µ—Å—ñ—è–º–∏ —á–∞—Ç—É
–î–æ–ø–æ–º–∞–≥–∞—î –∑—Ä–æ–∑—É–º—ñ—Ç–∏ —á–æ–º—É –ø–µ—Ä–µ–∫–ª—é—á–∞—é—Ç—å—Å—è —á–∞—Ç–∏
"""

import json
import os
import sys
from datetime import datetime, timedelta

import requests

# –î–æ–¥–∞—î–º–æ —à–ª—è—Ö –¥–æ src –¥–ª—è —ñ–º–ø–æ—Ä—Ç—É –º–æ–¥—É–ª—ñ–≤
sys.path.append(os.path.join(os.path.dirname(__file__), ".."))

from cli_tester import APITester


def debug_sessions():
    """–î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–µ—Å—ñ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    print("üîç –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º –∑ —Å–µ—Å—ñ—è–º–∏ —á–∞—Ç—É")
    print("=" * 50)

    # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–µ—Ä
    tester = APITester("http://localhost:8000")

    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–µ–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    print("üë§ –°—Ç–≤–æ—Ä—é—î–º–æ –¥–µ–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞...")
    user_data = tester.create_demo_user()
    if not user_data:
        print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –¥–µ–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞")
        return

    print(f"‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å—Ç–≤–æ—Ä–µ–Ω–∏–π: {user_data['email']}")

    # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Å–µ—Å—ñ—ó
    print("\nüìä –ê–Ω–∞–ª—ñ–∑ —Å–µ—Å—ñ–π...")
    try:
        response = requests.get(
            "http://localhost:8000/debug/sessions",
            headers={"Authorization": f"Bearer {user_data['token']}"},
        )

        if response.status_code == 200:
            sessions_data = response.json()
            print(f"üë• –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {sessions_data['user_id']}")
            print(f"üìà –í—Å—å–æ–≥–æ —Å–µ—Å—ñ–π: {sessions_data['total_sessions']}")
            print(f"üü¢ –ê–∫—Ç–∏–≤–Ω–∏—Ö —Å–µ—Å—ñ–π: {sessions_data['active_sessions']}")

            if sessions_data["sessions"]:
                print("\nüìã –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å–µ—Å—ñ—ó:")
                for i, session in enumerate(sessions_data["sessions"], 1):
                    status = "üü¢ –ê–∫—Ç–∏–≤–Ω–∞" if session["is_active"] else "üî¥ –ù–µ–∞–∫—Ç–∏–≤–Ω–∞"
                    print(f"  {i}. {status} - {session['session_id']}")
                    print(f"     –ù–∞–∑–≤–∞: {session['session_name']}")
                    print(f"     –°—Ç–≤–æ—Ä–µ–Ω–∞: {session['created_at']}")
                    print(f"     –û–Ω–æ–≤–ª–µ–Ω–∞: {session['updated_at']}")
                    print(f"     –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å: {session['messages_count']}")
                    if session["swagger_spec_id"]:
                        print(f"     Swagger ID: {session['swagger_spec_id']}")
                    print()
            else:
                print("üì≠ –°–µ—Å—ñ–π –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        else:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–µ—Å—ñ–π: {response.status_code}")
            print(response.text)

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

    # –¢–µ—Å—Ç—É—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    print("\nüí¨ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å...")

    # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ Swagger —Ñ–∞–π–ª
    swagger_file = "examples/swagger_specs/simple_api.json"
    if os.path.exists(swagger_file):
        print(f"üìÅ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ Swagger —Ñ–∞–π–ª: {swagger_file}")

        with open(swagger_file, "rb") as f:
            files = {"file": f}
            response = requests.post(
                "http://localhost:8000/upload-swagger",
                headers={"Authorization": f"Bearer {user_data['token']}"},
                files=files,
            )

            if response.status_code == 200:
                swagger_data = response.json()
                print(f"‚úÖ Swagger –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ: {swagger_data['swagger_id']}")

                # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                print("\nü§ñ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ç–µ—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...")
                chat_response = requests.post(
                    "http://localhost:8000/chat",
                    headers={
                        "Authorization": f"Bearer {user_data['token']}",
                        "Content-Type": "application/json",
                    },
                    json={"message": "–ü–æ–∫–∞–∂–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ endpoints"},
                )

                if chat_response.status_code == 200:
                    print("‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ")

                    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–µ—Å—ñ—ó –ø—ñ—Å–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                    print("\nüîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–µ—Å—ñ—ó –ø—ñ—Å–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...")
                    sessions_response = requests.get(
                        "http://localhost:8000/debug/sessions",
                        headers={"Authorization": f"Bearer {user_data['token']}"},
                    )

                    if sessions_response.status_code == 200:
                        sessions_data = sessions_response.json()
                        print(f"üìä –ü—ñ—Å–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:")
                        print(f"   –í—Å—å–æ–≥–æ —Å–µ—Å—ñ–π: {sessions_data['total_sessions']}")
                        print(f"   –ê–∫—Ç–∏–≤–Ω–∏—Ö —Å–µ—Å—ñ–π: {sessions_data['active_sessions']}")

                        # –ü–æ–∫–∞–∑—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—é —Å–µ—Å—ñ—é
                        if sessions_data["sessions"]:
                            latest_session = sessions_data["sessions"][0]
                            print(f"   –û—Å—Ç–∞–Ω–Ω—è —Å–µ—Å—ñ—è: {latest_session['session_id']}")
                            print(f"   –ê–∫—Ç–∏–≤–Ω–∞: {latest_session['is_active']}")
                            print(f"   –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å: {latest_session['messages_count']}")
                    else:
                        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å–µ—Å—ñ–π: {sessions_response.status_code}")
                else:
                    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {chat_response.status_code}")
                    print(chat_response.text)
            else:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è Swagger: {response.status_code}")
                print(response.text)
    else:
        print(f"‚ùå –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: {swagger_file}")

    print("\n‚úÖ –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")


if __name__ == "__main__":
    debug_sessions()
