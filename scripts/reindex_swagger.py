#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ—ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó Swagger —Ñ–∞–π–ª—ñ–≤.
–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –ø—ñ—Å–ª—è –æ—á–∏—â–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö.
"""

import os
import sys
from pathlib import Path

# –î–æ–¥–∞—î–º–æ –∫–æ—Ä–µ–Ω–µ–≤—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –¥–æ —à–ª—è—Ö—É
sys.path.append(str(Path(__file__).parent.parent))

from src.enhanced_swagger_parser import EnhancedSwaggerParser
from src.rag_engine import RAGEngine


def reindex_swagger_files():
    """–ü–µ—Ä–µ—ñ–Ω–¥–µ–∫—Å—É—î –≤—Å—ñ Swagger —Ñ–∞–π–ª–∏."""
    print("üîÑ –ü–µ—Ä–µ—ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—è Swagger —Ñ–∞–π–ª—ñ–≤")
    print("=" * 50)

    # –®–ª—è—Ö –¥–æ Swagger —Ñ–∞–π–ª—ñ–≤
    swagger_dir = Path("examples/swagger_specs")

    if not swagger_dir.exists():
        print(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞: {swagger_dir}")
        return

    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ JSON —Ñ–∞–π–ª–∏
    swagger_files = list(swagger_dir.glob("*.json"))

    if not swagger_files:
        print(f"‚ùå Swagger —Ñ–∞–π–ª–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ {swagger_dir}")
        return

    print(f"üìÅ –ó–Ω–∞–π–¥–µ–Ω–æ {len(swagger_files)} Swagger —Ñ–∞–π–ª—ñ–≤:")
    for file in swagger_files:
        print(f"   ‚Ä¢ {file.name}")

    # –Ü–Ω–¥–µ–∫—Å—É—î–º–æ –∫–æ–∂–µ–Ω —Ñ–∞–π–ª
    for swagger_file in swagger_files:
        print(f"\nüîÑ –Ü–Ω–¥–µ–∫—Å–∞—Ü—ñ—è: {swagger_file.name}")

        try:
            # –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞—Ä—Å–µ—Ä –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ñ–∞–π–ª—É
            parser = EnhancedSwaggerParser(str(swagger_file))

            # –°—Ç–≤–æ—Ä—é—î–º–æ RAG –¥–≤–∏–≥—É–Ω –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ñ–∞–π–ª—É
            rag_engine = RAGEngine(str(swagger_file))

            # –ü–∞—Ä—Å–∏–º–æ Swagger —Ñ–∞–π–ª —Ç–∞ —Å—Ç–≤–æ—Ä—é—î–º–æ chunks
            chunks = parser.create_enhanced_endpoint_chunks()

            if chunks:
                # –°—Ç–≤–æ—Ä—é—î–º–æ –≤–µ–∫—Ç–æ—Ä–Ω—É –±–∞–∑—É –∑ chunks
                rag_engine.create_vectorstore(chunks)
                print(f"‚úÖ –£—Å–ø—ñ—à–Ω–æ —ñ–Ω–¥–µ–∫—Å–æ–≤–∞–Ω–æ: {swagger_file.name} ({len(chunks)} endpoints)")
            else:
                print(f"‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ endpoints –≤: {swagger_file.name}")

        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó {swagger_file.name}: {e}")

    print("\n‚úÖ –ü–µ—Ä–µ—ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("üí° –¢–µ–ø–µ—Ä –º–æ–∂–Ω–∞ –∑–∞–ø—É—Å–∫–∞—Ç–∏ —á–∞—Ç-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å")


def main():
    """–û—Å–Ω–æ–≤–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ—ñ–Ω–¥–µ–∫—Å–∞—Ü—ñ—ó."""
    print("üîÑ –ü–ï–†–ï–Ü–ù–î–ï–ö–°–ê–¶–Ü–Ø SWAGGER –§–ê–ô–õ–Ü–í")
    print("=" * 50)

    reindex_swagger_files()


if __name__ == "__main__":
    main()
