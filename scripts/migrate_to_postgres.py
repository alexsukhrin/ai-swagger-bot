#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º—ñ–≥—Ä–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö –∑ SQLite –≤ PostgreSQL
"""

import os
import sys
from pathlib import Path

# –î–æ–¥–∞—î–º–æ –∫–æ—Ä–µ–Ω–µ–≤—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –¥–æ —à–ª—è—Ö—É
sys.path.append(str(Path(__file__).parent.parent))

from src.postgres_prompt_manager import PostgresPromptManager


def main():
    """–û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –º—ñ–≥—Ä–∞—Ü—ñ—ó."""
    print("üöÄ –ü–æ—á–∞—Ç–æ–∫ –º—ñ–≥—Ä–∞—Ü—ñ—ó –∑ SQLite –≤ PostgreSQL")

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î SQLite –±–∞–∑–∞
    sqlite_path = "prompts.db"
    if not os.path.exists(sqlite_path):
        print(f"‚ùå –§–∞–π–ª {sqlite_path} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return

    print(f"üìÅ –ó–Ω–∞–π–¥–µ–Ω–æ SQLite –±–∞–∑—É: {sqlite_path}")

    try:
        # –°—Ç–≤–æ—Ä—é—î–º–æ –º–µ–Ω–µ–¥–∂–µ—Ä PostgreSQL
        postgres_manager = PostgresPromptManager()

        # –ú—ñ–≥—Ä—É—î–º–æ –¥–∞–Ω—ñ
        postgres_manager.migrate_from_sqlite(sqlite_path)

        # –ü–æ–∫–∞–∑—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = postgres_manager.get_statistics()
        print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—ñ—Å–ª—è –º—ñ–≥—Ä–∞—Ü—ñ—ó:")
        print(f"   –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–æ–º–ø—Ç—ñ–≤: {stats['total_prompts']}")
        print(f"   –ê–∫—Ç–∏–≤–Ω–∏—Ö –ø—Ä–æ–º–ø—Ç—ñ–≤: {stats['active_prompts']}")
        print(f"   –°–µ—Ä–µ–¥–Ω—ñ–π —É—Å–ø—ñ—Ö: {stats['avg_success_rate']:.2%}")
        print(f"   –ó–∞–≥–∞–ª—å–Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: {stats['total_usage']}")

        print("\n‚úÖ –ú—ñ–≥—Ä–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!")
        print("üí° –¢–µ–ø–µ—Ä —Å–∏—Å—Ç–µ–º–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î PostgreSQL –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –ø—Ä–æ–º–ø—Ç—ñ–≤")

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –º—ñ–≥—Ä–∞—Ü—ñ—ó: {e}")
        return


if __name__ == "__main__":
    main()
