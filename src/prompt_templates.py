"""
–ì–æ—Ç–æ–≤—ñ –ø—Ä–æ–º–ø—Ç-—à–∞–±–ª–æ–Ω–∏ –¥–ª—è InteractiveSwaggerAgent
"""

import json
from typing import Any, Dict, List, Optional


class PromptTemplates:
    """–ö–ª–∞—Å –∑ –≥–æ—Ç–æ–≤–∏–º–∏ –ø—Ä–æ–º–ø—Ç-—à–∞–±–ª–æ–Ω–∞–º–∏ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Å—Ü–µ–Ω–∞—Ä—ñ—ó–≤."""

    @staticmethod
    def get_system_prompt() -> str:
        """–ó–∞–≥–∞–ª—å–Ω–∏–π —Å–∏—Å—Ç–µ–º–Ω–∏–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –∞–≥–µ–Ω—Ç–∞."""
        return """
–¢–∏ - –µ–∫—Å–ø–µ—Ä—Ç –∑ API —Ç–∞ Swagger/OpenAPI —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—è–º–∏. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º –≤–∑–∞—î–º–æ–¥—ñ—è—Ç–∏ –∑ API —á–µ—Ä–µ–∑ –ø—Ä–∏—Ä–æ–¥–Ω—É –º–æ–≤—É.

–¢–∏ –º–∞—î—à –¥–æ—Å—Ç—É–ø –¥–æ:
- Swagger/OpenAPI —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—ó API
- –Ü—Å—Ç–æ—Ä—ñ—ó –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö –≤–∑–∞—î–º–æ–¥—ñ–π –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º
- –ú–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ API –≤–∏–∫–ª–∏–∫–∏
- –ê–Ω–∞–ª—ñ–∑—É –ø–æ–º–∏–ª–æ–∫ —Å–µ—Ä–≤–µ—Ä–∞

–¢–≤–æ—ó –æ—Å–Ω–æ–≤–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:
1. –†–æ–∑—É–º—ñ—Ç–∏ –∑–∞–ø–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—Ä–∏—Ä–æ–¥–Ω–æ—é –º–æ–≤–æ—é
2. –ó–Ω–∞—Ö–æ–¥–∏—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ API endpoints
3. –§–æ—Ä–º—É–≤–∞—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ API –∑–∞–ø–∏—Ç–∏
4. –ê–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –ø–æ–º–∏–ª–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
5. –ó–∞–ø–∏—Ç—É–≤–∞—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ
6. –ü–æ–≤—Ç–æ—Ä–Ω–æ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –∑–∞–ø–∏—Ç–∏ –∑ –Ω–æ–≤–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é

–ó–∞–≤–∂–¥–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é —Ç–∞ –±—É–¥—å –∫–æ—Ä–∏—Å–Ω–∏–º —Ç–∞ –¥—Ä—É–∂–µ–ª—é–±–Ω–∏–º.
–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –µ–º–æ–¥–∑—ñ –¥–ª—è –∫—Ä–∞—â–æ–≥–æ —Å–ø—Ä–∏–π–Ω—è—Ç—Ç—è —Ç–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—É–π –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∑—Ä–æ–∑—É–º—ñ–ª–æ.
"""

    @staticmethod
    def get_intent_analysis_prompt(user_query: str, context: str = "") -> str:
        """–ü—Ä–æ–º–ø—Ç –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É –Ω–∞–º—ñ—Ä—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞."""
        return f"""
–¢–∏ - –µ–∫—Å–ø–µ—Ä—Ç –∑ API. –ê–Ω–∞–ª—ñ–∑—É–π –∑–∞–ø–∏—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –≤–∏–∑–Ω–∞—á–∞–π:
1. –¢–∏–ø –æ–ø–µ—Ä–∞—Ü—ñ—ó (GET, POST, PUT, DELETE)
2. –†–µ—Å—É—Ä—Å –∞–±–æ endpoint
3. –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ç–∞ –¥–∞–Ω—ñ
4. –ú–µ—Ç–∞ –∞–±–æ —Ü—ñ–ª—å –∑–∞–ø–∏—Ç—É

–ö–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö –≤–∑–∞—î–º–æ–¥—ñ–π:
{context}

–ó–∞–ø–∏—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {user_query}

–í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —É —Ñ–æ—Ä–º–∞—Ç—ñ JSON:
{{
    "operation": "GET|POST|PUT|DELETE",
    "resource": "–Ω–∞–∑–≤–∞ —Ä–µ—Å—É—Ä—Å—É",
    "parameters": {{"param1": "value1"}},
    "data": {{"field1": "value1"}},
    "intent": "–æ–ø–∏—Å –º–µ—Ç–∏ –∑–∞–ø–∏—Ç—É"
}}
"""

    @staticmethod
    def get_error_analysis_prompt(
        error_message: str, original_query: str, api_request: Dict[str, Any]
    ) -> str:
        """–ü—Ä–æ–º–ø—Ç –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É –ø–æ–º–∏–ª–æ–∫ —Å–µ—Ä–≤–µ—Ä–∞."""
        return f"""
–ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π –ø–æ–º–∏–ª–∫—É —Å–µ—Ä–≤–µ—Ä–∞ —Ç–∞ –∑–≥–µ–Ω–µ—Ä—É–π –∫–æ—Ä–∏—Å–Ω–∏–π –∑–∞–ø–∏—Ç –Ω–∞ –¥–æ–¥–∞—Ç–∫–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é.

–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {error_message}
–û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –∑–∞–ø–∏—Ç: {original_query}
API –∑–∞–ø–∏—Ç: {json.dumps(api_request, ensure_ascii=False, indent=2)}

–¢–∏–ø–∏ –ø–æ–º–∏–ª–æ–∫:
- –í–∞–ª—ñ–¥–∞—Ü—ñ—è: –ø–æ—Ç—Ä—ñ–±–Ω—ñ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ–ª—è
- –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è: –ø—Ä–æ–±–ª–µ–º–∏ –∑ —Ç–æ–∫–µ–Ω–æ–º
- –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π ID –∞–±–æ —à–ª—è—Ö
- –ö–æ–Ω—Ñ–ª—ñ–∫—Ç: –∑–∞–ø–∏—Å –≤–∂–µ —ñ—Å–Ω—É—î

–°—Ç–≤–æ—Ä–∏ –∑—Ä–æ–∑—É–º—ñ–ª–∏–π –∑–∞–ø–∏—Ç —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é, —è–∫–∏–π –¥–æ–ø–æ–º–æ–∂–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –Ω–∞–¥–∞—Ç–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é.

–í—ñ–¥–ø–æ–≤—ñ–¥—å –º–∞—î –±—É—Ç–∏ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ—é —Ç–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—é, –∑ –µ–º–æ–¥–∑—ñ –¥–ª—è –∫—Ä–∞—â–æ–≥–æ —Å–ø—Ä–∏–π–Ω—è—Ç—Ç—è.
"""

    @staticmethod
    def get_response_formatting_prompt(
        api_request: Dict[str, Any],
        server_response: Optional[Dict[str, Any]] = None,
        status: str = "success",
    ) -> str:
        """–ü—Ä–æ–º–ø—Ç –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É."""
        return f"""
–í—ñ–¥—Ñ–æ—Ä–º–∞—Ç—É–π –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –ø—Ä–æ API –∑–∞–ø–∏—Ç.

API –∑–∞–ø–∏—Ç: {json.dumps(api_request, ensure_ascii=False, indent=2)}
–í—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞: {json.dumps(server_response, ensure_ascii=False, indent=2) if server_response else "–ù–µ–º–∞—î"}
–°—Ç–∞—Ç—É—Å: {status}

–ü—Ä–∞–≤–∏–ª–∞ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è:
- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –µ–º–æ–¥–∑—ñ –¥–ª—è –∫—Ä–∞—â–æ—ó —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—ñ
- –ü–æ–∫–∞–∂–∏ URL, –º–µ—Ç–æ–¥, –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
- –Ø–∫—â–æ —î –ø–æ–º–∏–ª–∫–∞ - –ø–æ—è—Å–Ω–∏ —ó—ó –∑—Ä–æ–∑—É–º—ñ–ª–æ
- –Ø–∫—â–æ —É—Å–ø—ñ—Ö - –ø–æ–∫–∞–∂–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
- –ë—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω–∏–º —Ç–∞ –∫–æ—Ä–∏—Å–Ω–∏–º
- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç

–í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é.
"""

    @staticmethod
    def get_api_response_processing_prompt(
        user_query: str, api_response: Dict[str, Any], available_fields: List[str] = None
    ) -> str:
        """–ü—Ä–æ–º–ø—Ç –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ API —Å–µ—Ä–≤–µ—Ä–∞ –≤ –¥—Ä—É–∂–µ–ª—é–±–Ω–∏–π —Ç–µ–∫—Å—Ç."""

        # –ê–Ω–∞–ª—ñ–∑—É—î–º–æ –∑–∞–ø–∏—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ—Ç—Ä—ñ–±–Ω–∏—Ö –ø–æ–ª—ñ–≤
        query_lower = user_query.lower()

        # –í–∏–∑–Ω–∞—á–∞—î–º–æ —â–æ —Ö–æ—á–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
        wants_names = any(word in query_lower for word in ["–Ω–∞–∑–≤", "—ñ–º'—è", "title", "name"])
        wants_ids = any(word in query_lower for word in ["id", "–∞–π–¥—ñ", "–Ω–æ–º–µ—Ä"])
        wants_categories = any(word in query_lower for word in ["–∫–∞—Ç–µ–≥–æ—Ä—ñ", "category"])
        wants_prices = any(word in query_lower for word in ["—Ü—ñ–Ω", "price", "–≤–∞—Ä—Ç—ñ—Å—Ç—å"])
        wants_only = any(word in query_lower for word in ["—Ç—ñ–ª—å–∫–∏", "–ª–∏—à–µ", "only"])
        wants_list = any(word in query_lower for word in ["—Å–ø–∏—Å–æ–∫", "list", "–≤—Å—ñ", "all"])

        # –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ç–∏–ø –æ–±—Ä–æ–±–∫–∏
        if wants_only and (wants_names or wants_ids or wants_categories):
            processing_type = "filtered"
        elif wants_list:
            processing_type = "list"
        else:
            processing_type = "full"

        return f"""
–¢–∏ - –µ–∫—Å–ø–µ—Ä—Ç –∑ –æ–±—Ä–æ–±–∫–∏ –¥–∞–Ω–∏—Ö. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø–µ—Ä–µ—Ç–≤–æ—Ä–∏—Ç–∏ JSON –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ API —Å–µ—Ä–≤–µ—Ä–∞ –≤ –¥—Ä—É–∂–µ–ª—é–±–Ω–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.

–ó–ê–ü–ò–¢ –ö–û–†–ò–°–¢–£–í–ê–ß–ê: {user_query}
–¢–ò–ü –û–ë–†–û–ë–ö–ò: {processing_type}

JSON –í–Ü–î–ü–û–í–Ü–î–¨ API:
{json.dumps(api_response, ensure_ascii=False, indent=2)}

–î–û–°–¢–£–ü–ù–Ü –ü–û–õ–Ø: {available_fields if available_fields else "–í—Å—ñ –ø–æ–ª—è –∑ JSON"}

–ü–†–ê–í–ò–õ–ê –û–ë–†–û–ë–ö–ò:

1. **–ê–Ω–∞–ª—ñ–∑ –∑–∞–ø–∏—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:**
   - –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–æ—Å–∏—Ç—å "—Ç—ñ–ª—å–∫–∏ –Ω–∞–∑–≤–∏" - –ø–æ–∫–∞–∂–∏ —Ç—ñ–ª—å–∫–∏ –Ω–∞–∑–≤–∏
   - –Ø–∫—â–æ –ø—Ä–æ—Å–∏—Ç—å "ID —Ç–∞ –Ω–∞–∑–≤—É" - –ø–æ–∫–∞–∂–∏ ID —Ç–∞ –Ω–∞–∑–≤—É
   - –Ø–∫—â–æ –ø—Ä–æ—Å–∏—Ç—å "–∫–∞—Ç–µ–≥–æ—Ä—ñ—ó" - –ø–æ–∫–∞–∂–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
   - –Ø–∫—â–æ –ø—Ä–æ—Å–∏—Ç—å "—Ü—ñ–Ω–∏" - –ø–æ–∫–∞–∂–∏ —Ü—ñ–Ω–∏

2. **–§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:**
   - –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –µ–º–æ–¥–∑—ñ –¥–ª—è –∫—Ä–∞—â–æ–≥–æ —Å–ø—Ä–∏–π–Ω—è—Ç—Ç—è
   - –°—Ç—Ä—É–∫—Ç—É—Ä—É–π —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –∑—Ä–æ–∑—É–º—ñ–ª–æ
   - –Ø–∫—â–æ —Å–ø–∏—Å–æ–∫ - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –º–∞—Ä–∫–µ—Ä–∏
   - –Ø–∫—â–æ —Ç–∞–±–ª–∏—Ü—è - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç

3. **–ê–¥–∞–ø—Ç–∞—Ü—ñ—è –¥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É:**
   - –Ø–∫—â–æ –æ–¥–∏–Ω –µ–ª–µ–º–µ–Ω—Ç - –ø–æ–∫–∞–∂–∏ –¥–µ—Ç–∞–ª—å–Ω–æ
   - –Ø–∫—â–æ –±–∞–≥–∞—Ç–æ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ - –ø–æ–∫–∞–∂–∏ —Å–ø–∏—Å–æ–∫
   - –Ø–∫—â–æ –ø–æ—Ä–æ–∂–Ω—ñ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç - –ø–æ—è—Å–Ω–∏ —Ü–µ

4. **–°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –≤–∏–ø–∞–¥–∫–∏:**
   - –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–æ—Å–∏—Ç—å "—Ç—ñ–ª—å–∫–∏ –Ω–∞–∑–≤–∏" - –ø–æ–∫–∞–∂–∏ —Ç—ñ–ª—å–∫–∏ –Ω–∞–∑–≤–∏ –±–µ–∑ –¥–æ–¥–∞—Ç–∫–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
   - –Ø–∫—â–æ –ø—Ä–æ—Å–∏—Ç—å "ID —Ç–∞ –Ω–∞–∑–≤—É" - —Ñ–æ—Ä–º–∞—Ç: "ID: –Ω–∞–∑–≤–∞"
   - –Ø–∫—â–æ –ø—Ä–æ—Å–∏—Ç—å "–∫–∞—Ç–µ–≥–æ—Ä—ñ—ó" - —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
   - –Ø–∫—â–æ –ø—Ä–æ—Å–∏—Ç—å "—Ü—ñ–Ω–∏" - –ø–æ–∫–∞–∂–∏ —Ü—ñ–Ω–∏ –∑ –≤–∞–ª—é—Ç–æ—é

–ü–†–ò–ö–õ–ê–î–ò –í–Ü–î–ü–û–í–Ü–î–ï–ô:

–î–ª—è –∑–∞–ø–∏—Ç—É "–ü–æ–∫–∞–∂–∏ —Ç—ñ–ª—å–∫–∏ –Ω–∞–∑–≤–∏ —Ç–æ–≤–∞—Ä—ñ–≤":
üìã –°–ø–∏—Å–æ–∫ –Ω–∞–∑–≤ —Ç–æ–≤–∞—Ä—ñ–≤:
‚Ä¢ –°–∏–Ω—è —Å—É–∫–Ω—è
‚Ä¢ –ß–µ—Ä–≤–æ–Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–∞
‚Ä¢ –ó–µ–ª–µ–Ω–∞ –∫—É—Ä—Ç–∫–∞

–î–ª—è –∑–∞–ø–∏—Ç—É "–ü–æ–∫–∞–∂–∏ ID —Ç–∞ –Ω–∞–∑–≤—É":
üÜî –¢–æ–≤–∞—Ä–∏:
‚Ä¢ 1: –°–∏–Ω—è —Å—É–∫–Ω—è
‚Ä¢ 2: –ß–µ—Ä–≤–æ–Ω–∞ —Ñ—É—Ç–±–æ–ª–∫–∞
‚Ä¢ 3: –ó–µ–ª–µ–Ω–∞ –∫—É—Ä—Ç–∫–∞

–î–ª—è –∑–∞–ø–∏—Ç—É "–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó":
üìÇ –î–æ—Å—Ç—É–ø–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó:
‚Ä¢ –û–¥—è–≥
‚Ä¢ –í–∑—É—Ç—Ç—è
‚Ä¢ –ê–∫—Å–µ—Å—É–∞—Ä–∏

–í–Ü–î–ü–û–í–Ü–î–¨:
–°—Ç–≤–æ—Ä–∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é, —è–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞–ø–∏—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –ø–æ–∫–∞–∑—É—î —Ç—ñ–ª—å–∫–∏ –ø–æ—Ç—Ä—ñ–±–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é.
"""

    @staticmethod
    def get_object_creation_prompt(
        user_query: str,
        endpoint_info: Dict[str, Any],
        conversation_history: List[Dict[str, Any]] = None,
    ) -> str:
        """–ü—Ä–æ–º–ø—Ç –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤ –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è–º –ø–æ–ª—ñ–≤."""

        # –ê–Ω–∞–ª—ñ–∑—É—î–º–æ –∑–∞–ø–∏—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        query_lower = user_query.lower()

        # –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ç–∏–ø —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è
        is_creating_category = any(word in query_lower for word in ["–∫–∞—Ç–µ–≥–æ—Ä—ñ", "category"])
        is_creating_product = any(word in query_lower for word in ["—Ç–æ–≤–∞—Ä", "product", "–ø—Ä–æ–¥—É–∫—Ç"])
        is_creating_user = any(word in query_lower for word in ["–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á", "user"])

        # –í–∏—Ç—è–≥—É—î–º–æ –Ω–∞–∑–≤—É –∑ –∑–∞–ø–∏—Ç—É
        import re

        name_match = re.search(r'["""]([^"""]+)["""]', user_query)
        extracted_name = name_match.group(1) if name_match else None

        # –ê–Ω–∞–ª—ñ–∑—É—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é —Ä–æ–∑–º–æ–≤–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
        context_info = ""
        if conversation_history:
            recent_messages = conversation_history[-3:]  # –û—Å—Ç–∞–Ω–Ω—ñ 3 –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            context_info = "\n".join(
                [f"–ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –∑–∞–ø–∏—Ç: {msg.get('user_message', '')}" for msg in recent_messages]
            )

        return f"""
–¢–∏ - –µ–∫—Å–ø–µ—Ä—Ç –∑ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—ñ–≤ —á–µ—Ä–µ–∑ API. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É —Å—Ç–≤–æ—Ä–∏—Ç–∏ –æ–±'—î–∫—Ç –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è–º –ø–æ–ª—ñ–≤.

–ó–ê–ü–ò–¢ –ö–û–†–ò–°–¢–£–í–ê–ß–ê: {user_query}
–¢–ò–ü –°–¢–í–û–†–ï–ù–ù–Ø: {"–∫–∞—Ç–µ–≥–æ—Ä—ñ—è" if is_creating_category else "—Ç–æ–≤–∞—Ä" if is_creating_product else "–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á" if is_creating_user else "–æ–±'—î–∫—Ç"}

–Ü–°–¢–û–†–Ü–Ø –†–û–ó–ú–û–í–ò:
{context_info if context_info else "–ù–µ–º–∞—î –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É"}

ENDPOINT –Ü–ù–§–û–†–ú–ê–¶–Ü–Ø:
{json.dumps(endpoint_info, ensure_ascii=False, indent=2)}

–ü–†–ê–í–ò–õ–ê –°–¢–í–û–†–ï–ù–ù–Ø:

1. **–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –ø–æ–ª—ñ–≤:**
   - –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∫–∞–∑–∞–≤ —Ç—ñ–ª—å–∫–∏ –Ω–∞–∑–≤—É - —Å–ø—Ä–æ–±—É–π –∑–∞–ø–æ–≤–Ω–∏—Ç–∏ —ñ–Ω—à—ñ –ø–æ–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
   - –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∑ —ñ—Å—Ç–æ—Ä—ñ—ó —Ä–æ–∑–º–æ–≤–∏ –¥–ª—è –∫—Ä–∞—â–æ–≥–æ —Ä–æ–∑—É–º—ñ–Ω–Ω—è
   - –ì–µ–Ω–µ—Ä—É–π —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –æ–±–æ–≤'—è–∑–∫–æ–≤–∏—Ö –ø–æ–ª—ñ–≤

2. **–î–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π:**
   - –ù–∞–∑–≤–∞: –∑ –∑–∞–ø–∏—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
   - –û–ø–∏—Å: –∑–≥–µ–Ω–µ—Ä—É–π –æ–ø–∏—Å –Ω–∞ –æ—Å–Ω–æ–≤—ñ –Ω–∞–∑–≤–∏
   - Slug: —Å—Ç–≤–æ—Ä—ñ—Ç—å URL-friendly –≤–µ—Ä—Å—ñ—é –Ω–∞–∑–≤–∏
   - –°—Ç–∞—Ç—É—Å: "active" –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º

3. **–î–ª—è —Ç–æ–≤–∞—Ä—ñ–≤:**
   - –ù–∞–∑–≤–∞: –∑ –∑–∞–ø–∏—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
   - –û–ø–∏—Å: –∑–≥–µ–Ω–µ—Ä—É–π –¥–µ—Ç–∞–ª—å–Ω–∏–π –æ–ø–∏—Å
   - –¶—ñ–Ω–∞: –∑–∞–ø—Ä–æ–ø–æ–Ω—É–π —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω—É —Ü—ñ–Ω—É
   - –ö–∞—Ç–µ–≥–æ—Ä—ñ—è: –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π –∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –∞–±–æ –∑–∞–ø—Ä–æ–ø–æ–Ω—É–π
   - –†–æ–∑–º—ñ—Ä/–ö–æ–ª—ñ—Ä: –∑–≥–µ–Ω–µ—Ä—É–π –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ç–∏–ø—É —Ç–æ–≤–∞—Ä—É
   - –°—Ç–∞—Ç—É—Å: "active" –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º

4. **–î–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:**
   - –Ü–º'—è: –∑ –∑–∞–ø–∏—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
   - Email: –∑–≥–µ–Ω–µ—Ä—É–π –Ω–∞ –æ—Å–Ω–æ–≤—ñ —ñ–º–µ–Ω—ñ
   - –ü–∞—Ä–æ–ª—å: –∑–≥–µ–Ω–µ—Ä—É–π –±–µ–∑–ø–µ—á–Ω–∏–π –ø–∞—Ä–æ–ª—å
   - –†–æ–ª—å: "user" –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º

–ü–†–ò–ö–õ–ê–î–ò –ê–í–¢–û–ú–ê–¢–ò–ß–ù–û–ì–û –ó–ê–ü–û–í–ù–ï–ù–ù–Ø:

–ó–∞–ø–∏—Ç: "–°—Ç–≤–æ—Ä–∏ —Ç–æ–≤–∞—Ä –∑ –Ω–∞–∑–≤–æ—é –¢–µ–ª–µ—Ñ–æ–Ω"
–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è:
{{
    "name": "–¢–µ–ª–µ—Ñ–æ–Ω",
    "description": "–°—É—á–∞—Å–Ω–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω –∑ –≤–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω–∏–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏",
    "price": 15000.00,
    "category": "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞",
    "brand": "Samsung",
    "model": "Galaxy S23",
    "color": "–ß–æ—Ä–Ω–∏–π",
    "in_stock": true,
    "warranty": "24 –º—ñ—Å—è—Ü—ñ"
}}

–ó–∞–ø–∏—Ç: "–°—Ç–≤–æ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞"
–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è:
{{
    "name": "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞",
    "description": "–ö–∞—Ç–µ–≥–æ—Ä—ñ—è –¥–ª—è –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤ —Ç–∞ –≥–∞–¥–∂–µ—Ç—ñ–≤",
    "slug": "electronics",
    "status": "active",
    "icon": "üì±"
}}

–û–ë–†–û–ë–ö–ê –ü–û–ú–ò–õ–û–ö:

–Ø–∫—â–æ –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ:

1. **–ü–æ–º–∏–ª–∫–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó:**
   - –ü–æ–∫–∞–∂–∏ —è–∫—ñ –ø–æ–ª—è –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏
   - –ó–∞–ø—Ä–æ–ø–æ–Ω—É–π –ø—Ä–∞–≤–∏–ª—å–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
   - –ù–µ –ø—Ä–æ—Å–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–≤–æ–¥–∏—Ç–∏ –≤—Å–µ –∑–∞–Ω–æ–≤–æ

2. **–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:**
   - –ü–æ—è—Å–Ω–∏ –ø—Ä–æ–±–ª–µ–º—É –∑ —Ç–æ–∫–µ–Ω–æ–º
   - –ó–∞–ø—Ä–æ–ø–æ–Ω—É–π –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è

3. **–ü–æ–º–∏–ª–∫–∞ –º–µ—Ä–µ–∂—ñ:**
   - –ü–æ—è—Å–Ω–∏ –ø—Ä–æ–±–ª–µ–º—É –∑'—î–¥–Ω–∞–Ω–Ω—è
   - –ó–∞–ø—Ä–æ–ø–æ–Ω—É–π –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ —Å–ø—Ä–æ–±—É

4. **–Ü–Ω—à—ñ –ø–æ–º–∏–ª–∫–∏:**
   - –ü–æ–∫–∞–∂–∏ –∑—Ä–æ–∑—É–º—ñ–ª–µ –ø–æ—è—Å–Ω–µ–Ω–Ω—è
   - –ó–∞–ø—Ä–æ–ø–æ–Ω—É–π —Ä—ñ—à–µ–Ω–Ω—è

–ü–†–ò–ö–õ–ê–î–ò –û–ë–†–û–ë–ö–ò –ü–û–ú–ò–õ–û–ö:

–ü–æ–º–∏–ª–∫–∞: "Field 'price' is required"
–í—ñ–¥–ø–æ–≤—ñ–¥—å:
‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É: –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∫–∞–∑–∞—Ç–∏ —Ü—ñ–Ω—É
üí° –ó–∞–ø—Ä–æ–ø–æ–Ω–æ–≤–∞–Ω–∞ —Ü—ñ–Ω–∞: 15000.00 UAH
üîÑ –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∑ —Ü—ñ—î—é —Ü—ñ–Ω–æ—é?

–ü–æ–º–∏–ª–∫–∞: "Category 'Electronics' not found"
–í—ñ–¥–ø–æ–≤—ñ–¥—å:
‚ùå –ü–æ–º–∏–ª–∫–∞: –∫–∞—Ç–µ–≥–æ—Ä—ñ—è "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞" –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞
üí° –î–æ—Å—Ç—É–ø–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó: –û–¥—è–≥, –í–∑—É—Ç—Ç—è, –ê–∫—Å–µ—Å—É–∞—Ä–∏
üîÑ –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–æ–≤–∞—Ä –≤ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó "–û–¥—è–≥"?

–í–Ü–î–ü–û–í–Ü–î–¨:
–°—Ç–≤–æ—Ä–∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é. –Ø–∫—â–æ –≤—Å–µ –¥–æ–±—Ä–µ - –ø–æ–∫–∞–∂–∏ —É—Å–ø—ñ—à–Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è. –Ø–∫—â–æ —î –ø–æ–º–∏–ª–∫–∞ - –ø–æ—è—Å–Ω–∏ —ó—ó —Ç–∞ –∑–∞–ø—Ä–æ–ø–æ–Ω—É–π —Ä—ñ—à–µ–Ω–Ω—è –±–µ–∑ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–≤–µ–¥–µ–Ω–Ω—è –≤—Å—ñ—Ö –¥–∞–Ω–∏—Ö.
"""

    @staticmethod
    def get_followup_generation_prompt(
        api_request: Dict[str, Any], intent: Dict[str, Any], error_message: str
    ) -> str:
        """–ü—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–∞–ø–∏—Ç—É –Ω–∞ –¥–æ–¥–∞—Ç–∫–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é."""
        return f"""
–ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π –ø–æ–º–∏–ª–∫—É —Ç–∞ –∑–≥–µ–Ω–µ—Ä—É–π –∑–∞–ø–∏—Ç –Ω–∞ –¥–æ–¥–∞—Ç–∫–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é.

API –∑–∞–ø–∏—Ç: {json.dumps(api_request, ensure_ascii=False, indent=2)}
–ù–∞–º—ñ—Ä: {json.dumps(intent, ensure_ascii=False, indent=2)}
–ü–æ–º–∏–ª–∫–∞: {error_message}

–°—Ç–≤–æ—Ä–∏ –∑—Ä–æ–∑—É–º—ñ–ª–∏–π –∑–∞–ø–∏—Ç —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é, —è–∫–∏–π:
1. –ü–æ—è—Å–Ω–∏—Ç—å —â–æ —Å–∞–º–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ
2. –ù–∞–¥–∞—Å—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ –ø—Ä–∏–∫–ª–∞–¥–∏
3. –ë—É–¥–µ –¥—Ä—É–∂–µ–ª—é–±–Ω–∏–º —Ç–∞ –∫–æ—Ä–∏—Å–Ω–∏–º
4. –í–∏–∫–æ—Ä–∏—Å—Ç–∞—î –µ–º–æ–¥–∑—ñ –¥–ª—è –∫—Ä–∞—â–æ–≥–æ —Å–ø—Ä–∏–π–Ω—è—Ç—Ç—è

–§–æ—Ä–º–∞—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:
‚ùå –ü–æ–º–∏–ª–∫–∞: [–æ–ø–∏—Å –ø–æ–º–∏–ª–∫–∏]

üìã –î–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∫–∞–∑–∞—Ç–∏:
‚Ä¢ [—Å–ø–∏—Å–æ–∫ –ø–æ—Ç—Ä—ñ–±–Ω–∏—Ö –ø–æ–ª—ñ–≤]

üí° –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥–∞–π—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é. –ù–∞–ø—Ä–∏–∫–ª–∞–¥:
‚Ä¢ [–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ –ø—Ä–∏–∫–ª–∞–¥–∏]
"""

    @staticmethod
    def get_help_prompt(user_query: str, available_resources: List[str]) -> str:
        """–ü—Ä–æ–º–ø—Ç –¥–ª—è –¥–æ–ø–æ–º–æ–≥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É."""
        return f"""
–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑—Ä–æ–∑—É–º—ñ–≤ —è–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ API. –ù–∞–¥–∞–π –∫–æ—Ä–∏—Å–Ω—É –¥–æ–ø–æ–º–æ–≥—É.

–ü–æ—Ç–æ—á–Ω–∏–π –∑–∞–ø–∏—Ç: {user_query}
–î–æ—Å—Ç—É–ø–Ω—ñ —Ä–µ—Å—É—Ä—Å–∏: {', '.join(available_resources)}

–°—Ç–≤–æ—Ä–∏ –∑—Ä–æ–∑—É–º—ñ–ª–∏–π –ø–æ—Å—ñ–±–Ω–∏–∫ –∑ –ø—Ä–∏–∫–ª–∞–¥–∞–º–∏:
- –Ø–∫ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –∑–∞–ø–∏—Å–∏
- –Ø–∫ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –¥–∞–Ω—ñ
- –Ø–∫ –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏ –∑–∞–ø–∏—Å–∏
- –Ø–∫ –≤–∏–¥–∞–ª—è—Ç–∏ –∑–∞–ø–∏—Å–∏

–ù–∞–¥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ –ø—Ä–∏–∫–ª–∞–¥–∏ –∑–∞–ø–∏—Ç—ñ–≤ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é –∑ –µ–º–æ–¥–∑—ñ –¥–ª—è –∫—Ä–∞—â–æ–≥–æ —Å–ø—Ä–∏–π–Ω—è—Ç—Ç—è.
"""

    @staticmethod
    def get_endpoint_search_prompt(
        user_query: str, intent: Dict[str, Any], endpoints: List[Dict[str, Any]]
    ) -> str:
        """–ü—Ä–æ–º–ø—Ç –¥–ª—è –ø–æ—à—É–∫—É endpoints."""
        return f"""
–ó–Ω–∞–π–¥–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ API endpoints –¥–ª—è –∑–∞–ø–∏—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.

–ó–∞–ø–∏—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {user_query}
–ù–∞–º—ñ—Ä: {json.dumps(intent, ensure_ascii=False, indent=2)}

–î–æ—Å—Ç—É–ø–Ω—ñ endpoints:
{json.dumps(endpoints, ensure_ascii=False, indent=2)}

–ü–æ–≤–µ—Ä–Ω–∏ —Å–ø–∏—Å–æ–∫ –Ω–∞–π–±—ñ–ª—å—à –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏—Ö endpoints –∑ —ó—Ö –º–µ—Ç–∞–¥–∞–Ω–∏–º–∏.
"""

    @staticmethod
    def get_request_formation_prompt(
        user_query: str, intent: Dict[str, Any], endpoint_info: Dict[str, Any]
    ) -> str:
        """–ü—Ä–æ–º–ø—Ç –¥–ª—è —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è API –∑–∞–ø–∏—Ç—É."""
        return f"""
–°—Ñ–æ—Ä–º—É–π –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π API –∑–∞–ø–∏—Ç –Ω–∞ –æ—Å–Ω–æ–≤—ñ –Ω–∞–º—ñ—Ä—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.

–ó–∞–ø–∏—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {user_query}
–ù–∞–º—ñ—Ä: {json.dumps(intent, ensure_ascii=False, indent=2)}
Endpoint —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è: {json.dumps(endpoint_info, ensure_ascii=False, indent=2)}

–ü—Ä–∞–≤–∏–ª–∞ —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è:
- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π HTTP –º–µ—Ç–æ–¥
- –î–æ–¥–∞–π –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
- –í–∞–ª—ñ–¥—É–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–∏—Ö
- –í—Ä–∞—Ö—É–π path variables
- –î–æ–¥–∞–π query parameters —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ

–ü–æ–≤–µ—Ä–Ω–∏ –≥–æ—Ç–æ–≤–∏–π API –∑–∞–ø–∏—Ç —É —Ñ–æ—Ä–º–∞—Ç—ñ JSON.
"""

    @staticmethod
    def get_optimization_prompt(current_request: Dict[str, Any], goal: str) -> str:
        """–ü—Ä–æ–º–ø—Ç –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó –∑–∞–ø–∏—Ç—ñ–≤."""
        return f"""
–û–ø—Ç–∏–º—ñ–∑—É–π API –∑–∞–ø–∏—Ç –¥–ª—è –∫—Ä–∞—â–æ—ó –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ.

–ü–æ—Ç–æ—á–Ω–∏–π –∑–∞–ø–∏—Ç: {json.dumps(current_request, ensure_ascii=False, indent=2)}
–ú–µ—Ç–∞: {goal}

–ú–æ–∂–ª–∏–≤—ñ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó:
- –ó–º–µ–Ω—à–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–ª—ñ–≤
- –í–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –±—ñ–ª—å—à –µ—Ñ–µ–∫—Ç–∏–≤–Ω–∏–π endpoint
- –î–æ–¥–∞—Ç–∏ –∫–µ—à—É–≤–∞–Ω–Ω—è
- –û–ø—Ç–∏–º—ñ–∑—É–≤–∞—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏

–ü–æ–≤–µ—Ä–Ω–∏ –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∏–π –∑–∞–ø–∏—Ç –∑ –ø–æ—è—Å–Ω–µ–Ω–Ω—è–º –∑–º—ñ–Ω.
"""

    @staticmethod
    def get_debugging_prompt(
        issue_description: str, api_request: Dict[str, Any], error: str
    ) -> str:
        """–ü—Ä–æ–º–ø—Ç –¥–ª—è –Ω–∞–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º."""
        return f"""
–î–æ–ø–æ–º–æ–∂–∏ –Ω–∞–ª–∞–≥–æ–¥–∏—Ç–∏ –ø—Ä–æ–±–ª–µ–º—É –∑ API –∑–∞–ø–∏—Ç–æ–º.

–ü—Ä–æ–±–ª–µ–º–∞: {issue_description}
API –∑–∞–ø–∏—Ç: {json.dumps(api_request, ensure_ascii=False, indent=2)}
–ü–æ–º–∏–ª–∫–∞: {error}

–ú–æ–∂–ª–∏–≤—ñ –ø—Ä–∏—á–∏–Ω–∏:
- –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–∏—Ö
- –í—ñ–¥—Å—É—Ç–Ω—ñ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è
- –ü—Ä–æ–±–ª–µ–º–∏ –∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—î—é
- –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π endpoint

–ù–∞–¥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é.
"""

    @staticmethod
    def get_ux_improvement_prompt(original_response: str, context: str) -> str:
        """–ü—Ä–æ–º–ø—Ç –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è UX."""
        return f"""
–ü–æ–∫—Ä–∞—â—ñ—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥—å –¥–ª—è –∫—Ä–∞—â–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–æ–≥–æ –¥–æ—Å–≤—ñ–¥—É.

–û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: {original_response}
–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context}

–ü—Ä–∞–≤–∏–ª–∞ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è:
- –î–æ–¥–∞–π –∫–æ—Ä–∏—Å–Ω—ñ –ø—ñ–¥–∫–∞–∑–∫–∏
- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –µ–º–æ–¥–∑—ñ –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä—É–≤–∞–Ω–Ω—è
- –ó—Ä–æ–±—ñ—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥—å –±—ñ–ª—å—à –¥—Ä—É–∂–µ–ª—é–±–Ω–æ—é
- –î–æ–¥–∞–π –ø—Ä–∏–∫–ª–∞–¥–∏ —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
- –ó–±–µ—Ä–µ–≥—Ç–∏ –≤—Å—é –≤–∞–∂–ª–∏–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é

–ü–æ–≤–µ—Ä–Ω–∏ –ø–æ–∫—Ä–∞—â–µ–Ω—É –≤–µ—Ä—Å—ñ—é —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é.
"""


# –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏ –¥–ª—è –µ–º–æ–¥–∑—ñ
class EmojiConstants:
    """–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏ –¥–ª—è –µ–º–æ–¥–∑—ñ –≤ –≤—ñ–¥–ø–æ–≤—ñ–¥—è—Ö."""

    SUCCESS = "‚úÖ"
    ERROR = "‚ùå"
    WARNING = "‚ö†Ô∏è"
    INFO = "üí°"
    SEARCH = "üîç"
    LOADING = "üîÑ"
    HELP = "üÜò"
    SETTINGS = "‚öôÔ∏è"
    LINK = "üîó"
    METHOD = "üì§"
    DATA = "üì¶"
    STATUS = "üìä"
    TIME = "‚è∞"
    USER = "üë§"
    BOT = "ü§ñ"
    API = "üåê"
    DATABASE = "üóÑÔ∏è"
    SECURITY = "üîê"
    SPEED = "üöÄ"
    MAGIC = "‚ú®"


# –ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
if __name__ == "__main__":
    # –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø—Ä–æ–º–ø—Ç—ñ–≤
    user_query = "–°—Ç–≤–æ—Ä–∏ –Ω–æ–≤—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –∑ –Ω–∞–∑–≤–æ—é '–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞'"

    # –ê–Ω–∞–ª—ñ–∑ –Ω–∞–º—ñ—Ä—É
    intent_prompt = PromptTemplates.get_intent_analysis_prompt(user_query)
    print("üìù –ü—Ä–æ–º–ø—Ç –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É –Ω–∞–º—ñ—Ä—É:")
    print(intent_prompt)
    print()

    # –ü—Ä–∏–∫–ª–∞–¥ –ø–æ–º–∏–ª–∫–∏
    error_message = "Validation error: description is required"
    api_request = {
        "url": "http://localhost:3030/api/categories",
        "method": "POST",
        "data": {"name": "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞"},
    }

    error_prompt = PromptTemplates.get_error_analysis_prompt(error_message, user_query, api_request)
    print("‚ö†Ô∏è –ü—Ä–æ–º–ø—Ç –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É –ø–æ–º–∏–ª–∫–∏:")
    print(error_prompt)
    print()

    print("üéØ –ü—Ä–æ–º–ø—Ç-—à–∞–±–ª–æ–Ω–∏ –≥–æ—Ç–æ–≤—ñ –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ InteractiveSwaggerAgent!")
