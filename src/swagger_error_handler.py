"""
–ü—Ä–æ–º–ø—Ç–∏ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫ –∫–æ–ª–∏ Swagger —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—è –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ä–µ–∞–ª—å–Ω–æ–º—É API
"""

import json
from typing import Dict, Any, List, Optional

class SwaggerErrorHandler:
    """–ö–ª–∞—Å –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫ –∫–æ–ª–∏ Swagger —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—è –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ä–µ–∞–ª—å–Ω–æ–º—É API."""
    
    @staticmethod
    def get_swagger_mismatch_detection_prompt(user_query: str, swagger_endpoints: List[Dict[str, Any]], 
                                            api_error: Dict[str, Any] = None) -> str:
        """–ü—Ä–æ–º–ø—Ç –¥–ª—è –≤–∏—è–≤–ª–µ–Ω–Ω—è –Ω–µ–≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç—ñ –º—ñ–∂ Swagger —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—î—é —Ç–∞ —Ä–µ–∞–ª—å–Ω–∏–º API."""
        return f"""
–¢–∏ - –µ–∫—Å–ø–µ—Ä—Ç –∑ API. –í–∏—è–≤–∏ —Ç–∞ –æ–±—Ä–æ–±–∏ –Ω–µ–≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å –º—ñ–∂ Swagger —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—î—é —Ç–∞ —Ä–µ–∞–ª—å–Ω–∏–º API.

–ó–ê–ü–ò–¢ –ö–û–†–ò–°–¢–£–í–ê–ß–ê: {user_query}

ENDPOINTS –ó SWAGGER –°–ü–ï–¶–ò–§–Ü–ö–ê–¶–Ü–á:
{json.dumps(swagger_endpoints, ensure_ascii=False, indent=2)}

–ü–û–ú–ò–õ–ö–ê API (—è–∫—â–æ —î):
{json.dumps(api_error, ensure_ascii=False, indent=2) if api_error else "–ù–µ–º–∞—î –ø–æ–º–∏–ª–∫–∏"}

–¢–ò–ü–û–í–Ü –ü–†–û–ë–õ–ï–ú–ò SWAGGER –°–ü–ï–¶–ò–§–Ü–ö–ê–¶–Ü–á:
1. Endpoint –º–∞—î –ø–∞—Ä–∞–º–µ—Ç—Ä {{id}} –∑–∞–º—ñ—Å—Ç—å –±—É—Ç–∏ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
2. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ –Ω–∞–∑–≤–∞ —Ä–µ—Å—É—Ä—Å—É (category –∑–∞–º—ñ—Å—Ç—å categories)
3. –í—ñ–¥—Å—É—Ç–Ω—ñ–π endpoint –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –∑–∞–ø–∏—Å—ñ–≤
4. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π HTTP –º–µ—Ç–æ–¥
5. Endpoint –æ—á—ñ–∫—É—î UUID –∞–ª–µ –æ—Ç—Ä–∏–º—É—î —Å—Ç—Ä–æ–∫—É

–ê–ù–ê–õ–Ü–ó –ó–ê–ü–ò–¢–£ –ö–û–†–ò–°–¢–£–í–ê–ß–ê:
- "–ü–æ–∫–∞–∂–∏ –≤—Å—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó" = GET –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
- "–ü–æ–∫–∞–∂–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –∑ ID" = GET –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º
- "–°—Ç–≤–æ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é" = POST
- "–û–Ω–æ–≤–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é" = PUT/PATCH
- "–í–∏–¥–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é" = DELETE

–ó–ê–í–î–ê–ù–ù–Ø:
1. –ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π —â–æ —Ö–æ—á–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
2. –ó–Ω–∞–π–¥–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π endpoint –≤ Swagger
3. –í–∏—è–≤–∏ –Ω–µ–≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å –º—ñ–∂ Swagger —Ç–∞ —Ä–µ–∞–ª—å–Ω–∏–º API
4. –ó–∞–ø—Ä–æ–ø–æ–Ω—É–π –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π endpoint
5. –ü–æ—è—Å–Ω–∏ –ø—Ä–æ–±–ª–µ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É

–ü–†–ê–í–ò–õ–ê –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø:
- –î–ª—è "–≤—Å—ñ –∑–∞–ø–∏—Å–∏" –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π GET /api/{{resource}} (–±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤)
- –î–ª—è "–∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π –∑–∞–ø–∏—Å" –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π GET /api/{{resource}}/{{id}}
- –î–ª—è "—Å—Ç–≤–æ—Ä–µ–Ω–Ω—è" –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π POST /api/{{resource}}
- –î–ª—è "–æ–Ω–æ–≤–ª–µ–Ω–Ω—è" –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π PUT /api/{{resource}}/{{id}}
- –î–ª—è "–≤–∏–¥–∞–ª–µ–Ω–Ω—è" –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π DELETE /api/{{resource}}/{{id}}

–í–Ü–î–ü–û–í–Ü–î–¨ –£ –§–û–†–ú–ê–¢–Ü:
{{
    "user_intent": "—â–æ —Ö–æ—á–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á",
    "swagger_issue": "–ø—Ä–æ–±–ª–µ–º–∞ –≤ Swagger —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—ó",
    "correct_endpoint": "–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π endpoint",
    "alternative_endpoints": ["–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ñ endpoints"],
    "explanation": "–ø–æ—è—Å–Ω–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º–∏",
    "user_message": "–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞",
    "suggestion": "–ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è –¥–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è"
}}
"""

    @staticmethod
    def get_endpoint_correction_prompt(user_query: str, incorrect_endpoint: Dict[str, Any], 
                                     api_error: Dict[str, Any]) -> str:
        """–ü—Ä–æ–º–ø—Ç –¥–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ endpoint –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ø–æ–º–∏–ª–∫–∏ API."""
        return f"""
–¢–∏ - –µ–∫—Å–ø–µ—Ä—Ç –∑ API. –í–∏–ø—Ä–∞–≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π endpoint –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ø–æ–º–∏–ª–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞.

–ó–ê–ü–ò–¢ –ö–û–†–ò–°–¢–£–í–ê–ß–ê: {user_query}

–ù–ï–ü–†–ê–í–ò–õ–¨–ù–ò–ô ENDPOINT:
{json.dumps(incorrect_endpoint, ensure_ascii=False, indent=2)}

–ü–û–ú–ò–õ–ö–ê –°–ï–†–í–ï–†–ê:
{json.dumps(api_error, ensure_ascii=False, indent=2)}

–ê–ù–ê–õ–Ü–ó –ü–û–ú–ò–õ–ö–ò:
- –ü–æ–º–∏–ª–∫–∞: "invalid input syntax for type uuid: \"{{id}}\""
- –¶–µ –æ–∑–Ω–∞—á–∞—î —â–æ endpoint –æ—á—ñ–∫—É—î UUID –ø–∞—Ä–∞–º–µ—Ç—Ä, –∞–ª–µ –æ—Ç—Ä–∏–º—É—î "{{id}}"
- –ú–æ–∂–ª–∏–≤–æ —Ü–µ endpoint –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó, –∞ –Ω–µ –≤—Å—ñ—Ö

–¢–ò–ü–û–í–Ü –ü–û–ú–ò–õ–ö–ò –¢–ê –á–• –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø:
1. "invalid input syntax for type uuid" ‚Üí endpoint –ø–æ—Ç—Ä–µ–±—É—î —Ä–µ–∞–ª—å–Ω–∏–π ID, –Ω–µ placeholder
2. "404 Not Found" ‚Üí endpoint –Ω–µ —ñ—Å–Ω—É—î –∞–±–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π URL
3. "400 Bad Request" ‚Üí –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∞–±–æ –¥–∞–Ω—ñ
4. "405 Method Not Allowed" ‚Üí –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π HTTP –º–µ—Ç–æ–¥

–ó–ê–í–î–ê–ù–ù–Ø:
1. –í–∏–∑–Ω–∞—á–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π endpoint –¥–ª—è –∑–∞–ø–∏—Ç—É
2. –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó - –∑–Ω–∞–π–¥–∏ endpoint –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
3. –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –æ–¥–Ω—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é - –≤–∏–ø—Ä–∞–≤ –ø–∞—Ä–∞–º–µ—Ç—Ä
4. –ü–æ—è—Å–Ω–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É —â–æ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è

–í–Ü–î–ü–û–í–Ü–î–¨ –£ –§–û–†–ú–ê–¢–Ü:
{{
    "correct_endpoint": "–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π endpoint",
    "explanation": "–ø–æ—è—Å–Ω–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º–∏",
    "user_message": "–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞",
    "retry_suggestion": "–ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ—ó —Å–ø—Ä–æ–±–∏"
}}
"""

    @staticmethod
    def get_swagger_retry_prompt(user_query: str, original_endpoint: Dict[str, Any], 
                                corrected_endpoint: Dict[str, Any]) -> str:
        """–ü—Ä–æ–º–ø—Ç –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ—ó —Å–ø—Ä–æ–±–∏ –∑ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–º endpoint."""
        return f"""
–¢–∏ - –µ–∫—Å–ø–µ—Ä—Ç –∑ API. –í–∏–∫–æ–Ω–∞–π –ø–æ–≤—Ç–æ—Ä–Ω—É —Å–ø—Ä–æ–±—É –∑ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–º endpoint.

–ó–ê–ü–ò–¢ –ö–û–†–ò–°–¢–£–í–ê–ß–ê: {user_query}

–û–†–ò–ì–Ü–ù–ê–õ–¨–ù–ò–ô ENDPOINT (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π):
{json.dumps(original_endpoint, ensure_ascii=False, indent=2)}

–í–ò–ü–†–ê–í–õ–ï–ù–ò–ô ENDPOINT:
{json.dumps(corrected_endpoint, ensure_ascii=False, indent=2)}

–ó–ê–í–î–ê–ù–ù–Ø:
1. –í–∏–∫–æ–Ω–∞–π –∑–∞–ø–∏—Ç –∑ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–º endpoint
2. –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ - –∑–º—ñ–Ω–∏ HTTP –º–µ—Ç–æ–¥
3. –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ - –¥–æ–¥–∞–π –∞–±–æ –≤–∏–¥–∞–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
4. –ü–æ–≤–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É

–ü–†–ê–í–ò–õ–ê –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø:
- –î–ª—è "–≤—Å—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó" –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π GET –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
- –î–ª—è "–∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è" –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π GET –∑ ID
- –î–ª—è "—Å—Ç–≤–æ—Ä–µ–Ω–Ω—è" –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π POST
- –î–ª—è "–æ–Ω–æ–≤–ª–µ–Ω–Ω—è" –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π PUT/PATCH
- –î–ª—è "–≤–∏–¥–∞–ª–µ–Ω–Ω—è" –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π DELETE

–í–Ü–î–ü–û–í–Ü–î–¨ –£ –§–û–†–ú–ê–¢–Ü:
{{
    "corrected_request": "–≤–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∑–∞–ø–∏—Ç",
    "expected_response": "–æ—á—ñ–∫—É–≤–∞–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å",
    "user_message": "–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"
}}
"""

    @staticmethod
    def get_endpoint_discovery_prompt(user_query: str, available_endpoints: List[Dict[str, Any]]) -> str:
        """–ü—Ä–æ–º–ø—Ç –¥–ª—è –ø–æ—à—É–∫—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ endpoint –∫–æ–ª–∏ Swagger —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞."""
        return f"""
–¢–∏ - –µ–∫—Å–ø–µ—Ä—Ç –∑ API. –ó–Ω–∞–π–¥–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π endpoint –∫–æ–ª–∏ Swagger —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—è –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ä–µ–∞–ª—å–Ω–æ–º—É API.

–ó–ê–ü–ò–¢ –ö–û–†–ò–°–¢–£–í–ê–ß–ê: {user_query}

–î–û–°–¢–£–ü–ù–Ü ENDPOINTS:
{json.dumps(available_endpoints, ensure_ascii=False, indent=2)}

–ó–ê–í–î–ê–ù–ù–Ø:
1. –ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π –∑–∞–ø–∏—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
2. –í–∏–∑–Ω–∞—á–∏ —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü—ñ—ó (GET, POST, PUT, DELETE)
3. –í–∏–∑–Ω–∞—á–∏ —Ä–µ—Å—É—Ä—Å (–∫–∞—Ç–µ–≥–æ—Ä—ñ—ó, —Ç–æ–≤–∞—Ä–∏, –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ, —Ç–æ—â–æ)
4. –ó–Ω–∞–π–¥–∏ –Ω–∞–π–±—ñ–ª—å—à –ø—ñ–¥—Ö–æ–¥—è—â–∏–π endpoint
5. –Ø–∫—â–æ —Ç–æ—á–Ω–æ–≥–æ endpoint –Ω–µ–º–∞—î - –∑–∞–ø—Ä–æ–ø–æ–Ω—É–π –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É

–ü–†–ê–í–ò–õ–ê –ü–û–®–£–ö–£:
- "–≤—Å—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó" ‚Üí —à—É–∫–∞–π GET –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
- "–∫–∞—Ç–µ–≥–æ—Ä—ñ—è –∑ ID" ‚Üí —à—É–∫–∞–π GET –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º
- "—Å—Ç–≤–æ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é" ‚Üí —à—É–∫–∞–π POST
- "–æ–Ω–æ–≤–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é" ‚Üí —à—É–∫–∞–π PUT/PATCH
- "–≤–∏–¥–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é" ‚Üí —à—É–∫–∞–π DELETE

–ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–Ü –ù–ê–ó–í–ò –†–ï–°–£–†–°–Ü–í:
- category/categories
- product/products
- user/users
- order/orders
- item/items

–í–Ü–î–ü–û–í–Ü–î–¨ –£ –§–û–†–ú–ê–¢–Ü:
{{
    "user_intent": "—â–æ —Ö–æ—á–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á",
    "operation_type": "GET|POST|PUT|DELETE",
    "resource": "–Ω–∞–∑–≤–∞ —Ä–µ—Å—É—Ä—Å—É",
    "best_match": "–Ω–∞–π–∫—Ä–∞—â–∏–π endpoint",
    "alternatives": ["–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ñ endpoints"],
    "confidence": "–≤—ñ–¥—Å–æ—Ç–æ–∫ –≤–ø–µ–≤–Ω–µ–Ω–æ—Å—Ç—ñ",
    "reasoning": "–ø–æ—è—Å–Ω–µ–Ω–Ω—è –≤–∏–±–æ—Ä—É"
}}
"""

    @staticmethod
    def get_user_friendly_error_message(error_type: str, user_query: str, 
                                      swagger_issue: str, suggestion: str) -> str:
        """–ì–µ–Ω–µ—Ä—É—î –¥—Ä—É–∂–µ–ª—é–±–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞."""
        
        error_messages = {
            "swagger_mismatch": f"""
‚ö†Ô∏è **–ü—Ä–æ–±–ª–µ–º–∞ –∑ Swagger —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—î—é**

üîç **–í–∞—à –∑–∞–ø–∏—Ç:** {user_query}

‚ùå **–ü—Ä–æ–±–ª–µ–º–∞:** {swagger_issue}

üí° **–†—ñ—à–µ–Ω–Ω—è:** {suggestion}

üîÑ **–©–æ —Ä–æ–±–∏–º–æ:** –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ endpoint —Ç–∞ –ø–æ–≤—Ç–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ.
""",
            
            "invalid_parameter": f"""
‚ö†Ô∏è **–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä**

üîç **–í–∞—à –∑–∞–ø–∏—Ç:** {user_query}

‚ùå **–ü—Ä–æ–±–ª–µ–º–∞:** {swagger_issue}

üí° **–†—ñ—à–µ–Ω–Ω—è:** {suggestion}

üîÑ **–©–æ —Ä–æ–±–∏–º–æ:** –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π endpoint –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤.
""",
            
            "missing_endpoint": f"""
‚ö†Ô∏è **–í—ñ–¥—Å—É—Ç–Ω—ñ–π endpoint**

üîç **–í–∞—à –∑–∞–ø–∏—Ç:** {user_query}

‚ùå **–ü—Ä–æ–±–ª–µ–º–∞:** {swagger_issue}

üí° **–†—ñ—à–µ–Ω–Ω—è:** {suggestion}

üîÑ **–©–æ —Ä–æ–±–∏–º–æ:** –®—É–∫–∞—î–º–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π endpoint.
""",
            
            "wrong_method": f"""
‚ö†Ô∏è **–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π HTTP –º–µ—Ç–æ–¥**

üîç **–í–∞—à –∑–∞–ø–∏—Ç:** {user_query}

‚ùå **–ü—Ä–æ–±–ª–µ–º–∞:** {swagger_issue}

üí° **–†—ñ—à–µ–Ω–Ω—è:** {suggestion}

üîÑ **–©–æ —Ä–æ–±–∏–º–æ:** –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π HTTP –º–µ—Ç–æ–¥.
"""
        }
        
        return error_messages.get(error_type, f"""
‚ö†Ô∏è **–ü–æ–º–∏–ª–∫–∞ API**

üîç **–í–∞—à –∑–∞–ø–∏—Ç:** {user_query}

‚ùå **–ü—Ä–æ–±–ª–µ–º–∞:** {swagger_issue}

üí° **–†—ñ—à–µ–Ω–Ω—è:** {suggestion}

üîÑ **–©–æ —Ä–æ–±–∏–º–æ:** –í–∏–ø—Ä–∞–≤–ª—è—î–º–æ –ø—Ä–æ–±–ª–µ–º—É —Ç–∞ –ø–æ–≤—Ç–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Ç.
""")

    @staticmethod
    def get_common_endpoint_patterns() -> Dict[str, Dict[str, str]]:
        """–ü–æ–≤–µ—Ä—Ç–∞—î –∑–∞–≥–∞–ª—å–Ω—ñ –ø–∞—Ç–µ—Ä–Ω–∏ endpoints –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π."""
        return {
            "get_all": {
                "pattern": "GET /api/{resource}",
                "example": "GET /api/categories",
                "description": "–û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –∑–∞–ø–∏—Å—ñ–≤",
                "swagger_issue": "Endpoint –º–∞—î –ø–∞—Ä–∞–º–µ—Ç—Ä {id} –∑–∞–º—ñ—Å—Ç—å –±—É—Ç–∏ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤"
            },
            "get_by_id": {
                "pattern": "GET /api/{resource}/{id}",
                "example": "GET /api/categories/123",
                "description": "–û—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–∞–ø–∏—Å—É –∑–∞ ID",
                "swagger_issue": "Endpoint –æ—á—ñ–∫—É—î —Ä–µ–∞–ª—å–Ω–∏–π ID, –Ω–µ placeholder"
            },
            "create": {
                "pattern": "POST /api/{resource}",
                "example": "POST /api/categories",
                "description": "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É",
                "swagger_issue": "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π HTTP –º–µ—Ç–æ–¥ –∞–±–æ URL"
            },
            "update": {
                "pattern": "PUT /api/{resource}/{id}",
                "example": "PUT /api/categories/123",
                "description": "–û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Å—É",
                "swagger_issue": "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π HTTP –º–µ—Ç–æ–¥ –∞–±–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π ID"
            },
            "delete": {
                "pattern": "DELETE /api/{resource}/{id}",
                "example": "DELETE /api/categories/123",
                "description": "–í–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞–ø–∏—Å—É",
                "swagger_issue": "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π HTTP –º–µ—Ç–æ–¥ –∞–±–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π ID"
            }
        }

# –ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
if __name__ == "__main__":
    # –ü—Ä–∏–∫–ª–∞–¥ –ø—Ä–æ–±–ª–µ–º–Ω–æ—ó —Å–∏—Ç—É–∞—Ü—ñ—ó
    user_query = "–ü–æ–∫–∞–∂–∏ –≤—Å—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó"
    
    swagger_endpoints = [
        {
            "url": "https://db62d2b2c3a5.ngrok-free.app/api/category/{id}",
            "method": "GET",
            "description": "Get a category by ID (Public)"
        }
    ]
    
    api_error = {
        "message": "invalid input syntax for type uuid: \"{id}\"",
        "error": "Bad Request",
        "statusCode": 400
    }
    
    # –ì–µ–Ω–µ—Ä—É—î–º–æ –ø—Ä–æ–º–ø—Ç –¥–ª—è –≤–∏—è–≤–ª–µ–Ω–Ω—è –Ω–µ–≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç—ñ
    detection_prompt = SwaggerErrorHandler.get_swagger_mismatch_detection_prompt(
        user_query, swagger_endpoints, api_error
    )
    
    print("üîç –ü—Ä–æ–º–ø—Ç –¥–ª—è –≤–∏—è–≤–ª–µ–Ω–Ω—è –Ω–µ–≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç—ñ Swagger:")
    print(detection_prompt)
    print()
    
    # –ì–µ–Ω–µ—Ä—É—î–º–æ –¥—Ä—É–∂–µ–ª—é–±–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
    error_message = SwaggerErrorHandler.get_user_friendly_error_message(
        "swagger_mismatch",
        user_query,
        "Swagger —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—è –º—ñ—Å—Ç–∏—Ç—å endpoint –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º {id} –∑–∞–º—ñ—Å—Ç—å endpoint –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π",
        "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ endpoint –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π"
    )
    
    print("üí¨ –î—Ä—É–∂–µ–ª—é–±–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É:")
    print(error_message)
    print()
    
    print("‚úÖ –ü—Ä–æ–º–ø—Ç–∏ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫ Swagger –≥–æ—Ç–æ–≤—ñ!")
