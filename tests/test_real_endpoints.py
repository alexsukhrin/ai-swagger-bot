#!/usr/bin/env python3
"""
–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä–µ–∞–ª—å–Ω–∏—Ö –µ–Ω–¥–ø–æ—ñ–Ω—Ç—ñ–≤ Clickone Shop API
"""

import requests

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
CLICKONE_SHOP_API_URL = "https://api.oneshop.click"


def test_real_api_endpoints():
    """–¢–µ—Å—Ç—É—î —Ä–µ–∞–ª—å–Ω—ñ –µ–Ω–¥–ø–æ—ñ–Ω—Ç–∏ API —Ç–∞ –ø–æ–∫–∞–∑—É—î —ó—Ö –∫—ñ–ª—å–∫—ñ—Å—Ç—å"""
    print("üîç –¢–µ—Å—Ç—É—é —Ä–µ–∞–ª—å–Ω—ñ –µ–Ω–¥–ø–æ—ñ–Ω—Ç–∏ API...")

    # –°–ø–∏—Å–æ–∫ –µ–Ω–¥–ø–æ—ñ–Ω—Ç—ñ–≤ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
    endpoints_to_test = [
        ("/api/categories", "GET"),
        ("/api/products", "GET"),
        ("/api/brands", "GET"),
        ("/api/orders", "GET"),
        ("/api/customers", "GET"),
        ("/api/users", "GET"),
        ("/api/collections", "GET"),
        ("/api/families", "GET"),
        ("/api/attributes", "GET"),
        ("/api/settings", "GET"),
        ("/api/warehouse", "GET"),
    ]

    working_endpoints = []

    for endpoint, method in endpoints_to_test:
        try:
            response = requests.get(
                f"{CLICKONE_SHOP_API_URL}{endpoint}",
                timeout=10,
                headers={"User-Agent": "AI-Swagger-Bot/1.0"},
            )

            if response.status_code == 200:
                print(f"‚úÖ {method} {endpoint}: HTTP {response.status_code}")
                working_endpoints.append(endpoint)
            elif response.status_code == 401:
                print(
                    f"üîí {method} {endpoint}: HTTP {response.status_code} (Unauthorized - –ø–æ—Ç—Ä–µ–±—É—î —Ç–æ–∫–µ–Ω)"
                )
                working_endpoints.append(endpoint)
            elif response.status_code == 404:
                print(f"‚ùå {method} {endpoint}: HTTP {response.status_code} (Not Found)")
            else:
                print(f"‚ö†Ô∏è  {method} {endpoint}: HTTP {response.status_code}")

        except Exception as e:
            print(f"‚ùå {method} {endpoint}: –ü–æ–º–∏–ª–∫–∞ - {e}")

    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:")
    print(f"   ‚úÖ –ü—Ä–∞—Ü—é—é—á—ñ –µ–Ω–¥–ø–æ—ñ–Ω—Ç–∏: {len(working_endpoints)}")
    print(f"   üìã –°–ø–∏—Å–æ–∫ –ø—Ä–∞—Ü—é—é—á–∏—Ö –µ–Ω–¥–ø–æ—ñ–Ω—Ç—ñ–≤:")
    for endpoint in working_endpoints:
        print(f"      ‚Ä¢ {endpoint}")

    return working_endpoints


def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    print("üöÄ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä–µ–∞–ª—å–Ω–∏—Ö –µ–Ω–¥–ø–æ—ñ–Ω—Ç—ñ–≤ Clickone Shop API")
    print("=" * 60)

    working_endpoints = test_real_api_endpoints()

    print(f"\nüéØ –í–∏—Å–Ω–æ–≤–æ–∫:")
    print(f"   Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è –ø–æ–∫–∞–∑—É—î —Ç—ñ–ª—å–∫–∏ 2 –µ–Ω–¥–ø–æ—ñ–Ω—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π")
    print(f"   –ê–ª–µ —Ä–µ–∞–ª—å–Ω–æ API –º–∞—î {len(working_endpoints)}+ –ø—Ä–∞—Ü—é—é—á–∏—Ö –µ–Ω–¥–ø–æ—ñ–Ω—Ç—ñ–≤")
    print(f"   –¶–µ –æ–∑–Ω–∞—á–∞—î, —â–æ /docs/ai-json - —Ü–µ –æ–±–º–µ–∂–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è –¥–ª—è AI")


if __name__ == "__main__":
    main()
