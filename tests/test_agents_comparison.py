#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è InteractiveSwaggerAgent:
–Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π –∞–≥–µ–Ω—Ç –∑ –¥—ñ–∞–ª–æ–≥–æ–º –¥–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫
"""

import logging
import os
import sys
from pathlib import Path

from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –∑ .env —Ñ–∞–π–ª—É
load_dotenv()

# –î–æ–¥–∞—î–º–æ src –¥–æ —à–ª—è—Ö—É
sys.path.append(os.path.join(os.path.dirname(__file__), "..", "src"))

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


def test_interactive_agent():
    """–¢–µ—Å—Ç —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ - –∑ –¥—ñ–∞–ª–æ–≥–æ–º –¥–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫."""
    print("\n" + "=" * 60)
    print("üß™ –¢–ï–°–¢: InteractiveSwaggerAgent (–Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π –∞–≥–µ–Ω—Ç)")
    print("=" * 60)

    try:
        from interactive_api_agent import InteractiveSwaggerAgent

        # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –∞–≥–µ–Ω—Ç–∞
        agent = InteractiveSwaggerAgent(
            swagger_spec_path="examples/swagger_specs/shop_api.json",
            enable_api_calls=False,  # –¢—ñ–ª—å–∫–∏ –ø—Ä–µ–≤—å—é
        )

        # –¢–µ—Å—Ç–æ–≤–∏–π –∑–∞–ø–∏—Ç
        query = "–°—Ç–≤–æ—Ä–∏ –Ω–æ–≤—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é"  # –ù–∞–≤–º–∏—Å–Ω–æ –Ω–µ–ø–æ–≤–Ω–∏–π –∑–∞–ø–∏—Ç

        print(f"üìù –ó–∞–ø–∏—Ç: {query}")
        print("-" * 40)

        response = agent.process_interactive_query(query, user_identifier="test_user")
        print(f"üì§ –í—ñ–¥–ø–æ–≤—ñ–¥—å:\n{response['response']}")
        print(f"üìä –°—Ç–∞—Ç—É—Å: {response['status']}")
        print(f"üîÑ –ü–æ—Ç—Ä–µ–±—É—î –¥–æ–¥–∞—Ç–∫–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó: {response['needs_followup']}")

        # –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
        if response.get("needs_followup"):
            print("\n" + "-" * 40)
            print("üîÑ –°–ò–ú–£–õ–Ø–¶–Ü–Ø –î–Ü–ê–õ–û–ì–£:")
            print("-" * 40)

            followup_query = "–î–æ–¥–∞–π –Ω–∞–∑–≤—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó: –ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞"
            print(f"üìù –î–æ–¥–∞—Ç–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç: {followup_query}")

            followup_response = agent.process_followup_query(
                followup_query, user_identifier="test_user"
            )
            print(f"üì§ –í—ñ–¥–ø–æ–≤—ñ–¥—å:\n{followup_response['response']}")
            print(f"üìä –°—Ç–∞—Ç—É—Å: {followup_response['status']}")

        # –ü–æ–∫–∞–∑—É—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é
        history = agent.get_conversation_history("test_user")
        print(f"\nüìö –Ü—Å—Ç–æ—Ä—ñ—è –≤–∑–∞—î–º–æ–¥—ñ–π ({len(history)} –∑–∞–ø–∏—Å—ñ–≤):")
        for i, interaction in enumerate(history[-3:], 1):
            print(f"{i}. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {interaction.get('user_message', '')}")
            print(
                f"   –ë–æ—Ç [{interaction.get('status', 'unknown')}]: {interaction.get('bot_response', '')[:100]}..."
            )

        print("\n‚úÖ –û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ InteractiveSwaggerAgent:")
        print("‚Ä¢ –ó–±–µ—Ä—ñ–≥–∞—î —ñ—Å—Ç–æ—Ä—ñ—é –≤–∑–∞—î–º–æ–¥—ñ–π")
        print("‚Ä¢ –ê–Ω–∞–ª—ñ–∑—É—î –ø–æ–º–∏–ª–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞")
        print("‚Ä¢ –ì–µ–Ω–µ—Ä—É—î –∑–∞–ø–∏—Ç–∏ –Ω–∞ –¥–æ–¥–∞—Ç–∫–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é")
        print("‚Ä¢ –ü—ñ–¥—Ç—Ä–∏–º—É—î –¥—ñ–∞–ª–æ–≥ –¥–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫")
        print("‚Ä¢ –ü–æ–≤—Ç–æ—Ä–Ω–æ –≤–∏–∫–æ–Ω—É—î –∑–∞–ø–∏—Ç–∏ –∑ –Ω–æ–≤–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é")

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")


def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É —Ç–µ—Å—Ç—É."""
    print("üöÄ –¢–ï–°–¢–£–í–ê–ù–ù–Ø INTERACTIVE SWAGGER AGENT")
    print("=" * 60)

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å API –∫–ª—é—á–∞
    if not os.getenv("OPENAI_API_KEY"):
        print("‚ùå OPENAI_API_KEY –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
        print("üí° –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –∑–º—ñ–Ω–Ω—É —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞:")
        print("   export OPENAI_API_KEY=your_api_key_here")
        print("   –∞–±–æ —Å—Ç–≤–æ—Ä—ñ—Ç—å .env —Ñ–∞–π–ª –∑ OPENAI_API_KEY=your_key")
        return

    # –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–µ—Å—Ç
    test_interactive_agent()

    print("\n" + "=" * 60)
    print("üìã –ü–Ü–î–°–£–ú–û–ö:")
    print("=" * 60)
    print("‚úÖ InteractiveSwaggerAgent:")
    print("   ‚úÖ –ó–±–µ—Ä—ñ–≥–∞—î —ñ—Å—Ç–æ—Ä—ñ—é –≤–∑–∞—î–º–æ–¥—ñ–π")
    print("   ‚úÖ –ê–Ω–∞–ª—ñ–∑—É—î –ø–æ–º–∏–ª–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞")
    print("   ‚úÖ –ì–µ–Ω–µ—Ä—É—î –∑–∞–ø–∏—Ç–∏ –Ω–∞ –¥–æ–¥–∞—Ç–∫–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é")
    print("   ‚úÖ –ü—ñ–¥—Ç—Ä–∏–º—É—î –¥—ñ–∞–ª–æ–≥ –¥–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫")
    print("   ‚úÖ –ü–æ–≤—Ç–æ—Ä–Ω–æ –≤–∏–∫–æ–Ω—É—î –∑–∞–ø–∏—Ç–∏ –∑ –Ω–æ–≤–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é")
    print()
    print("üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–Ü–Ø: InteractiveSwaggerAgent - –Ω–∞–π–∫—Ä–∞—â–∏–π –≤–∏–±—ñ—Ä –¥–ª—è –ø–æ–≤–Ω–æ—Ü—ñ–Ω–Ω–æ–≥–æ –¥—ñ–∞–ª–æ–≥—É!")


if __name__ == "__main__":
    main()
