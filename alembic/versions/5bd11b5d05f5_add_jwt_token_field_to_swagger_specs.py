"""Add jwt_token field to swagger_specs

Revision ID: 5bd11b5d05f5
Revises: f175caf04ca9
Create Date: 2025-08-09 16:41:49.253230

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "5bd11b5d05f5"
down_revision: Union[str, Sequence[str], None] = "f175caf04ca9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("idx_token_active"), table_name="api_tokens")
    op.drop_index(op.f("idx_token_expires"), table_name="api_tokens")
    op.drop_index(op.f("idx_token_user_swagger"), table_name="api_tokens")
    op.drop_table("api_tokens")
    op.add_column("swagger_specs", sa.Column("jwt_token", sa.Text(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("swagger_specs", "jwt_token")
    op.create_table(
        "api_tokens",
        sa.Column("id", sa.VARCHAR(length=36), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.VARCHAR(length=36), autoincrement=False, nullable=False),
        sa.Column("swagger_spec_id", sa.VARCHAR(length=36), autoincrement=False, nullable=False),
        sa.Column("token_name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("token_value", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("token_type", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("expires_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("last_used_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["swagger_spec_id"], ["swagger_specs.id"], name=op.f("api_tokens_swagger_spec_id_fkey")
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name=op.f("api_tokens_user_id_fkey")),
        sa.PrimaryKeyConstraint("id", name=op.f("api_tokens_pkey")),
        sa.UniqueConstraint(
            "user_id",
            "swagger_spec_id",
            "token_name",
            name=op.f("uq_user_swagger_token_name"),
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
    )
    op.create_index(
        op.f("idx_token_user_swagger"), "api_tokens", ["user_id", "swagger_spec_id"], unique=False
    )
    op.create_index(op.f("idx_token_expires"), "api_tokens", ["expires_at"], unique=False)
    op.create_index(op.f("idx_token_active"), "api_tokens", ["is_active"], unique=False)
    # ### end Alembic commands ###
